{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*! Select for DataTables 2.0.0\n * Â© SpryMedia Ltd - datatables.net/license/mit\n */\n\nimport jQuery from 'jquery';\nimport DataTable from 'datatables.net';\n\n// Allow reassignment of the $ variable\nlet $ = jQuery;\n\n// Version information for debugger\nDataTable.select = {};\nDataTable.select.version = '2.0.0';\nDataTable.select.init = function (dt) {\n  var ctx = dt.settings()[0];\n  if (!DataTable.versionCheck('2')) {\n    throw 'Warning: Select requires DataTables 2 or newer';\n  }\n  if (ctx._select) {\n    return;\n  }\n  var savedSelected = dt.state.loaded();\n  var selectAndSave = function (e, settings, data) {\n    if (data === null || data.select === undefined) {\n      return;\n    }\n\n    // Clear any currently selected rows, before restoring state\n    // None will be selected on first initialisation\n    if (dt.rows({\n      selected: true\n    }).any()) {\n      dt.rows().deselect();\n    }\n    if (data.select.rows !== undefined) {\n      dt.rows(data.select.rows).select();\n    }\n    if (dt.columns({\n      selected: true\n    }).any()) {\n      dt.columns().deselect();\n    }\n    if (data.select.columns !== undefined) {\n      dt.columns(data.select.columns).select();\n    }\n    if (dt.cells({\n      selected: true\n    }).any()) {\n      dt.cells().deselect();\n    }\n    if (data.select.cells !== undefined) {\n      for (var i = 0; i < data.select.cells.length; i++) {\n        dt.cell(data.select.cells[i].row, data.select.cells[i].column).select();\n      }\n    }\n    dt.state.save();\n  };\n  dt.on('stateSaveParams', function (e, settings, data) {\n    data.select = {};\n    data.select.rows = dt.rows({\n      selected: true\n    }).ids(true).toArray();\n    data.select.columns = dt.columns({\n      selected: true\n    })[0];\n    data.select.cells = dt.cells({\n      selected: true\n    })[0].map(function (coords) {\n      return {\n        row: dt.row(coords.row).id(true),\n        column: coords.column\n      };\n    });\n  }).on('stateLoadParams', selectAndSave).one('init', function () {\n    selectAndSave(undefined, undefined, savedSelected);\n  });\n  var init = ctx.oInit.select;\n  var defaults = DataTable.defaults.select;\n  var opts = init === undefined ? defaults : init;\n\n  // Set defaults\n  var items = 'row';\n  var style = 'api';\n  var blurable = false;\n  var toggleable = true;\n  var info = true;\n  var selector = 'td, th';\n  var className = 'selected';\n  var headerCheckbox = true;\n  var setStyle = false;\n  ctx._select = {\n    infoEls: []\n  };\n\n  // Initialisation customisations\n  if (opts === true) {\n    style = 'os';\n    setStyle = true;\n  } else if (typeof opts === 'string') {\n    style = opts;\n    setStyle = true;\n  } else if ($.isPlainObject(opts)) {\n    if (opts.blurable !== undefined) {\n      blurable = opts.blurable;\n    }\n    if (opts.toggleable !== undefined) {\n      toggleable = opts.toggleable;\n    }\n    if (opts.info !== undefined) {\n      info = opts.info;\n    }\n    if (opts.items !== undefined) {\n      items = opts.items;\n    }\n    if (opts.style !== undefined) {\n      style = opts.style;\n      setStyle = true;\n    } else {\n      style = 'os';\n      setStyle = true;\n    }\n    if (opts.selector !== undefined) {\n      selector = opts.selector;\n    }\n    if (opts.className !== undefined) {\n      className = opts.className;\n    }\n    if (opts.headerCheckbox !== undefined) {\n      headerCheckbox = opts.headerCheckbox;\n    }\n  }\n  dt.select.selector(selector);\n  dt.select.items(items);\n  dt.select.style(style);\n  dt.select.blurable(blurable);\n  dt.select.toggleable(toggleable);\n  dt.select.info(info);\n  ctx._select.className = className;\n\n  // If the init options haven't enabled select, but there is a selectable\n  // class name, then enable\n  if (!setStyle && $(dt.table().node()).hasClass('selectable')) {\n    dt.select.style('os');\n  }\n\n  // Insert a checkbox into the header if needed - might need to wait\n  // for init complete, or it might already be done\n  if (headerCheckbox) {\n    initCheckboxHeader(dt);\n    dt.on('init', function () {\n      initCheckboxHeader(dt);\n    });\n  }\n};\n\n/*\n\nSelect is a collection of API methods, event handlers, event emitters and\nbuttons (for the `Buttons` extension) for DataTables. It provides the following\nfeatures, with an overview of how they are implemented:\n\n## Selection of rows, columns and cells. Whether an item is selected or not is\n   stored in:\n\n* rows: a `_select_selected` property which contains a boolean value of the\n  DataTables' `aoData` object for each row\n* columns: a `_select_selected` property which contains a boolean value of the\n  DataTables' `aoColumns` object for each column\n* cells: a `_selected_cells` property which contains an array of boolean values\n  of the `aoData` object for each row. The array is the same length as the\n  columns array, with each element of it representing a cell.\n\nThis method of using boolean flags allows Select to operate when nodes have not\nbeen created for rows / cells (DataTables' defer rendering feature).\n\n## API methods\n\nA range of API methods are available for triggering selection and de-selection\nof rows. Methods are also available to configure the selection events that can\nbe triggered by an end user (such as which items are to be selected). To a large\nextent, these of API methods *is* Select. It is basically a collection of helper\nfunctions that can be used to select items in a DataTable.\n\nConfiguration of select is held in the object `_select` which is attached to the\nDataTables settings object on initialisation. Select being available on a table\nis not optional when Select is loaded, but its default is for selection only to\nbe available via the API - so the end user wouldn't be able to select rows\nwithout additional configuration.\n\nThe `_select` object contains the following properties:\n\n```\n{\n\titems:string       - Can be `rows`, `columns` or `cells`. Defines what item \n\t                     will be selected if the user is allowed to activate row\n\t                     selection using the mouse.\n\tstyle:string       - Can be `none`, `single`, `multi` or `os`. Defines the\n\t                     interaction style when selecting items\n\tblurable:boolean   - If row selection can be cleared by clicking outside of\n\t                     the table\n\ttoggleable:boolean - If row selection can be cancelled by repeated clicking\n\t                     on the row\n\tinfo:boolean       - If the selection summary should be shown in the table\n\t                     information elements\n\tinfoEls:element[]  - List of HTML elements with info elements for a table\n}\n```\n\nIn addition to the API methods, Select also extends the DataTables selector\noptions for rows, columns and cells adding a `selected` option to the selector\noptions object, allowing the developer to select only selected items or\nunselected items.\n\n## Mouse selection of items\n\nClicking on items can be used to select items. This is done by a simple event\nhandler that will select the items using the API methods.\n\n */\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Local functions\n */\n\n/**\n * Add one or more cells to the selection when shift clicking in OS selection\n * style cell selection.\n *\n * Cell range is more complicated than row and column as we want to select\n * in the visible grid rather than by index in sequence. For example, if you\n * click first in cell 1-1 and then shift click in 2-2 - cells 1-2 and 2-1\n * should also be selected (and not 1-3, 1-4. etc)\n *\n * @param  {DataTable.Api} dt   DataTable\n * @param  {object}        idx  Cell index to select to\n * @param  {object}        last Cell index to select from\n * @private\n */\nfunction cellRange(dt, idx, last) {\n  var indexes;\n  var columnIndexes;\n  var rowIndexes;\n  var selectColumns = function (start, end) {\n    if (start > end) {\n      var tmp = end;\n      end = start;\n      start = tmp;\n    }\n    var record = false;\n    return dt.columns(':visible').indexes().filter(function (i) {\n      if (i === start) {\n        record = true;\n      }\n      if (i === end) {\n        // not else if, as start might === end\n        record = false;\n        return true;\n      }\n      return record;\n    });\n  };\n  var selectRows = function (start, end) {\n    var indexes = dt.rows({\n      search: 'applied'\n    }).indexes();\n\n    // Which comes first - might need to swap\n    if (indexes.indexOf(start) > indexes.indexOf(end)) {\n      var tmp = end;\n      end = start;\n      start = tmp;\n    }\n    var record = false;\n    return indexes.filter(function (i) {\n      if (i === start) {\n        record = true;\n      }\n      if (i === end) {\n        record = false;\n        return true;\n      }\n      return record;\n    });\n  };\n  if (!dt.cells({\n    selected: true\n  }).any() && !last) {\n    // select from the top left cell to this one\n    columnIndexes = selectColumns(0, idx.column);\n    rowIndexes = selectRows(0, idx.row);\n  } else {\n    // Get column indexes between old and new\n    columnIndexes = selectColumns(last.column, idx.column);\n    rowIndexes = selectRows(last.row, idx.row);\n  }\n  indexes = dt.cells(rowIndexes, columnIndexes).flatten();\n  if (!dt.cells(idx, {\n    selected: true\n  }).any()) {\n    // Select range\n    dt.cells(indexes).select();\n  } else {\n    // Deselect range\n    dt.cells(indexes).deselect();\n  }\n}\n\n/**\n * Disable mouse selection by removing the selectors\n *\n * @param {DataTable.Api} dt DataTable to remove events from\n * @private\n */\nfunction disableMouseSelection(dt) {\n  var ctx = dt.settings()[0];\n  var selector = ctx._select.selector;\n  $(dt.table().container()).off('mousedown.dtSelect', selector).off('mouseup.dtSelect', selector).off('click.dtSelect', selector);\n  $('body').off('click.dtSelect' + _safeId(dt.table().node()));\n}\n\n/**\n * Attach mouse listeners to the table to allow mouse selection of items\n *\n * @param {DataTable.Api} dt DataTable to remove events from\n * @private\n */\nfunction enableMouseSelection(dt) {\n  var container = $(dt.table().container());\n  var ctx = dt.settings()[0];\n  var selector = ctx._select.selector;\n  var matchSelection;\n  container.on('mousedown.dtSelect', selector, function (e) {\n    // Disallow text selection for shift clicking on the table so multi\n    // element selection doesn't look terrible!\n    if (e.shiftKey || e.metaKey || e.ctrlKey) {\n      container.css('-moz-user-select', 'none').one('selectstart.dtSelect', selector, function () {\n        return false;\n      });\n    }\n    if (window.getSelection) {\n      matchSelection = window.getSelection();\n    }\n  }).on('mouseup.dtSelect', selector, function () {\n    // Allow text selection to occur again, Mozilla style (tested in FF\n    // 35.0.1 - still required)\n    container.css('-moz-user-select', '');\n  }).on('click.dtSelect', selector, function (e) {\n    var items = dt.select.items();\n    var idx;\n\n    // If text was selected (click and drag), then we shouldn't change\n    // the row's selected state\n    if (matchSelection) {\n      var selection = window.getSelection();\n\n      // If the element that contains the selection is not in the table, we can ignore it\n      // This can happen if the developer selects text from the click event\n      if (!selection.anchorNode || $(selection.anchorNode).closest('table')[0] === dt.table().node()) {\n        if (selection !== matchSelection) {\n          return;\n        }\n      }\n    }\n    var ctx = dt.settings()[0];\n    var container = dt.table().container();\n\n    // Ignore clicks inside a sub-table\n    if ($(e.target).closest('div.dt-container')[0] != container) {\n      return;\n    }\n    var cell = dt.cell($(e.target).closest('td, th'));\n\n    // Check the cell actually belongs to the host DataTable (so child\n    // rows, etc, are ignored)\n    if (!cell.any()) {\n      return;\n    }\n    var event = $.Event('user-select.dt');\n    eventTrigger(dt, event, [items, cell, e]);\n    if (event.isDefaultPrevented()) {\n      return;\n    }\n    var cellIndex = cell.index();\n    if (items === 'row') {\n      idx = cellIndex.row;\n      typeSelect(e, dt, ctx, 'row', idx);\n    } else if (items === 'column') {\n      idx = cell.index().column;\n      typeSelect(e, dt, ctx, 'column', idx);\n    } else if (items === 'cell') {\n      idx = cell.index();\n      typeSelect(e, dt, ctx, 'cell', idx);\n    }\n    ctx._select_lastCell = cellIndex;\n  });\n\n  // Blurable\n  $('body').on('click.dtSelect' + _safeId(dt.table().node()), function (e) {\n    if (ctx._select.blurable) {\n      // If the click was inside the DataTables container, don't blur\n      if ($(e.target).parents().filter(dt.table().container()).length) {\n        return;\n      }\n\n      // Ignore elements which have been removed from the DOM (i.e. paging\n      // buttons)\n      if ($(e.target).parents('html').length === 0) {\n        return;\n      }\n\n      // Don't blur in Editor form\n      if ($(e.target).parents('div.DTE').length) {\n        return;\n      }\n      var event = $.Event('select-blur.dt');\n      eventTrigger(dt, event, [e.target, e]);\n      if (event.isDefaultPrevented()) {\n        return;\n      }\n      clear(ctx, true);\n    }\n  });\n}\n\n/**\n * Trigger an event on a DataTable\n *\n * @param {DataTable.Api} api      DataTable to trigger events on\n * @param  {boolean}      selected true if selected, false if deselected\n * @param  {string}       type     Item type acting on\n * @param  {boolean}      any      Require that there are values before\n *     triggering\n * @private\n */\nfunction eventTrigger(api, type, args, any) {\n  if (any && !api.flatten().length) {\n    return;\n  }\n  if (typeof type === 'string') {\n    type = type + '.dt';\n  }\n  args.unshift(api);\n  $(api.table().node()).trigger(type, args);\n}\n\n/**\n * Update the information element of the DataTable showing information about the\n * items selected. This is done by adding tags to the existing text\n *\n * @param {DataTable.Api} api DataTable to update\n * @private\n */\nfunction info(api, node) {\n  if (api.select.style() === 'api' || api.select.info() === false) {\n    return;\n  }\n  var rows = api.rows({\n    selected: true\n  }).flatten().length;\n  var columns = api.columns({\n    selected: true\n  }).flatten().length;\n  var cells = api.cells({\n    selected: true\n  }).flatten().length;\n  var add = function (el, name, num) {\n    el.append($('<span class=\"select-item\"/>').append(api.i18n('select.' + name + 's', {\n      _: '%d ' + name + 's selected',\n      0: '',\n      1: '1 ' + name + ' selected'\n    }, num)));\n  };\n  var el = $(node);\n  var output = $('<span class=\"select-info\"/>');\n  add(output, 'row', rows);\n  add(output, 'column', columns);\n  add(output, 'cell', cells);\n  var existing = el.children('span.select-info');\n  if (existing.length) {\n    existing.remove();\n  }\n  if (output.text() !== '') {\n    el.append(output);\n  }\n}\n\n/**\n * Add a checkbox to the header for checkbox columns, allowing all rows to\n * be selected, deselected or just to show the state.\n *\n * @param {*} dt API\n */\nfunction initCheckboxHeader(dt) {\n  // Find any checkbox column(s)\n  dt.columns('.dt-select').every(function () {\n    var header = this.header();\n    if (!$('input', header).length) {\n      // If no checkbox yet, insert one\n      var input = $('<input>').attr({\n        class: 'dt-select-checkbox',\n        type: 'checkbox',\n        'aria-label': dt.i18n('select.aria.headerCheckbox') || 'Select all rows'\n      }).appendTo(header).on('change', function () {\n        if (this.checked) {\n          dt.rows({\n            search: 'applied'\n          }).select();\n        } else {\n          dt.rows({\n            selected: true\n          }).deselect();\n        }\n      }).on('click', function (e) {\n        e.stopPropagation();\n      });\n\n      // Update the header checkbox's state when the selection in the\n      // table changes\n      dt.on('draw select deselect', function (e, pass, type) {\n        if (type === 'row' || !type) {\n          var count = dt.rows({\n            selected: true\n          }).count();\n          var search = dt.rows({\n            search: 'applied',\n            selected: true\n          }).count();\n          var available = dt.rows({\n            search: 'applied'\n          }).count();\n          if (search && search <= count && search === available) {\n            input.prop('checked', true).prop('indeterminate', false);\n          } else if (search === 0 && count === 0) {\n            input.prop('checked', false).prop('indeterminate', false);\n          } else {\n            input.prop('checked', false).prop('indeterminate', true);\n          }\n        }\n      });\n    }\n  });\n}\n\n/**\n * Initialisation of a new table. Attach event handlers and callbacks to allow\n * Select to operate correctly.\n *\n * This will occur _after_ the initial DataTables initialisation, although\n * before Ajax data is rendered, if there is ajax data\n *\n * @param  {DataTable.settings} ctx Settings object to operate on\n * @private\n */\nfunction init(ctx) {\n  var api = new DataTable.Api(ctx);\n  ctx._select_init = true;\n\n  // Row callback so that classes can be added to rows and cells if the item\n  // was selected before the element was created. This will happen with the\n  // `deferRender` option enabled.\n  //\n  // This method of attaching to `aoRowCreatedCallback` is a hack until\n  // DataTables has proper events for row manipulation If you are reviewing\n  // this code to create your own plug-ins, please do not do this!\n  ctx.aoRowCreatedCallback.push(function (row, data, index) {\n    var i, ien;\n    var d = ctx.aoData[index];\n\n    // Row\n    if (d._select_selected) {\n      $(row).addClass(ctx._select.className);\n    }\n\n    // Cells and columns - if separated out, we would need to do two\n    // loops, so it makes sense to combine them into a single one\n    for (i = 0, ien = ctx.aoColumns.length; i < ien; i++) {\n      if (ctx.aoColumns[i]._select_selected || d._selected_cells && d._selected_cells[i]) {\n        $(d.anCells[i]).addClass(ctx._select.className);\n      }\n    }\n  });\n\n  // On Ajax reload we want to reselect all rows which are currently selected,\n  // if there is an rowId (i.e. a unique value to identify each row with)\n  api.on('preXhr.dt.dtSelect', function (e, settings) {\n    if (settings !== api.settings()[0]) {\n      // Not triggered by our DataTable!\n      return;\n    }\n\n    // note that column selection doesn't need to be cached and then\n    // reselected, as they are already selected\n    var rows = api.rows({\n      selected: true\n    }).ids(true).filter(function (d) {\n      return d !== undefined;\n    });\n    var cells = api.cells({\n      selected: true\n    }).eq(0).map(function (cellIdx) {\n      var id = api.row(cellIdx.row).id(true);\n      return id ? {\n        row: id,\n        column: cellIdx.column\n      } : undefined;\n    }).filter(function (d) {\n      return d !== undefined;\n    });\n\n    // On the next draw, reselect the currently selected items\n    api.one('draw.dt.dtSelect', function () {\n      api.rows(rows).select();\n\n      // `cells` is not a cell index selector, so it needs a loop\n      if (cells.any()) {\n        cells.each(function (id) {\n          api.cells(id.row, id.column).select();\n        });\n      }\n    });\n  });\n\n  // Update the table information element with selected item summary\n  api.on('info.dt', function (e, ctx, node) {\n    // Store the info node for updating on select / deselect\n    if (!ctx._select.infoEls.includes(node)) {\n      ctx._select.infoEls.push(node);\n    }\n    info(api, node);\n  });\n  api.on('select.dtSelect.dt deselect.dtSelect.dt', function () {\n    ctx._select.infoEls.forEach(function (el) {\n      info(api, el);\n    });\n    api.state.save();\n  });\n\n  // Clean up and release\n  api.on('destroy.dtSelect', function () {\n    // Remove class directly rather than calling deselect - which would trigger events\n    $(api.rows({\n      selected: true\n    }).nodes()).removeClass(api.settings()[0]._select.className);\n    disableMouseSelection(api);\n    api.off('.dtSelect');\n    $('body').off('.dtSelect' + _safeId(api.table().node()));\n  });\n}\n\n/**\n * Add one or more items (rows or columns) to the selection when shift clicking\n * in OS selection style\n *\n * @param  {DataTable.Api} dt   DataTable\n * @param  {string}        type Row or column range selector\n * @param  {object}        idx  Item index to select to\n * @param  {object}        last Item index to select from\n * @private\n */\nfunction rowColumnRange(dt, type, idx, last) {\n  // Add a range of rows from the last selected row to this one\n  var indexes = dt[type + 's']({\n    search: 'applied'\n  }).indexes();\n  var idx1 = indexes.indexOf(last);\n  var idx2 = indexes.indexOf(idx);\n  if (!dt[type + 's']({\n    selected: true\n  }).any() && idx1 === -1) {\n    // select from top to here - slightly odd, but both Windows and Mac OS\n    // do this\n    indexes.splice(indexes.indexOf(idx) + 1, indexes.length);\n  } else {\n    // reverse so we can shift click 'up' as well as down\n    if (idx1 > idx2) {\n      var tmp = idx2;\n      idx2 = idx1;\n      idx1 = tmp;\n    }\n    indexes.splice(idx2 + 1, indexes.length);\n    indexes.splice(0, idx1);\n  }\n  if (!dt[type](idx, {\n    selected: true\n  }).any()) {\n    // Select range\n    dt[type + 's'](indexes).select();\n  } else {\n    // Deselect range - need to keep the clicked on row selected\n    indexes.splice(indexes.indexOf(idx), 1);\n    dt[type + 's'](indexes).deselect();\n  }\n}\n\n/**\n * Clear all selected items\n *\n * @param  {DataTable.settings} ctx Settings object of the host DataTable\n * @param  {boolean} [force=false] Force the de-selection to happen, regardless\n *     of selection style\n * @private\n */\nfunction clear(ctx, force) {\n  if (force || ctx._select.style === 'single') {\n    var api = new DataTable.Api(ctx);\n    api.rows({\n      selected: true\n    }).deselect();\n    api.columns({\n      selected: true\n    }).deselect();\n    api.cells({\n      selected: true\n    }).deselect();\n  }\n}\n\n/**\n * Select items based on the current configuration for style and items.\n *\n * @param  {object}             e    Mouse event object\n * @param  {DataTables.Api}     dt   DataTable\n * @param  {DataTable.settings} ctx  Settings object of the host DataTable\n * @param  {string}             type Items to select\n * @param  {int|object}         idx  Index of the item to select\n * @private\n */\nfunction typeSelect(e, dt, ctx, type, idx) {\n  var style = dt.select.style();\n  var toggleable = dt.select.toggleable();\n  var isSelected = dt[type](idx, {\n    selected: true\n  }).any();\n  if (isSelected && !toggleable) {\n    return;\n  }\n  if (style === 'os') {\n    if (e.ctrlKey || e.metaKey) {\n      // Add or remove from the selection\n      dt[type](idx).select(!isSelected);\n    } else if (e.shiftKey) {\n      if (type === 'cell') {\n        cellRange(dt, idx, ctx._select_lastCell || null);\n      } else {\n        rowColumnRange(dt, type, idx, ctx._select_lastCell ? ctx._select_lastCell[type] : null);\n      }\n    } else {\n      // No cmd or shift click - deselect if selected, or select\n      // this row only\n      var selected = dt[type + 's']({\n        selected: true\n      });\n      if (isSelected && selected.flatten().length === 1) {\n        dt[type](idx).deselect();\n      } else {\n        selected.deselect();\n        dt[type](idx).select();\n      }\n    }\n  } else if (style == 'multi+shift') {\n    if (e.shiftKey) {\n      if (type === 'cell') {\n        cellRange(dt, idx, ctx._select_lastCell || null);\n      } else {\n        rowColumnRange(dt, type, idx, ctx._select_lastCell ? ctx._select_lastCell[type] : null);\n      }\n    } else {\n      dt[type](idx).select(!isSelected);\n    }\n  } else {\n    dt[type](idx).select(!isSelected);\n  }\n}\nfunction _safeId(node) {\n  return node.id.replace(/[^a-zA-Z0-9\\-\\_]/g, '-');\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables selectors\n */\n\n// row and column are basically identical just assigned to different properties\n// and checking a different array, so we can dynamically create the functions to\n// reduce the code size\n$.each([{\n  type: 'row',\n  prop: 'aoData'\n}, {\n  type: 'column',\n  prop: 'aoColumns'\n}], function (i, o) {\n  DataTable.ext.selector[o.type].push(function (settings, opts, indexes) {\n    var selected = opts.selected;\n    var data;\n    var out = [];\n    if (selected !== true && selected !== false) {\n      return indexes;\n    }\n    for (var i = 0, ien = indexes.length; i < ien; i++) {\n      data = settings[o.prop][indexes[i]];\n      if (data && (selected === true && data._select_selected === true || selected === false && !data._select_selected)) {\n        out.push(indexes[i]);\n      }\n    }\n    return out;\n  });\n});\nDataTable.ext.selector.cell.push(function (settings, opts, cells) {\n  var selected = opts.selected;\n  var rowData;\n  var out = [];\n  if (selected === undefined) {\n    return cells;\n  }\n  for (var i = 0, ien = cells.length; i < ien; i++) {\n    rowData = settings.aoData[cells[i].row];\n    if (rowData && (selected === true && rowData._selected_cells && rowData._selected_cells[cells[i].column] === true || selected === false && (!rowData._selected_cells || !rowData._selected_cells[cells[i].column]))) {\n      out.push(cells[i]);\n    }\n  }\n  return out;\n});\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables API\n *\n * For complete documentation, please refer to the docs/api directory or the\n * DataTables site\n */\n\n// Local variables to improve compression\nvar apiRegister = DataTable.Api.register;\nvar apiRegisterPlural = DataTable.Api.registerPlural;\napiRegister('select()', function () {\n  return this.iterator('table', function (ctx) {\n    DataTable.select.init(new DataTable.Api(ctx));\n  });\n});\napiRegister('select.blurable()', function (flag) {\n  if (flag === undefined) {\n    return this.context[0]._select.blurable;\n  }\n  return this.iterator('table', function (ctx) {\n    ctx._select.blurable = flag;\n  });\n});\napiRegister('select.toggleable()', function (flag) {\n  if (flag === undefined) {\n    return this.context[0]._select.toggleable;\n  }\n  return this.iterator('table', function (ctx) {\n    ctx._select.toggleable = flag;\n  });\n});\napiRegister('select.info()', function (flag) {\n  if (flag === undefined) {\n    return this.context[0]._select.info;\n  }\n  return this.iterator('table', function (ctx) {\n    ctx._select.info = flag;\n  });\n});\napiRegister('select.items()', function (items) {\n  if (items === undefined) {\n    return this.context[0]._select.items;\n  }\n  return this.iterator('table', function (ctx) {\n    ctx._select.items = items;\n    eventTrigger(new DataTable.Api(ctx), 'selectItems', [items]);\n  });\n});\n\n// Takes effect from the _next_ selection. None disables future selection, but\n// does not clear the current selection. Use the `deselect` methods for that\napiRegister('select.style()', function (style) {\n  if (style === undefined) {\n    return this.context[0]._select.style;\n  }\n  return this.iterator('table', function (ctx) {\n    if (!ctx._select) {\n      DataTable.select.init(new DataTable.Api(ctx));\n    }\n    if (!ctx._select_init) {\n      init(ctx);\n    }\n    ctx._select.style = style;\n\n    // Add / remove mouse event handlers. They aren't required when only\n    // API selection is available\n    var dt = new DataTable.Api(ctx);\n    disableMouseSelection(dt);\n    if (style !== 'api') {\n      enableMouseSelection(dt);\n    }\n    eventTrigger(new DataTable.Api(ctx), 'selectStyle', [style]);\n  });\n});\napiRegister('select.selector()', function (selector) {\n  if (selector === undefined) {\n    return this.context[0]._select.selector;\n  }\n  return this.iterator('table', function (ctx) {\n    disableMouseSelection(new DataTable.Api(ctx));\n    ctx._select.selector = selector;\n    if (ctx._select.style !== 'api') {\n      enableMouseSelection(new DataTable.Api(ctx));\n    }\n  });\n});\napiRegister('select.last()', function (set) {\n  let ctx = this.context[0];\n  if (set) {\n    ctx._select_lastCell = set;\n    return this;\n  }\n  return ctx._select_lastCell;\n});\napiRegisterPlural('rows().select()', 'row().select()', function (select) {\n  var api = this;\n  if (select === false) {\n    return this.deselect();\n  }\n  this.iterator('row', function (ctx, idx) {\n    clear(ctx);\n\n    // There is a good amount of knowledge of DataTables internals in\n    // this function. It _could_ be done without that, but it would hurt\n    // performance (or DT would need new APIs for this work)\n    var dtData = ctx.aoData[idx];\n    var dtColumns = ctx.aoColumns;\n    $(dtData.nTr).addClass(ctx._select.className);\n    dtData._select_selected = true;\n    for (var i = 0; i < dtColumns.length; i++) {\n      var col = dtColumns[i];\n      if (col.sType === 'select-checkbox') {\n        // Make sure the checkbox shows the right state\n        $('input.dt-select-checkbox', dtData.anCells[i]).prop('checked', true);\n\n        // Invalidate the sort data for this column\n        dtData._aSortData[i] = null;\n      }\n    }\n  });\n  this.iterator('table', function (ctx, i) {\n    eventTrigger(api, 'select', ['row', api[i]], true);\n  });\n  return this;\n});\napiRegister('row().selected()', function () {\n  var ctx = this.context[0];\n  if (ctx && this.length && ctx.aoData[this[0]] && ctx.aoData[this[0]]._select_selected) {\n    return true;\n  }\n  return false;\n});\napiRegisterPlural('columns().select()', 'column().select()', function (select) {\n  var api = this;\n  if (select === false) {\n    return this.deselect();\n  }\n  this.iterator('column', function (ctx, idx) {\n    clear(ctx);\n    ctx.aoColumns[idx]._select_selected = true;\n    var column = new DataTable.Api(ctx).column(idx);\n    $(column.header()).addClass(ctx._select.className);\n    $(column.footer()).addClass(ctx._select.className);\n    column.nodes().to$().addClass(ctx._select.className);\n  });\n  this.iterator('table', function (ctx, i) {\n    eventTrigger(api, 'select', ['column', api[i]], true);\n  });\n  return this;\n});\napiRegister('column().selected()', function () {\n  var ctx = this.context[0];\n  if (ctx && this.length && ctx.aoColumns[this[0]] && ctx.aoColumns[this[0]]._select_selected) {\n    return true;\n  }\n  return false;\n});\napiRegisterPlural('cells().select()', 'cell().select()', function (select) {\n  var api = this;\n  if (select === false) {\n    return this.deselect();\n  }\n  this.iterator('cell', function (ctx, rowIdx, colIdx) {\n    clear(ctx);\n    var data = ctx.aoData[rowIdx];\n    if (data._selected_cells === undefined) {\n      data._selected_cells = [];\n    }\n    data._selected_cells[colIdx] = true;\n    if (data.anCells) {\n      $(data.anCells[colIdx]).addClass(ctx._select.className);\n    }\n  });\n  this.iterator('table', function (ctx, i) {\n    eventTrigger(api, 'select', ['cell', api.cells(api[i]).indexes().toArray()], true);\n  });\n  return this;\n});\napiRegister('cell().selected()', function () {\n  var ctx = this.context[0];\n  if (ctx && this.length) {\n    var row = ctx.aoData[this[0][0].row];\n    if (row && row._selected_cells && row._selected_cells[this[0][0].column]) {\n      return true;\n    }\n  }\n  return false;\n});\napiRegisterPlural('rows().deselect()', 'row().deselect()', function () {\n  var api = this;\n  this.iterator('row', function (ctx, idx) {\n    // Like the select action, this has a lot of knowledge about DT internally\n    var dtData = ctx.aoData[idx];\n    var dtColumns = ctx.aoColumns;\n    $(dtData.nTr).removeClass(ctx._select.className);\n    dtData._select_selected = false;\n    ctx._select_lastCell = null;\n    for (var i = 0; i < dtColumns.length; i++) {\n      var col = dtColumns[i];\n      if (col.sType === 'select-checkbox') {\n        // Make sure the checkbox shows the right state\n        $('input.dt-select-checkbox', dtData.anCells[i]).prop('checked', false);\n\n        // Invalidate the sort data for this column\n        dtData._aSortData[i] = null;\n      }\n    }\n  });\n  this.iterator('table', function (ctx, i) {\n    eventTrigger(api, 'deselect', ['row', api[i]], true);\n  });\n  return this;\n});\napiRegisterPlural('columns().deselect()', 'column().deselect()', function () {\n  var api = this;\n  this.iterator('column', function (ctx, idx) {\n    ctx.aoColumns[idx]._select_selected = false;\n    var api = new DataTable.Api(ctx);\n    var column = api.column(idx);\n    $(column.header()).removeClass(ctx._select.className);\n    $(column.footer()).removeClass(ctx._select.className);\n\n    // Need to loop over each cell, rather than just using\n    // `column().nodes()` as cells which are individually selected should\n    // not have the `selected` class removed from them\n    api.cells(null, idx).indexes().each(function (cellIdx) {\n      var data = ctx.aoData[cellIdx.row];\n      var cellSelected = data._selected_cells;\n      if (data.anCells && (!cellSelected || !cellSelected[cellIdx.column])) {\n        $(data.anCells[cellIdx.column]).removeClass(ctx._select.className);\n      }\n    });\n  });\n  this.iterator('table', function (ctx, i) {\n    eventTrigger(api, 'deselect', ['column', api[i]], true);\n  });\n  return this;\n});\napiRegisterPlural('cells().deselect()', 'cell().deselect()', function () {\n  var api = this;\n  this.iterator('cell', function (ctx, rowIdx, colIdx) {\n    var data = ctx.aoData[rowIdx];\n    if (data._selected_cells !== undefined) {\n      data._selected_cells[colIdx] = false;\n    }\n\n    // Remove class only if the cells exist, and the cell is not column\n    // selected, in which case the class should remain (since it is selected\n    // in the column)\n    if (data.anCells && !ctx.aoColumns[colIdx]._select_selected) {\n      $(data.anCells[colIdx]).removeClass(ctx._select.className);\n    }\n  });\n  this.iterator('table', function (ctx, i) {\n    eventTrigger(api, 'deselect', ['cell', api[i]], true);\n  });\n  return this;\n});\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Buttons\n */\nfunction i18n(label, def) {\n  return function (dt) {\n    return dt.i18n('buttons.' + label, def);\n  };\n}\n\n// Common events with suitable namespaces\nfunction namespacedEvents(config) {\n  var unique = config._eventNamespace;\n  return 'draw.dt.DT' + unique + ' select.dt.DT' + unique + ' deselect.dt.DT' + unique;\n}\nfunction enabled(dt, config) {\n  if (config.limitTo.indexOf('rows') !== -1 && dt.rows({\n    selected: true\n  }).any()) {\n    return true;\n  }\n  if (config.limitTo.indexOf('columns') !== -1 && dt.columns({\n    selected: true\n  }).any()) {\n    return true;\n  }\n  if (config.limitTo.indexOf('cells') !== -1 && dt.cells({\n    selected: true\n  }).any()) {\n    return true;\n  }\n  return false;\n}\nvar _buttonNamespace = 0;\n$.extend(DataTable.ext.buttons, {\n  selected: {\n    text: i18n('selected', 'Selected'),\n    className: 'buttons-selected',\n    limitTo: ['rows', 'columns', 'cells'],\n    init: function (dt, node, config) {\n      var that = this;\n      config._eventNamespace = '.select' + _buttonNamespace++;\n\n      // .DT namespace listeners are removed by DataTables automatically\n      // on table destroy\n      dt.on(namespacedEvents(config), function () {\n        that.enable(enabled(dt, config));\n      });\n      this.disable();\n    },\n    destroy: function (dt, node, config) {\n      dt.off(config._eventNamespace);\n    }\n  },\n  selectedSingle: {\n    text: i18n('selectedSingle', 'Selected single'),\n    className: 'buttons-selected-single',\n    init: function (dt, node, config) {\n      var that = this;\n      config._eventNamespace = '.select' + _buttonNamespace++;\n      dt.on(namespacedEvents(config), function () {\n        var count = dt.rows({\n          selected: true\n        }).flatten().length + dt.columns({\n          selected: true\n        }).flatten().length + dt.cells({\n          selected: true\n        }).flatten().length;\n        that.enable(count === 1);\n      });\n      this.disable();\n    },\n    destroy: function (dt, node, config) {\n      dt.off(config._eventNamespace);\n    }\n  },\n  selectAll: {\n    text: i18n('selectAll', 'Select all'),\n    className: 'buttons-select-all',\n    action: function (e, dt, node, config) {\n      var items = this.select.items();\n      var mod = config.selectorModifier;\n      if (mod) {\n        if (typeof mod === 'function') {\n          mod = mod.call(dt, e, dt, node, config);\n        }\n        this[items + 's'](mod).select();\n      } else {\n        this[items + 's']().select();\n      }\n    }\n    // selectorModifier can be specified\n  },\n  selectNone: {\n    text: i18n('selectNone', 'Deselect all'),\n    className: 'buttons-select-none',\n    action: function () {\n      clear(this.settings()[0], true);\n    },\n    init: function (dt, node, config) {\n      var that = this;\n      config._eventNamespace = '.select' + _buttonNamespace++;\n      dt.on(namespacedEvents(config), function () {\n        var count = dt.rows({\n          selected: true\n        }).flatten().length + dt.columns({\n          selected: true\n        }).flatten().length + dt.cells({\n          selected: true\n        }).flatten().length;\n        that.enable(count > 0);\n      });\n      this.disable();\n    },\n    destroy: function (dt, node, config) {\n      dt.off(config._eventNamespace);\n    }\n  },\n  showSelected: {\n    text: i18n('showSelected', 'Show only selected'),\n    className: 'buttons-show-selected',\n    action: function (e, dt) {\n      if (dt.search.fixed('dt-select')) {\n        // Remove existing function\n        dt.search.fixed('dt-select', null);\n        this.active(false);\n      } else {\n        // Use a fixed filtering function to match on selected rows\n        // This needs to reference the internal aoData since that is\n        // where Select stores its reference for the selected state\n        var dataSrc = dt.settings()[0].aoData;\n        dt.search.fixed('dt-select', function (text, data, idx) {\n          // _select_selected is set by Select on the data object for the row\n          return dataSrc[idx]._select_selected;\n        });\n        this.active(true);\n      }\n      dt.draw();\n    }\n  }\n});\n$.each(['Row', 'Column', 'Cell'], function (i, item) {\n  var lc = item.toLowerCase();\n  DataTable.ext.buttons['select' + item + 's'] = {\n    text: i18n('select' + item + 's', 'Select ' + lc + 's'),\n    className: 'buttons-select-' + lc + 's',\n    action: function () {\n      this.select.items(lc);\n    },\n    init: function (dt) {\n      var that = this;\n      dt.on('selectItems.dt.DT', function (e, ctx, items) {\n        that.active(items === lc);\n      });\n    }\n  };\n});\nDataTable.type('select-checkbox', {\n  className: 'dt-select',\n  detect: function (data) {\n    // Rendering function will tell us if it is a checkbox type\n    return data === 'select-checkbox' ? data : false;\n  },\n  order: {\n    pre: function (d) {\n      return d === 'X' ? -1 : 0;\n    }\n  }\n});\n$.extend(true, DataTable.defaults.oLanguage, {\n  select: {\n    aria: {\n      rowCheckbox: 'Select row'\n    }\n  }\n});\nDataTable.render.select = function (valueProp, nameProp) {\n  var valueFn = valueProp ? DataTable.util.get(valueProp) : null;\n  var nameFn = nameProp ? DataTable.util.get(nameProp) : null;\n  return function (data, type, row, meta) {\n    var dtRow = meta.settings.aoData[meta.row];\n    var selected = dtRow._select_selected;\n    var ariaLabel = meta.settings.oLanguage.select.aria.rowCheckbox;\n    if (type === 'display') {\n      return $('<input>').attr({\n        'aria-label': ariaLabel,\n        class: 'dt-select-checkbox',\n        name: nameFn ? nameFn(row) : null,\n        type: 'checkbox',\n        value: valueFn ? valueFn(row) : null,\n        checked: selected\n      })[0];\n    } else if (type === 'type') {\n      return 'select-checkbox';\n    } else if (type === 'filter') {\n      return '';\n    }\n    return selected ? 'X' : '';\n  };\n};\n\n// Legacy checkbox ordering\nDataTable.ext.order['select-checkbox'] = function (settings, col) {\n  return this.api().column(col, {\n    order: 'index'\n  }).nodes().map(function (td) {\n    if (settings._select.items === 'row') {\n      return $(td).parent().hasClass(settings._select.className);\n    } else if (settings._select.items === 'cell') {\n      return $(td).hasClass(settings._select.className);\n    }\n    return false;\n  });\n};\n$.fn.DataTable.select = DataTable.select;\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Initialisation\n */\n\n// DataTables creation - check if select has been defined in the options. Note\n// this required that the table be in the document! If it isn't then something\n// needs to trigger this method unfortunately. The next major release of\n// DataTables will rework the events and address this.\n$(document).on('preInit.dt.dtSelect', function (e, ctx) {\n  if (e.namespace !== 'dt') {\n    return;\n  }\n  DataTable.select.init(new DataTable.Api(ctx));\n});\nexport default DataTable;","map":{"version":3,"names":["jQuery","DataTable","$","select","version","init","dt","ctx","settings","versionCheck","_select","savedSelected","state","loaded","selectAndSave","e","data","undefined","rows","selected","any","deselect","columns","cells","i","length","cell","row","column","save","on","ids","toArray","map","coords","id","one","oInit","defaults","opts","items","style","blurable","toggleable","info","selector","className","headerCheckbox","setStyle","infoEls","isPlainObject","table","node","hasClass","initCheckboxHeader","cellRange","idx","last","indexes","columnIndexes","rowIndexes","selectColumns","start","end","tmp","record","filter","selectRows","search","indexOf","flatten","disableMouseSelection","container","off","_safeId","enableMouseSelection","matchSelection","shiftKey","metaKey","ctrlKey","css","window","getSelection","selection","anchorNode","closest","target","event","Event","eventTrigger","isDefaultPrevented","cellIndex","index","typeSelect","_select_lastCell","parents","clear","api","type","args","unshift","trigger","add","el","name","num","append","i18n","_","output","existing","children","remove","text","every","header","input","attr","class","appendTo","checked","stopPropagation","pass","count","available","prop","Api","_select_init","aoRowCreatedCallback","push","ien","d","aoData","_select_selected","addClass","aoColumns","_selected_cells","anCells","eq","cellIdx","each","includes","forEach","nodes","removeClass","rowColumnRange","idx1","idx2","splice","force","isSelected","replace","o","ext","out","rowData","apiRegister","register","apiRegisterPlural","registerPlural","iterator","flag","context","set","dtData","dtColumns","nTr","col","sType","_aSortData","footer","to$","rowIdx","colIdx","cellSelected","label","def","namespacedEvents","config","unique","_eventNamespace","enabled","limitTo","_buttonNamespace","extend","buttons","that","enable","disable","destroy","selectedSingle","selectAll","action","mod","selectorModifier","call","selectNone","showSelected","fixed","active","dataSrc","draw","item","lc","toLowerCase","detect","order","pre","oLanguage","aria","rowCheckbox","render","valueProp","nameProp","valueFn","util","get","nameFn","meta","dtRow","ariaLabel","value","td","parent","fn","document","namespace"],"sources":["C:/Users/Asus/Desktop/Clinic/Working System/clinicsystem/node_modules/datatables.net-select/js/dataTables.select.mjs"],"sourcesContent":["/*! Select for DataTables 2.0.0\n * Â© SpryMedia Ltd - datatables.net/license/mit\n */\n\nimport jQuery from 'jquery';\nimport DataTable from 'datatables.net';\n\n// Allow reassignment of the $ variable\nlet $ = jQuery;\n\n\n// Version information for debugger\nDataTable.select = {};\n\nDataTable.select.version = '2.0.0';\n\nDataTable.select.init = function (dt) {\n\tvar ctx = dt.settings()[0];\n\n\tif (!DataTable.versionCheck('2')) {\n\t\tthrow 'Warning: Select requires DataTables 2 or newer';\n\t}\n\n\tif (ctx._select) {\n\t\treturn;\n\t}\n\n\tvar savedSelected = dt.state.loaded();\n\n\tvar selectAndSave = function (e, settings, data) {\n\t\tif (data === null || data.select === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clear any currently selected rows, before restoring state\n\t\t// None will be selected on first initialisation\n\t\tif (dt.rows({ selected: true }).any()) {\n\t\t\tdt.rows().deselect();\n\t\t}\n\t\tif (data.select.rows !== undefined) {\n\t\t\tdt.rows(data.select.rows).select();\n\t\t}\n\n\t\tif (dt.columns({ selected: true }).any()) {\n\t\t\tdt.columns().deselect();\n\t\t}\n\t\tif (data.select.columns !== undefined) {\n\t\t\tdt.columns(data.select.columns).select();\n\t\t}\n\n\t\tif (dt.cells({ selected: true }).any()) {\n\t\t\tdt.cells().deselect();\n\t\t}\n\t\tif (data.select.cells !== undefined) {\n\t\t\tfor (var i = 0; i < data.select.cells.length; i++) {\n\t\t\t\tdt.cell(data.select.cells[i].row, data.select.cells[i].column).select();\n\t\t\t}\n\t\t}\n\n\t\tdt.state.save();\n\t};\n\n\tdt.on('stateSaveParams', function (e, settings, data) {\n\t\tdata.select = {};\n\t\tdata.select.rows = dt.rows({ selected: true }).ids(true).toArray();\n\t\tdata.select.columns = dt.columns({ selected: true })[0];\n\t\tdata.select.cells = dt.cells({ selected: true })[0].map(function (coords) {\n\t\t\treturn { row: dt.row(coords.row).id(true), column: coords.column };\n\t\t});\n\t})\n\t\t.on('stateLoadParams', selectAndSave)\n\t\t.one('init', function () {\n\t\t\tselectAndSave(undefined, undefined, savedSelected);\n\t\t});\n\n\tvar init = ctx.oInit.select;\n\tvar defaults = DataTable.defaults.select;\n\tvar opts = init === undefined ? defaults : init;\n\n\t// Set defaults\n\tvar items = 'row';\n\tvar style = 'api';\n\tvar blurable = false;\n\tvar toggleable = true;\n\tvar info = true;\n\tvar selector = 'td, th';\n\tvar className = 'selected';\n\tvar headerCheckbox = true;\n\tvar setStyle = false;\n\n\tctx._select = {\n\t\tinfoEls: []\n\t};\n\n\t// Initialisation customisations\n\tif (opts === true) {\n\t\tstyle = 'os';\n\t\tsetStyle = true;\n\t}\n\telse if (typeof opts === 'string') {\n\t\tstyle = opts;\n\t\tsetStyle = true;\n\t}\n\telse if ($.isPlainObject(opts)) {\n\t\tif (opts.blurable !== undefined) {\n\t\t\tblurable = opts.blurable;\n\t\t}\n\n\t\tif (opts.toggleable !== undefined) {\n\t\t\ttoggleable = opts.toggleable;\n\t\t}\n\n\t\tif (opts.info !== undefined) {\n\t\t\tinfo = opts.info;\n\t\t}\n\n\t\tif (opts.items !== undefined) {\n\t\t\titems = opts.items;\n\t\t}\n\n\t\tif (opts.style !== undefined) {\n\t\t\tstyle = opts.style;\n\t\t\tsetStyle = true;\n\t\t}\n\t\telse {\n\t\t\tstyle = 'os';\n\t\t\tsetStyle = true;\n\t\t}\n\n\t\tif (opts.selector !== undefined) {\n\t\t\tselector = opts.selector;\n\t\t}\n\n\t\tif (opts.className !== undefined) {\n\t\t\tclassName = opts.className;\n\t\t}\n\n\t\tif (opts.headerCheckbox !== undefined) {\n\t\t\theaderCheckbox = opts.headerCheckbox;\n\t\t}\n\t}\n\n\tdt.select.selector(selector);\n\tdt.select.items(items);\n\tdt.select.style(style);\n\tdt.select.blurable(blurable);\n\tdt.select.toggleable(toggleable);\n\tdt.select.info(info);\n\tctx._select.className = className;\n\n\t// If the init options haven't enabled select, but there is a selectable\n\t// class name, then enable\n\tif (!setStyle && $(dt.table().node()).hasClass('selectable')) {\n\t\tdt.select.style('os');\n\t}\n\n\t// Insert a checkbox into the header if needed - might need to wait\n\t// for init complete, or it might already be done\n\tif (headerCheckbox) {\n\t\tinitCheckboxHeader(dt);\n\n\t\tdt.on('init', function () {\n\t\t\tinitCheckboxHeader(dt);\n\t\t});\n\t}\n};\n\n/*\n\nSelect is a collection of API methods, event handlers, event emitters and\nbuttons (for the `Buttons` extension) for DataTables. It provides the following\nfeatures, with an overview of how they are implemented:\n\n## Selection of rows, columns and cells. Whether an item is selected or not is\n   stored in:\n\n* rows: a `_select_selected` property which contains a boolean value of the\n  DataTables' `aoData` object for each row\n* columns: a `_select_selected` property which contains a boolean value of the\n  DataTables' `aoColumns` object for each column\n* cells: a `_selected_cells` property which contains an array of boolean values\n  of the `aoData` object for each row. The array is the same length as the\n  columns array, with each element of it representing a cell.\n\nThis method of using boolean flags allows Select to operate when nodes have not\nbeen created for rows / cells (DataTables' defer rendering feature).\n\n## API methods\n\nA range of API methods are available for triggering selection and de-selection\nof rows. Methods are also available to configure the selection events that can\nbe triggered by an end user (such as which items are to be selected). To a large\nextent, these of API methods *is* Select. It is basically a collection of helper\nfunctions that can be used to select items in a DataTable.\n\nConfiguration of select is held in the object `_select` which is attached to the\nDataTables settings object on initialisation. Select being available on a table\nis not optional when Select is loaded, but its default is for selection only to\nbe available via the API - so the end user wouldn't be able to select rows\nwithout additional configuration.\n\nThe `_select` object contains the following properties:\n\n```\n{\n\titems:string       - Can be `rows`, `columns` or `cells`. Defines what item \n\t                     will be selected if the user is allowed to activate row\n\t                     selection using the mouse.\n\tstyle:string       - Can be `none`, `single`, `multi` or `os`. Defines the\n\t                     interaction style when selecting items\n\tblurable:boolean   - If row selection can be cleared by clicking outside of\n\t                     the table\n\ttoggleable:boolean - If row selection can be cancelled by repeated clicking\n\t                     on the row\n\tinfo:boolean       - If the selection summary should be shown in the table\n\t                     information elements\n\tinfoEls:element[]  - List of HTML elements with info elements for a table\n}\n```\n\nIn addition to the API methods, Select also extends the DataTables selector\noptions for rows, columns and cells adding a `selected` option to the selector\noptions object, allowing the developer to select only selected items or\nunselected items.\n\n## Mouse selection of items\n\nClicking on items can be used to select items. This is done by a simple event\nhandler that will select the items using the API methods.\n\n */\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Local functions\n */\n\n/**\n * Add one or more cells to the selection when shift clicking in OS selection\n * style cell selection.\n *\n * Cell range is more complicated than row and column as we want to select\n * in the visible grid rather than by index in sequence. For example, if you\n * click first in cell 1-1 and then shift click in 2-2 - cells 1-2 and 2-1\n * should also be selected (and not 1-3, 1-4. etc)\n *\n * @param  {DataTable.Api} dt   DataTable\n * @param  {object}        idx  Cell index to select to\n * @param  {object}        last Cell index to select from\n * @private\n */\nfunction cellRange(dt, idx, last) {\n\tvar indexes;\n\tvar columnIndexes;\n\tvar rowIndexes;\n\tvar selectColumns = function (start, end) {\n\t\tif (start > end) {\n\t\t\tvar tmp = end;\n\t\t\tend = start;\n\t\t\tstart = tmp;\n\t\t}\n\n\t\tvar record = false;\n\t\treturn dt\n\t\t\t.columns(':visible')\n\t\t\t.indexes()\n\t\t\t.filter(function (i) {\n\t\t\t\tif (i === start) {\n\t\t\t\t\trecord = true;\n\t\t\t\t}\n\n\t\t\t\tif (i === end) {\n\t\t\t\t\t// not else if, as start might === end\n\t\t\t\t\trecord = false;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn record;\n\t\t\t});\n\t};\n\n\tvar selectRows = function (start, end) {\n\t\tvar indexes = dt.rows({ search: 'applied' }).indexes();\n\n\t\t// Which comes first - might need to swap\n\t\tif (indexes.indexOf(start) > indexes.indexOf(end)) {\n\t\t\tvar tmp = end;\n\t\t\tend = start;\n\t\t\tstart = tmp;\n\t\t}\n\n\t\tvar record = false;\n\t\treturn indexes.filter(function (i) {\n\t\t\tif (i === start) {\n\t\t\t\trecord = true;\n\t\t\t}\n\n\t\t\tif (i === end) {\n\t\t\t\trecord = false;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn record;\n\t\t});\n\t};\n\n\tif (!dt.cells({ selected: true }).any() && !last) {\n\t\t// select from the top left cell to this one\n\t\tcolumnIndexes = selectColumns(0, idx.column);\n\t\trowIndexes = selectRows(0, idx.row);\n\t}\n\telse {\n\t\t// Get column indexes between old and new\n\t\tcolumnIndexes = selectColumns(last.column, idx.column);\n\t\trowIndexes = selectRows(last.row, idx.row);\n\t}\n\n\tindexes = dt.cells(rowIndexes, columnIndexes).flatten();\n\n\tif (!dt.cells(idx, { selected: true }).any()) {\n\t\t// Select range\n\t\tdt.cells(indexes).select();\n\t}\n\telse {\n\t\t// Deselect range\n\t\tdt.cells(indexes).deselect();\n\t}\n}\n\n/**\n * Disable mouse selection by removing the selectors\n *\n * @param {DataTable.Api} dt DataTable to remove events from\n * @private\n */\nfunction disableMouseSelection(dt) {\n\tvar ctx = dt.settings()[0];\n\tvar selector = ctx._select.selector;\n\n\t$(dt.table().container())\n\t\t.off('mousedown.dtSelect', selector)\n\t\t.off('mouseup.dtSelect', selector)\n\t\t.off('click.dtSelect', selector);\n\n\t$('body').off('click.dtSelect' + _safeId(dt.table().node()));\n}\n\n/**\n * Attach mouse listeners to the table to allow mouse selection of items\n *\n * @param {DataTable.Api} dt DataTable to remove events from\n * @private\n */\nfunction enableMouseSelection(dt) {\n\tvar container = $(dt.table().container());\n\tvar ctx = dt.settings()[0];\n\tvar selector = ctx._select.selector;\n\tvar matchSelection;\n\n\tcontainer\n\t\t.on('mousedown.dtSelect', selector, function (e) {\n\t\t\t// Disallow text selection for shift clicking on the table so multi\n\t\t\t// element selection doesn't look terrible!\n\t\t\tif (e.shiftKey || e.metaKey || e.ctrlKey) {\n\t\t\t\tcontainer\n\t\t\t\t\t.css('-moz-user-select', 'none')\n\t\t\t\t\t.one('selectstart.dtSelect', selector, function () {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (window.getSelection) {\n\t\t\t\tmatchSelection = window.getSelection();\n\t\t\t}\n\t\t})\n\t\t.on('mouseup.dtSelect', selector, function () {\n\t\t\t// Allow text selection to occur again, Mozilla style (tested in FF\n\t\t\t// 35.0.1 - still required)\n\t\t\tcontainer.css('-moz-user-select', '');\n\t\t})\n\t\t.on('click.dtSelect', selector, function (e) {\n\t\t\tvar items = dt.select.items();\n\t\t\tvar idx;\n\n\t\t\t// If text was selected (click and drag), then we shouldn't change\n\t\t\t// the row's selected state\n\t\t\tif (matchSelection) {\n\t\t\t\tvar selection = window.getSelection();\n\n\t\t\t\t// If the element that contains the selection is not in the table, we can ignore it\n\t\t\t\t// This can happen if the developer selects text from the click event\n\t\t\t\tif (\n\t\t\t\t\t!selection.anchorNode ||\n\t\t\t\t\t$(selection.anchorNode).closest('table')[0] === dt.table().node()\n\t\t\t\t) {\n\t\t\t\t\tif (selection !== matchSelection) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar ctx = dt.settings()[0];\n\t\t\tvar container = dt.table().container();\n\n\t\t\t// Ignore clicks inside a sub-table\n\t\t\tif ($(e.target).closest('div.dt-container')[0] != container) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar cell = dt.cell($(e.target).closest('td, th'));\n\n\t\t\t// Check the cell actually belongs to the host DataTable (so child\n\t\t\t// rows, etc, are ignored)\n\t\t\tif (!cell.any()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar event = $.Event('user-select.dt');\n\t\t\teventTrigger(dt, event, [items, cell, e]);\n\n\t\t\tif (event.isDefaultPrevented()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar cellIndex = cell.index();\n\t\t\tif (items === 'row') {\n\t\t\t\tidx = cellIndex.row;\n\t\t\t\ttypeSelect(e, dt, ctx, 'row', idx);\n\t\t\t}\n\t\t\telse if (items === 'column') {\n\t\t\t\tidx = cell.index().column;\n\t\t\t\ttypeSelect(e, dt, ctx, 'column', idx);\n\t\t\t}\n\t\t\telse if (items === 'cell') {\n\t\t\t\tidx = cell.index();\n\t\t\t\ttypeSelect(e, dt, ctx, 'cell', idx);\n\t\t\t}\n\n\t\t\tctx._select_lastCell = cellIndex;\n\t\t});\n\n\t// Blurable\n\t$('body').on('click.dtSelect' + _safeId(dt.table().node()), function (e) {\n\t\tif (ctx._select.blurable) {\n\t\t\t// If the click was inside the DataTables container, don't blur\n\t\t\tif ($(e.target).parents().filter(dt.table().container()).length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Ignore elements which have been removed from the DOM (i.e. paging\n\t\t\t// buttons)\n\t\t\tif ($(e.target).parents('html').length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Don't blur in Editor form\n\t\t\tif ($(e.target).parents('div.DTE').length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar event = $.Event('select-blur.dt');\n\t\t\teventTrigger(dt, event, [e.target, e]);\n\n\t\t\tif (event.isDefaultPrevented()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclear(ctx, true);\n\t\t}\n\t});\n}\n\n/**\n * Trigger an event on a DataTable\n *\n * @param {DataTable.Api} api      DataTable to trigger events on\n * @param  {boolean}      selected true if selected, false if deselected\n * @param  {string}       type     Item type acting on\n * @param  {boolean}      any      Require that there are values before\n *     triggering\n * @private\n */\nfunction eventTrigger(api, type, args, any) {\n\tif (any && !api.flatten().length) {\n\t\treturn;\n\t}\n\n\tif (typeof type === 'string') {\n\t\ttype = type + '.dt';\n\t}\n\n\targs.unshift(api);\n\n\t$(api.table().node()).trigger(type, args);\n}\n\n/**\n * Update the information element of the DataTable showing information about the\n * items selected. This is done by adding tags to the existing text\n *\n * @param {DataTable.Api} api DataTable to update\n * @private\n */\nfunction info(api, node) {\n\tif (api.select.style() === 'api' || api.select.info() === false) {\n\t\treturn;\n\t}\n\n\tvar rows = api.rows({ selected: true }).flatten().length;\n\tvar columns = api.columns({ selected: true }).flatten().length;\n\tvar cells = api.cells({ selected: true }).flatten().length;\n\n\tvar add = function (el, name, num) {\n\t\tel.append(\n\t\t\t$('<span class=\"select-item\"/>').append(\n\t\t\t\tapi.i18n(\n\t\t\t\t\t'select.' + name + 's',\n\t\t\t\t\t{ _: '%d ' + name + 's selected', 0: '', 1: '1 ' + name + ' selected' },\n\t\t\t\t\tnum\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t};\n\n\tvar el = $(node);\n\tvar output = $('<span class=\"select-info\"/>');\n\n\tadd(output, 'row', rows);\n\tadd(output, 'column', columns);\n\tadd(output, 'cell', cells);\n\n\tvar existing = el.children('span.select-info');\n\n\tif (existing.length) {\n\t\texisting.remove();\n\t}\n\n\tif (output.text() !== '') {\n\t\tel.append(output);\n\t}\n}\n\n/**\n * Add a checkbox to the header for checkbox columns, allowing all rows to\n * be selected, deselected or just to show the state.\n *\n * @param {*} dt API\n */\nfunction initCheckboxHeader( dt ) {\n\t// Find any checkbox column(s)\n\tdt.columns('.dt-select').every(function () {\n\t\tvar header = this.header();\n\n\t\tif (! $('input', header).length) {\n\t\t\t// If no checkbox yet, insert one\n\t\t\tvar input = $('<input>')\n\t\t\t\t.attr({\n\t\t\t\t\tclass: 'dt-select-checkbox',\n\t\t\t\t\ttype: 'checkbox',\n\t\t\t\t\t'aria-label': dt.i18n('select.aria.headerCheckbox') || 'Select all rows'\n\t\t\t\t})\n\t\t\t\t.appendTo(header)\n\t\t\t\t.on('change', function () {\n\t\t\t\t\tif (this.checked) {\n\t\t\t\t\t\tdt.rows({search: 'applied'}).select();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdt.rows({selected: true}).deselect();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on('click', function (e) {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t});\n\t\n\t\t\t// Update the header checkbox's state when the selection in the\n\t\t\t// table changes\n\t\t\tdt.on('draw select deselect', function (e, pass, type) {\n\t\t\t\tif (type === 'row' || ! type) {\n\t\t\t\t\tvar count = dt.rows({selected: true}).count();\n\t\t\t\t\tvar search = dt.rows({search: 'applied', selected: true}).count();\n\t\t\t\t\tvar available = dt.rows({search: 'applied'}).count();\n\n\t\t\t\t\tif (search && search <= count && search === available) {\n\t\t\t\t\t\tinput\n\t\t\t\t\t\t\t.prop('checked', true)\n\t\t\t\t\t\t\t.prop('indeterminate', false);\n\t\t\t\t\t}\n\t\t\t\t\telse if (search === 0 && count === 0) {\n\t\t\t\t\t\tinput\n\t\t\t\t\t\t\t.prop('checked', false)\n\t\t\t\t\t\t\t.prop('indeterminate', false);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinput\n\t\t\t\t\t\t\t.prop('checked', false)\n\t\t\t\t\t\t\t.prop('indeterminate', true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\n/**\n * Initialisation of a new table. Attach event handlers and callbacks to allow\n * Select to operate correctly.\n *\n * This will occur _after_ the initial DataTables initialisation, although\n * before Ajax data is rendered, if there is ajax data\n *\n * @param  {DataTable.settings} ctx Settings object to operate on\n * @private\n */\nfunction init(ctx) {\n\tvar api = new DataTable.Api(ctx);\n\tctx._select_init = true;\n\n\t// Row callback so that classes can be added to rows and cells if the item\n\t// was selected before the element was created. This will happen with the\n\t// `deferRender` option enabled.\n\t//\n\t// This method of attaching to `aoRowCreatedCallback` is a hack until\n\t// DataTables has proper events for row manipulation If you are reviewing\n\t// this code to create your own plug-ins, please do not do this!\n\tctx.aoRowCreatedCallback.push(function (row, data, index) {\n\t\t\tvar i, ien;\n\t\t\tvar d = ctx.aoData[index];\n\n\t\t\t// Row\n\t\t\tif (d._select_selected) {\n\t\t\t\t$(row).addClass(ctx._select.className);\n\t\t\t}\n\n\t\t\t// Cells and columns - if separated out, we would need to do two\n\t\t\t// loops, so it makes sense to combine them into a single one\n\t\t\tfor (i = 0, ien = ctx.aoColumns.length; i < ien; i++) {\n\t\t\t\tif (\n\t\t\t\t\tctx.aoColumns[i]._select_selected ||\n\t\t\t\t\t(d._selected_cells && d._selected_cells[i])\n\t\t\t\t) {\n\t\t\t\t\t$(d.anCells[i]).addClass(ctx._select.className);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t);\n\n\t// On Ajax reload we want to reselect all rows which are currently selected,\n\t// if there is an rowId (i.e. a unique value to identify each row with)\n\tapi.on('preXhr.dt.dtSelect', function (e, settings) {\n\t\tif (settings !== api.settings()[0]) {\n\t\t\t// Not triggered by our DataTable!\n\t\t\treturn;\n\t\t}\n\n\t\t// note that column selection doesn't need to be cached and then\n\t\t// reselected, as they are already selected\n\t\tvar rows = api\n\t\t\t.rows({ selected: true })\n\t\t\t.ids(true)\n\t\t\t.filter(function (d) {\n\t\t\t\treturn d !== undefined;\n\t\t\t});\n\n\t\tvar cells = api\n\t\t\t.cells({ selected: true })\n\t\t\t.eq(0)\n\t\t\t.map(function (cellIdx) {\n\t\t\t\tvar id = api.row(cellIdx.row).id(true);\n\t\t\t\treturn id ? { row: id, column: cellIdx.column } : undefined;\n\t\t\t})\n\t\t\t.filter(function (d) {\n\t\t\t\treturn d !== undefined;\n\t\t\t});\n\n\t\t// On the next draw, reselect the currently selected items\n\t\tapi.one('draw.dt.dtSelect', function () {\n\t\t\tapi.rows(rows).select();\n\n\t\t\t// `cells` is not a cell index selector, so it needs a loop\n\t\t\tif (cells.any()) {\n\t\t\t\tcells.each(function (id) {\n\t\t\t\t\tapi.cells(id.row, id.column).select();\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t});\n\n\t// Update the table information element with selected item summary\n\tapi.on('info.dt', function (e, ctx, node) {\n\t\t// Store the info node for updating on select / deselect\n\t\tif (!ctx._select.infoEls.includes(node)) {\n\t\t\tctx._select.infoEls.push(node);\n\t\t}\n\n\t\tinfo(api, node);\n\t});\n\n\tapi.on('select.dtSelect.dt deselect.dtSelect.dt', function () {\n\t\tctx._select.infoEls.forEach(function (el) {\n\t\t\tinfo(api, el);\n\t\t});\n\n\t\tapi.state.save();\n\t});\n\n\t// Clean up and release\n\tapi.on('destroy.dtSelect', function () {\n\t\t// Remove class directly rather than calling deselect - which would trigger events\n\t\t$(api.rows({ selected: true }).nodes()).removeClass(api.settings()[0]._select.className);\n\n\t\tdisableMouseSelection(api);\n\t\tapi.off('.dtSelect');\n\t\t$('body').off('.dtSelect' + _safeId(api.table().node()));\n\t});\n}\n\n/**\n * Add one or more items (rows or columns) to the selection when shift clicking\n * in OS selection style\n *\n * @param  {DataTable.Api} dt   DataTable\n * @param  {string}        type Row or column range selector\n * @param  {object}        idx  Item index to select to\n * @param  {object}        last Item index to select from\n * @private\n */\nfunction rowColumnRange(dt, type, idx, last) {\n\t// Add a range of rows from the last selected row to this one\n\tvar indexes = dt[type + 's']({ search: 'applied' }).indexes();\n\tvar idx1 = indexes.indexOf(last);\n\tvar idx2 = indexes.indexOf(idx);\n\n\tif (!dt[type + 's']({ selected: true }).any() && idx1 === -1) {\n\t\t// select from top to here - slightly odd, but both Windows and Mac OS\n\t\t// do this\n\t\tindexes.splice(indexes.indexOf(idx) + 1, indexes.length);\n\t}\n\telse {\n\t\t// reverse so we can shift click 'up' as well as down\n\t\tif (idx1 > idx2) {\n\t\t\tvar tmp = idx2;\n\t\t\tidx2 = idx1;\n\t\t\tidx1 = tmp;\n\t\t}\n\n\t\tindexes.splice(idx2 + 1, indexes.length);\n\t\tindexes.splice(0, idx1);\n\t}\n\n\tif (!dt[type](idx, { selected: true }).any()) {\n\t\t// Select range\n\t\tdt[type + 's'](indexes).select();\n\t}\n\telse {\n\t\t// Deselect range - need to keep the clicked on row selected\n\t\tindexes.splice(indexes.indexOf(idx), 1);\n\t\tdt[type + 's'](indexes).deselect();\n\t}\n}\n\n/**\n * Clear all selected items\n *\n * @param  {DataTable.settings} ctx Settings object of the host DataTable\n * @param  {boolean} [force=false] Force the de-selection to happen, regardless\n *     of selection style\n * @private\n */\nfunction clear(ctx, force) {\n\tif (force || ctx._select.style === 'single') {\n\t\tvar api = new DataTable.Api(ctx);\n\n\t\tapi.rows({ selected: true }).deselect();\n\t\tapi.columns({ selected: true }).deselect();\n\t\tapi.cells({ selected: true }).deselect();\n\t}\n}\n\n/**\n * Select items based on the current configuration for style and items.\n *\n * @param  {object}             e    Mouse event object\n * @param  {DataTables.Api}     dt   DataTable\n * @param  {DataTable.settings} ctx  Settings object of the host DataTable\n * @param  {string}             type Items to select\n * @param  {int|object}         idx  Index of the item to select\n * @private\n */\nfunction typeSelect(e, dt, ctx, type, idx) {\n\tvar style = dt.select.style();\n\tvar toggleable = dt.select.toggleable();\n\tvar isSelected = dt[type](idx, { selected: true }).any();\n\n\tif (isSelected && !toggleable) {\n\t\treturn;\n\t}\n\n\tif (style === 'os') {\n\t\tif (e.ctrlKey || e.metaKey) {\n\t\t\t// Add or remove from the selection\n\t\t\tdt[type](idx).select(!isSelected);\n\t\t}\n\t\telse if (e.shiftKey) {\n\t\t\tif (type === 'cell') {\n\t\t\t\tcellRange(dt, idx, ctx._select_lastCell || null);\n\t\t\t}\n\t\t\telse {\n\t\t\t\trowColumnRange(\n\t\t\t\t\tdt,\n\t\t\t\t\ttype,\n\t\t\t\t\tidx,\n\t\t\t\t\tctx._select_lastCell ? ctx._select_lastCell[type] : null\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// No cmd or shift click - deselect if selected, or select\n\t\t\t// this row only\n\t\t\tvar selected = dt[type + 's']({ selected: true });\n\n\t\t\tif (isSelected && selected.flatten().length === 1) {\n\t\t\t\tdt[type](idx).deselect();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tselected.deselect();\n\t\t\t\tdt[type](idx).select();\n\t\t\t}\n\t\t}\n\t}\n\telse if (style == 'multi+shift') {\n\t\tif (e.shiftKey) {\n\t\t\tif (type === 'cell') {\n\t\t\t\tcellRange(dt, idx, ctx._select_lastCell || null);\n\t\t\t}\n\t\t\telse {\n\t\t\t\trowColumnRange(\n\t\t\t\t\tdt,\n\t\t\t\t\ttype,\n\t\t\t\t\tidx,\n\t\t\t\t\tctx._select_lastCell ? ctx._select_lastCell[type] : null\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdt[type](idx).select(!isSelected);\n\t\t}\n\t}\n\telse {\n\t\tdt[type](idx).select(!isSelected);\n\t}\n}\n\nfunction _safeId(node) {\n\treturn node.id.replace(/[^a-zA-Z0-9\\-\\_]/g, '-');\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables selectors\n */\n\n// row and column are basically identical just assigned to different properties\n// and checking a different array, so we can dynamically create the functions to\n// reduce the code size\n$.each(\n\t[\n\t\t{ type: 'row', prop: 'aoData' },\n\t\t{ type: 'column', prop: 'aoColumns' }\n\t],\n\tfunction (i, o) {\n\t\tDataTable.ext.selector[o.type].push(function (settings, opts, indexes) {\n\t\t\tvar selected = opts.selected;\n\t\t\tvar data;\n\t\t\tvar out = [];\n\n\t\t\tif (selected !== true && selected !== false) {\n\t\t\t\treturn indexes;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ien = indexes.length; i < ien; i++) {\n\t\t\t\tdata = settings[o.prop][indexes[i]];\n\n\t\t\t\tif (\n\t\t\t\t\tdata && (\n\t\t\t\t\t\t(selected === true && data._select_selected === true) ||\n\t\t\t\t\t\t(selected === false && !data._select_selected)\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tout.push(indexes[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn out;\n\t\t});\n\t}\n);\n\nDataTable.ext.selector.cell.push(function (settings, opts, cells) {\n\tvar selected = opts.selected;\n\tvar rowData;\n\tvar out = [];\n\n\tif (selected === undefined) {\n\t\treturn cells;\n\t}\n\n\tfor (var i = 0, ien = cells.length; i < ien; i++) {\n\t\trowData = settings.aoData[cells[i].row];\n\n\t\tif (\n\t\t\trowData && (\n\t\t\t\t(selected === true &&\n\t\t\t\t\trowData._selected_cells &&\n\t\t\t\t\trowData._selected_cells[cells[i].column] === true) ||\n\t\t\t\t(selected === false &&\n\t\t\t\t\t(!rowData._selected_cells || !rowData._selected_cells[cells[i].column]))\n\t\t\t)\n\t\t) {\n\t\t\tout.push(cells[i]);\n\t\t}\n\t}\n\n\treturn out;\n});\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables API\n *\n * For complete documentation, please refer to the docs/api directory or the\n * DataTables site\n */\n\n// Local variables to improve compression\nvar apiRegister = DataTable.Api.register;\nvar apiRegisterPlural = DataTable.Api.registerPlural;\n\napiRegister('select()', function () {\n\treturn this.iterator('table', function (ctx) {\n\t\tDataTable.select.init(new DataTable.Api(ctx));\n\t});\n});\n\napiRegister('select.blurable()', function (flag) {\n\tif (flag === undefined) {\n\t\treturn this.context[0]._select.blurable;\n\t}\n\n\treturn this.iterator('table', function (ctx) {\n\t\tctx._select.blurable = flag;\n\t});\n});\n\napiRegister('select.toggleable()', function (flag) {\n\tif (flag === undefined) {\n\t\treturn this.context[0]._select.toggleable;\n\t}\n\n\treturn this.iterator('table', function (ctx) {\n\t\tctx._select.toggleable = flag;\n\t});\n});\n\napiRegister('select.info()', function (flag) {\n\tif (flag === undefined) {\n\t\treturn this.context[0]._select.info;\n\t}\n\n\treturn this.iterator('table', function (ctx) {\n\t\tctx._select.info = flag;\n\t});\n});\n\napiRegister('select.items()', function (items) {\n\tif (items === undefined) {\n\t\treturn this.context[0]._select.items;\n\t}\n\n\treturn this.iterator('table', function (ctx) {\n\t\tctx._select.items = items;\n\n\t\teventTrigger(new DataTable.Api(ctx), 'selectItems', [items]);\n\t});\n});\n\n// Takes effect from the _next_ selection. None disables future selection, but\n// does not clear the current selection. Use the `deselect` methods for that\napiRegister('select.style()', function (style) {\n\tif (style === undefined) {\n\t\treturn this.context[0]._select.style;\n\t}\n\n\treturn this.iterator('table', function (ctx) {\n\t\tif (!ctx._select) {\n\t\t\tDataTable.select.init(new DataTable.Api(ctx));\n\t\t}\n\n\t\tif (!ctx._select_init) {\n\t\t\tinit(ctx);\n\t\t}\n\n\t\tctx._select.style = style;\n\n\t\t// Add / remove mouse event handlers. They aren't required when only\n\t\t// API selection is available\n\t\tvar dt = new DataTable.Api(ctx);\n\t\tdisableMouseSelection(dt);\n\n\t\tif (style !== 'api') {\n\t\t\tenableMouseSelection(dt);\n\t\t}\n\n\t\teventTrigger(new DataTable.Api(ctx), 'selectStyle', [style]);\n\t});\n});\n\napiRegister('select.selector()', function (selector) {\n\tif (selector === undefined) {\n\t\treturn this.context[0]._select.selector;\n\t}\n\n\treturn this.iterator('table', function (ctx) {\n\t\tdisableMouseSelection(new DataTable.Api(ctx));\n\n\t\tctx._select.selector = selector;\n\n\t\tif (ctx._select.style !== 'api') {\n\t\t\tenableMouseSelection(new DataTable.Api(ctx));\n\t\t}\n\t});\n});\n\napiRegister('select.last()', function (set) {\n\tlet ctx = this.context[0];\n\n\tif (set) {\n\t\tctx._select_lastCell = set;\n\t\treturn this;\n\t}\n\n\treturn ctx._select_lastCell;\n});\n\napiRegisterPlural('rows().select()', 'row().select()', function (select) {\n\tvar api = this;\n\n\tif (select === false) {\n\t\treturn this.deselect();\n\t}\n\n\tthis.iterator('row', function (ctx, idx) {\n\t\tclear(ctx);\n\n\t\t// There is a good amount of knowledge of DataTables internals in\n\t\t// this function. It _could_ be done without that, but it would hurt\n\t\t// performance (or DT would need new APIs for this work)\n\t\tvar dtData = ctx.aoData[idx];\n\t\tvar dtColumns = ctx.aoColumns;\n\n\t\t$(dtData.nTr).addClass(ctx._select.className);\n\t\tdtData._select_selected = true;\n\n\t\tfor (var i=0 ; i<dtColumns.length ; i++) {\n\t\t\tvar col = dtColumns[i];\n\n\t\t\tif (col.sType === 'select-checkbox') {\n\t\t\t\t// Make sure the checkbox shows the right state\n\t\t\t\t$('input.dt-select-checkbox', dtData.anCells[i]).prop('checked', true);\n\n\t\t\t\t// Invalidate the sort data for this column\n\t\t\t\tdtData._aSortData[i] = null;\n\t\t\t}\n\t\t}\n\t});\n\n\tthis.iterator('table', function (ctx, i) {\n\t\teventTrigger(api, 'select', ['row', api[i]], true);\n\t});\n\n\treturn this;\n});\n\napiRegister('row().selected()', function () {\n\tvar ctx = this.context[0];\n\n\tif (ctx && this.length && ctx.aoData[this[0]] && ctx.aoData[this[0]]._select_selected) {\n\t\treturn true;\n\t}\n\n\treturn false;\n});\n\napiRegisterPlural('columns().select()', 'column().select()', function (select) {\n\tvar api = this;\n\n\tif (select === false) {\n\t\treturn this.deselect();\n\t}\n\n\tthis.iterator('column', function (ctx, idx) {\n\t\tclear(ctx);\n\n\t\tctx.aoColumns[idx]._select_selected = true;\n\n\t\tvar column = new DataTable.Api(ctx).column(idx);\n\n\t\t$(column.header()).addClass(ctx._select.className);\n\t\t$(column.footer()).addClass(ctx._select.className);\n\n\t\tcolumn.nodes().to$().addClass(ctx._select.className);\n\t});\n\n\tthis.iterator('table', function (ctx, i) {\n\t\teventTrigger(api, 'select', ['column', api[i]], true);\n\t});\n\n\treturn this;\n});\n\napiRegister('column().selected()', function () {\n\tvar ctx = this.context[0];\n\n\tif (ctx && this.length && ctx.aoColumns[this[0]] && ctx.aoColumns[this[0]]._select_selected) {\n\t\treturn true;\n\t}\n\n\treturn false;\n});\n\napiRegisterPlural('cells().select()', 'cell().select()', function (select) {\n\tvar api = this;\n\n\tif (select === false) {\n\t\treturn this.deselect();\n\t}\n\n\tthis.iterator('cell', function (ctx, rowIdx, colIdx) {\n\t\tclear(ctx);\n\n\t\tvar data = ctx.aoData[rowIdx];\n\n\t\tif (data._selected_cells === undefined) {\n\t\t\tdata._selected_cells = [];\n\t\t}\n\n\t\tdata._selected_cells[colIdx] = true;\n\n\t\tif (data.anCells) {\n\t\t\t$(data.anCells[colIdx]).addClass(ctx._select.className);\n\t\t}\n\t});\n\n\tthis.iterator('table', function (ctx, i) {\n\t\teventTrigger(api, 'select', ['cell', api.cells(api[i]).indexes().toArray()], true);\n\t});\n\n\treturn this;\n});\n\napiRegister('cell().selected()', function () {\n\tvar ctx = this.context[0];\n\n\tif (ctx && this.length) {\n\t\tvar row = ctx.aoData[this[0][0].row];\n\n\t\tif (row && row._selected_cells && row._selected_cells[this[0][0].column]) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n});\n\napiRegisterPlural('rows().deselect()', 'row().deselect()', function () {\n\tvar api = this;\n\n\tthis.iterator('row', function (ctx, idx) {\n\t\t// Like the select action, this has a lot of knowledge about DT internally\n\t\tvar dtData = ctx.aoData[idx];\n\t\tvar dtColumns = ctx.aoColumns;\n\n\t\t$(dtData.nTr).removeClass(ctx._select.className);\n\t\tdtData._select_selected = false;\n\t\tctx._select_lastCell = null;\n\n\t\tfor (var i=0 ; i<dtColumns.length ; i++) {\n\t\t\tvar col = dtColumns[i];\n\n\t\t\tif (col.sType === 'select-checkbox') {\n\t\t\t\t// Make sure the checkbox shows the right state\n\t\t\t\t$('input.dt-select-checkbox', dtData.anCells[i]).prop('checked', false);\n\n\t\t\t\t// Invalidate the sort data for this column\n\t\t\t\tdtData._aSortData[i] = null;\n\t\t\t}\n\t\t}\n\t});\n\n\tthis.iterator('table', function (ctx, i) {\n\t\teventTrigger(api, 'deselect', ['row', api[i]], true);\n\t});\n\n\treturn this;\n});\n\napiRegisterPlural('columns().deselect()', 'column().deselect()', function () {\n\tvar api = this;\n\n\tthis.iterator('column', function (ctx, idx) {\n\t\tctx.aoColumns[idx]._select_selected = false;\n\n\t\tvar api = new DataTable.Api(ctx);\n\t\tvar column = api.column(idx);\n\n\t\t$(column.header()).removeClass(ctx._select.className);\n\t\t$(column.footer()).removeClass(ctx._select.className);\n\n\t\t// Need to loop over each cell, rather than just using\n\t\t// `column().nodes()` as cells which are individually selected should\n\t\t// not have the `selected` class removed from them\n\t\tapi.cells(null, idx)\n\t\t\t.indexes()\n\t\t\t.each(function (cellIdx) {\n\t\t\t\tvar data = ctx.aoData[cellIdx.row];\n\t\t\t\tvar cellSelected = data._selected_cells;\n\n\t\t\t\tif (data.anCells && (!cellSelected || !cellSelected[cellIdx.column])) {\n\t\t\t\t\t$(data.anCells[cellIdx.column]).removeClass(ctx._select.className);\n\t\t\t\t}\n\t\t\t});\n\t});\n\n\tthis.iterator('table', function (ctx, i) {\n\t\teventTrigger(api, 'deselect', ['column', api[i]], true);\n\t});\n\n\treturn this;\n});\n\napiRegisterPlural('cells().deselect()', 'cell().deselect()', function () {\n\tvar api = this;\n\n\tthis.iterator('cell', function (ctx, rowIdx, colIdx) {\n\t\tvar data = ctx.aoData[rowIdx];\n\n\t\tif (data._selected_cells !== undefined) {\n\t\t\tdata._selected_cells[colIdx] = false;\n\t\t}\n\n\t\t// Remove class only if the cells exist, and the cell is not column\n\t\t// selected, in which case the class should remain (since it is selected\n\t\t// in the column)\n\t\tif (data.anCells && !ctx.aoColumns[colIdx]._select_selected) {\n\t\t\t$(data.anCells[colIdx]).removeClass(ctx._select.className);\n\t\t}\n\t});\n\n\tthis.iterator('table', function (ctx, i) {\n\t\teventTrigger(api, 'deselect', ['cell', api[i]], true);\n\t});\n\n\treturn this;\n});\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Buttons\n */\nfunction i18n(label, def) {\n\treturn function (dt) {\n\t\treturn dt.i18n('buttons.' + label, def);\n\t};\n}\n\n// Common events with suitable namespaces\nfunction namespacedEvents(config) {\n\tvar unique = config._eventNamespace;\n\n\treturn 'draw.dt.DT' + unique + ' select.dt.DT' + unique + ' deselect.dt.DT' + unique;\n}\n\nfunction enabled(dt, config) {\n\tif (config.limitTo.indexOf('rows') !== -1 && dt.rows({ selected: true }).any()) {\n\t\treturn true;\n\t}\n\n\tif (config.limitTo.indexOf('columns') !== -1 && dt.columns({ selected: true }).any()) {\n\t\treturn true;\n\t}\n\n\tif (config.limitTo.indexOf('cells') !== -1 && dt.cells({ selected: true }).any()) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nvar _buttonNamespace = 0;\n\n$.extend(DataTable.ext.buttons, {\n\tselected: {\n\t\ttext: i18n('selected', 'Selected'),\n\t\tclassName: 'buttons-selected',\n\t\tlimitTo: ['rows', 'columns', 'cells'],\n\t\tinit: function (dt, node, config) {\n\t\t\tvar that = this;\n\t\t\tconfig._eventNamespace = '.select' + _buttonNamespace++;\n\n\t\t\t// .DT namespace listeners are removed by DataTables automatically\n\t\t\t// on table destroy\n\t\t\tdt.on(namespacedEvents(config), function () {\n\t\t\t\tthat.enable(enabled(dt, config));\n\t\t\t});\n\n\t\t\tthis.disable();\n\t\t},\n\t\tdestroy: function (dt, node, config) {\n\t\t\tdt.off(config._eventNamespace);\n\t\t}\n\t},\n\tselectedSingle: {\n\t\ttext: i18n('selectedSingle', 'Selected single'),\n\t\tclassName: 'buttons-selected-single',\n\t\tinit: function (dt, node, config) {\n\t\t\tvar that = this;\n\t\t\tconfig._eventNamespace = '.select' + _buttonNamespace++;\n\n\t\t\tdt.on(namespacedEvents(config), function () {\n\t\t\t\tvar count =\n\t\t\t\t\tdt.rows({ selected: true }).flatten().length +\n\t\t\t\t\tdt.columns({ selected: true }).flatten().length +\n\t\t\t\t\tdt.cells({ selected: true }).flatten().length;\n\n\t\t\t\tthat.enable(count === 1);\n\t\t\t});\n\n\t\t\tthis.disable();\n\t\t},\n\t\tdestroy: function (dt, node, config) {\n\t\t\tdt.off(config._eventNamespace);\n\t\t}\n\t},\n\tselectAll: {\n\t\ttext: i18n('selectAll', 'Select all'),\n\t\tclassName: 'buttons-select-all',\n\t\taction: function (e, dt, node, config) {\n\t\t\tvar items = this.select.items();\n\t\t\tvar mod = config.selectorModifier;\n\t\t\t\n\t\t\tif (mod) {\n\t\t\t\tif (typeof mod === 'function') {\n\t\t\t\t\tmod = mod.call(dt, e, dt, node, config);\n\t\t\t\t}\n\n\t\t\t\tthis[items + 's'](mod).select();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis[items + 's']().select();\n\t\t\t}\n\t\t}\n\t\t// selectorModifier can be specified\n\t},\n\tselectNone: {\n\t\ttext: i18n('selectNone', 'Deselect all'),\n\t\tclassName: 'buttons-select-none',\n\t\taction: function () {\n\t\t\tclear(this.settings()[0], true);\n\t\t},\n\t\tinit: function (dt, node, config) {\n\t\t\tvar that = this;\n\t\t\tconfig._eventNamespace = '.select' + _buttonNamespace++;\n\n\t\t\tdt.on(namespacedEvents(config), function () {\n\t\t\t\tvar count =\n\t\t\t\t\tdt.rows({ selected: true }).flatten().length +\n\t\t\t\t\tdt.columns({ selected: true }).flatten().length +\n\t\t\t\t\tdt.cells({ selected: true }).flatten().length;\n\n\t\t\t\tthat.enable(count > 0);\n\t\t\t});\n\n\t\t\tthis.disable();\n\t\t},\n\t\tdestroy: function (dt, node, config) {\n\t\t\tdt.off(config._eventNamespace);\n\t\t}\n\t},\n\tshowSelected: {\n\t\ttext: i18n('showSelected', 'Show only selected'),\n\t\tclassName: 'buttons-show-selected',\n\t\taction: function (e, dt) {\n\t\t\tif (dt.search.fixed('dt-select')) {\n\t\t\t\t// Remove existing function\n\t\t\t\tdt.search.fixed('dt-select', null);\n\n\t\t\t\tthis.active(false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Use a fixed filtering function to match on selected rows\n\t\t\t\t// This needs to reference the internal aoData since that is\n\t\t\t\t// where Select stores its reference for the selected state\n\t\t\t\tvar dataSrc = dt.settings()[0].aoData;\n\n\t\t\t\tdt.search.fixed('dt-select', function (text, data, idx) {\n\t\t\t\t\t// _select_selected is set by Select on the data object for the row\n\t\t\t\t\treturn dataSrc[idx]._select_selected;\n\t\t\t\t});\n\n\t\t\t\tthis.active(true);\n\t\t\t}\n\n\t\t\tdt.draw();\n\t\t}\n\t}\n});\n\n$.each(['Row', 'Column', 'Cell'], function (i, item) {\n\tvar lc = item.toLowerCase();\n\n\tDataTable.ext.buttons['select' + item + 's'] = {\n\t\ttext: i18n('select' + item + 's', 'Select ' + lc + 's'),\n\t\tclassName: 'buttons-select-' + lc + 's',\n\t\taction: function () {\n\t\t\tthis.select.items(lc);\n\t\t},\n\t\tinit: function (dt) {\n\t\t\tvar that = this;\n\n\t\t\tdt.on('selectItems.dt.DT', function (e, ctx, items) {\n\t\t\t\tthat.active(items === lc);\n\t\t\t});\n\t\t}\n\t};\n});\n\nDataTable.type('select-checkbox', {\n\tclassName: 'dt-select',\n\tdetect: function (data) {\n\t\t// Rendering function will tell us if it is a checkbox type\n\t\treturn data === 'select-checkbox' ? data : false;\n\t},\n\torder: {\n\t\tpre: function (d) {\n\t\t\treturn d === 'X' ? -1 : 0;\n\t\t}\n\t}\n});\n\n$.extend(true, DataTable.defaults.oLanguage, {\n\tselect: {\n\t\taria: {\n\t\t\trowCheckbox: 'Select row'\n\t\t}\n\t}\n});\n\nDataTable.render.select = function (valueProp, nameProp) {\n\tvar valueFn = valueProp ? DataTable.util.get(valueProp) : null;\n\tvar nameFn = nameProp ? DataTable.util.get(nameProp) : null;\n\n\treturn function (data, type, row, meta) {\n\t\tvar dtRow = meta.settings.aoData[meta.row];\n\t\tvar selected = dtRow._select_selected;\n\t\tvar ariaLabel = meta.settings.oLanguage.select.aria.rowCheckbox;\n\n\t\tif (type === 'display') {\n\t\t\treturn $('<input>')\n\t\t\t\t.attr({\n\t\t\t\t\t'aria-label': ariaLabel,\n\t\t\t\t\tclass: 'dt-select-checkbox',\n\t\t\t\t\tname: nameFn ? nameFn(row) : null,\n\t\t\t\t\ttype: 'checkbox',\n\t\t\t\t\tvalue: valueFn ? valueFn(row) : null,\n\t\t\t\t\tchecked: selected\n\t\t\t\t})[0];\n\t\t}\n\t\telse if (type === 'type') {\n\t\t\treturn 'select-checkbox';\n\t\t}\n\t\telse if (type === 'filter') {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn selected ? 'X' : '';\n\t}\n}\n\n// Legacy checkbox ordering\nDataTable.ext.order['select-checkbox'] = function (settings, col) {\n\treturn this.api()\n\t\t.column(col, { order: 'index' })\n\t\t.nodes()\n\t\t.map(function (td) {\n\t\t\tif (settings._select.items === 'row') {\n\t\t\t\treturn $(td).parent().hasClass(settings._select.className);\n\t\t\t}\n\t\t\telse if (settings._select.items === 'cell') {\n\t\t\t\treturn $(td).hasClass(settings._select.className);\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n};\n\n$.fn.DataTable.select = DataTable.select;\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Initialisation\n */\n\n// DataTables creation - check if select has been defined in the options. Note\n// this required that the table be in the document! If it isn't then something\n// needs to trigger this method unfortunately. The next major release of\n// DataTables will rework the events and address this.\n$(document).on('preInit.dt.dtSelect', function (e, ctx) {\n\tif (e.namespace !== 'dt') {\n\t\treturn;\n\t}\n\n\tDataTable.select.init(new DataTable.Api(ctx));\n});\n\n\nexport default DataTable;\n"],"mappings":";AAAA;AACA;AACA;;AAEA,OAAOA,MAAM,MAAM,QAAQ;AAC3B,OAAOC,SAAS,MAAM,gBAAgB;;AAEtC;AACA,IAAIC,CAAC,GAAGF,MAAM;;AAGd;AACAC,SAAS,CAACE,MAAM,GAAG,CAAC,CAAC;AAErBF,SAAS,CAACE,MAAM,CAACC,OAAO,GAAG,OAAO;AAElCH,SAAS,CAACE,MAAM,CAACE,IAAI,GAAG,UAAUC,EAAE,EAAE;EACrC,IAAIC,GAAG,GAAGD,EAAE,CAACE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAE1B,IAAI,CAACP,SAAS,CAACQ,YAAY,CAAC,GAAG,CAAC,EAAE;IACjC,MAAM,gDAAgD;EACvD;EAEA,IAAIF,GAAG,CAACG,OAAO,EAAE;IAChB;EACD;EAEA,IAAIC,aAAa,GAAGL,EAAE,CAACM,KAAK,CAACC,MAAM,CAAC,CAAC;EAErC,IAAIC,aAAa,GAAG,SAAAA,CAAUC,CAAC,EAAEP,QAAQ,EAAEQ,IAAI,EAAE;IAChD,IAAIA,IAAI,KAAK,IAAI,IAAIA,IAAI,CAACb,MAAM,KAAKc,SAAS,EAAE;MAC/C;IACD;;IAEA;IACA;IACA,IAAIX,EAAE,CAACY,IAAI,CAAC;MAAEC,QAAQ,EAAE;IAAK,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,EAAE;MACtCd,EAAE,CAACY,IAAI,CAAC,CAAC,CAACG,QAAQ,CAAC,CAAC;IACrB;IACA,IAAIL,IAAI,CAACb,MAAM,CAACe,IAAI,KAAKD,SAAS,EAAE;MACnCX,EAAE,CAACY,IAAI,CAACF,IAAI,CAACb,MAAM,CAACe,IAAI,CAAC,CAACf,MAAM,CAAC,CAAC;IACnC;IAEA,IAAIG,EAAE,CAACgB,OAAO,CAAC;MAAEH,QAAQ,EAAE;IAAK,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,EAAE;MACzCd,EAAE,CAACgB,OAAO,CAAC,CAAC,CAACD,QAAQ,CAAC,CAAC;IACxB;IACA,IAAIL,IAAI,CAACb,MAAM,CAACmB,OAAO,KAAKL,SAAS,EAAE;MACtCX,EAAE,CAACgB,OAAO,CAACN,IAAI,CAACb,MAAM,CAACmB,OAAO,CAAC,CAACnB,MAAM,CAAC,CAAC;IACzC;IAEA,IAAIG,EAAE,CAACiB,KAAK,CAAC;MAAEJ,QAAQ,EAAE;IAAK,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,EAAE;MACvCd,EAAE,CAACiB,KAAK,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC;IACtB;IACA,IAAIL,IAAI,CAACb,MAAM,CAACoB,KAAK,KAAKN,SAAS,EAAE;MACpC,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,IAAI,CAACb,MAAM,CAACoB,KAAK,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;QAClDlB,EAAE,CAACoB,IAAI,CAACV,IAAI,CAACb,MAAM,CAACoB,KAAK,CAACC,CAAC,CAAC,CAACG,GAAG,EAAEX,IAAI,CAACb,MAAM,CAACoB,KAAK,CAACC,CAAC,CAAC,CAACI,MAAM,CAAC,CAACzB,MAAM,CAAC,CAAC;MACxE;IACD;IAEAG,EAAE,CAACM,KAAK,CAACiB,IAAI,CAAC,CAAC;EAChB,CAAC;EAEDvB,EAAE,CAACwB,EAAE,CAAC,iBAAiB,EAAE,UAAUf,CAAC,EAAEP,QAAQ,EAAEQ,IAAI,EAAE;IACrDA,IAAI,CAACb,MAAM,GAAG,CAAC,CAAC;IAChBa,IAAI,CAACb,MAAM,CAACe,IAAI,GAAGZ,EAAE,CAACY,IAAI,CAAC;MAAEC,QAAQ,EAAE;IAAK,CAAC,CAAC,CAACY,GAAG,CAAC,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC;IAClEhB,IAAI,CAACb,MAAM,CAACmB,OAAO,GAAGhB,EAAE,CAACgB,OAAO,CAAC;MAAEH,QAAQ,EAAE;IAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACvDH,IAAI,CAACb,MAAM,CAACoB,KAAK,GAAGjB,EAAE,CAACiB,KAAK,CAAC;MAAEJ,QAAQ,EAAE;IAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAACc,GAAG,CAAC,UAAUC,MAAM,EAAE;MACzE,OAAO;QAAEP,GAAG,EAAErB,EAAE,CAACqB,GAAG,CAACO,MAAM,CAACP,GAAG,CAAC,CAACQ,EAAE,CAAC,IAAI,CAAC;QAAEP,MAAM,EAAEM,MAAM,CAACN;MAAO,CAAC;IACnE,CAAC,CAAC;EACH,CAAC,CAAC,CACAE,EAAE,CAAC,iBAAiB,EAAEhB,aAAa,CAAC,CACpCsB,GAAG,CAAC,MAAM,EAAE,YAAY;IACxBtB,aAAa,CAACG,SAAS,EAAEA,SAAS,EAAEN,aAAa,CAAC;EACnD,CAAC,CAAC;EAEH,IAAIN,IAAI,GAAGE,GAAG,CAAC8B,KAAK,CAAClC,MAAM;EAC3B,IAAImC,QAAQ,GAAGrC,SAAS,CAACqC,QAAQ,CAACnC,MAAM;EACxC,IAAIoC,IAAI,GAAGlC,IAAI,KAAKY,SAAS,GAAGqB,QAAQ,GAAGjC,IAAI;;EAE/C;EACA,IAAImC,KAAK,GAAG,KAAK;EACjB,IAAIC,KAAK,GAAG,KAAK;EACjB,IAAIC,QAAQ,GAAG,KAAK;EACpB,IAAIC,UAAU,GAAG,IAAI;EACrB,IAAIC,IAAI,GAAG,IAAI;EACf,IAAIC,QAAQ,GAAG,QAAQ;EACvB,IAAIC,SAAS,GAAG,UAAU;EAC1B,IAAIC,cAAc,GAAG,IAAI;EACzB,IAAIC,QAAQ,GAAG,KAAK;EAEpBzC,GAAG,CAACG,OAAO,GAAG;IACbuC,OAAO,EAAE;EACV,CAAC;;EAED;EACA,IAAIV,IAAI,KAAK,IAAI,EAAE;IAClBE,KAAK,GAAG,IAAI;IACZO,QAAQ,GAAG,IAAI;EAChB,CAAC,MACI,IAAI,OAAOT,IAAI,KAAK,QAAQ,EAAE;IAClCE,KAAK,GAAGF,IAAI;IACZS,QAAQ,GAAG,IAAI;EAChB,CAAC,MACI,IAAI9C,CAAC,CAACgD,aAAa,CAACX,IAAI,CAAC,EAAE;IAC/B,IAAIA,IAAI,CAACG,QAAQ,KAAKzB,SAAS,EAAE;MAChCyB,QAAQ,GAAGH,IAAI,CAACG,QAAQ;IACzB;IAEA,IAAIH,IAAI,CAACI,UAAU,KAAK1B,SAAS,EAAE;MAClC0B,UAAU,GAAGJ,IAAI,CAACI,UAAU;IAC7B;IAEA,IAAIJ,IAAI,CAACK,IAAI,KAAK3B,SAAS,EAAE;MAC5B2B,IAAI,GAAGL,IAAI,CAACK,IAAI;IACjB;IAEA,IAAIL,IAAI,CAACC,KAAK,KAAKvB,SAAS,EAAE;MAC7BuB,KAAK,GAAGD,IAAI,CAACC,KAAK;IACnB;IAEA,IAAID,IAAI,CAACE,KAAK,KAAKxB,SAAS,EAAE;MAC7BwB,KAAK,GAAGF,IAAI,CAACE,KAAK;MAClBO,QAAQ,GAAG,IAAI;IAChB,CAAC,MACI;MACJP,KAAK,GAAG,IAAI;MACZO,QAAQ,GAAG,IAAI;IAChB;IAEA,IAAIT,IAAI,CAACM,QAAQ,KAAK5B,SAAS,EAAE;MAChC4B,QAAQ,GAAGN,IAAI,CAACM,QAAQ;IACzB;IAEA,IAAIN,IAAI,CAACO,SAAS,KAAK7B,SAAS,EAAE;MACjC6B,SAAS,GAAGP,IAAI,CAACO,SAAS;IAC3B;IAEA,IAAIP,IAAI,CAACQ,cAAc,KAAK9B,SAAS,EAAE;MACtC8B,cAAc,GAAGR,IAAI,CAACQ,cAAc;IACrC;EACD;EAEAzC,EAAE,CAACH,MAAM,CAAC0C,QAAQ,CAACA,QAAQ,CAAC;EAC5BvC,EAAE,CAACH,MAAM,CAACqC,KAAK,CAACA,KAAK,CAAC;EACtBlC,EAAE,CAACH,MAAM,CAACsC,KAAK,CAACA,KAAK,CAAC;EACtBnC,EAAE,CAACH,MAAM,CAACuC,QAAQ,CAACA,QAAQ,CAAC;EAC5BpC,EAAE,CAACH,MAAM,CAACwC,UAAU,CAACA,UAAU,CAAC;EAChCrC,EAAE,CAACH,MAAM,CAACyC,IAAI,CAACA,IAAI,CAAC;EACpBrC,GAAG,CAACG,OAAO,CAACoC,SAAS,GAAGA,SAAS;;EAEjC;EACA;EACA,IAAI,CAACE,QAAQ,IAAI9C,CAAC,CAACI,EAAE,CAAC6C,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,YAAY,CAAC,EAAE;IAC7D/C,EAAE,CAACH,MAAM,CAACsC,KAAK,CAAC,IAAI,CAAC;EACtB;;EAEA;EACA;EACA,IAAIM,cAAc,EAAE;IACnBO,kBAAkB,CAAChD,EAAE,CAAC;IAEtBA,EAAE,CAACwB,EAAE,CAAC,MAAM,EAAE,YAAY;MACzBwB,kBAAkB,CAAChD,EAAE,CAAC;IACvB,CAAC,CAAC;EACH;AACD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASiD,SAASA,CAACjD,EAAE,EAAEkD,GAAG,EAAEC,IAAI,EAAE;EACjC,IAAIC,OAAO;EACX,IAAIC,aAAa;EACjB,IAAIC,UAAU;EACd,IAAIC,aAAa,GAAG,SAAAA,CAAUC,KAAK,EAAEC,GAAG,EAAE;IACzC,IAAID,KAAK,GAAGC,GAAG,EAAE;MAChB,IAAIC,GAAG,GAAGD,GAAG;MACbA,GAAG,GAAGD,KAAK;MACXA,KAAK,GAAGE,GAAG;IACZ;IAEA,IAAIC,MAAM,GAAG,KAAK;IAClB,OAAO3D,EAAE,CACPgB,OAAO,CAAC,UAAU,CAAC,CACnBoC,OAAO,CAAC,CAAC,CACTQ,MAAM,CAAC,UAAU1C,CAAC,EAAE;MACpB,IAAIA,CAAC,KAAKsC,KAAK,EAAE;QAChBG,MAAM,GAAG,IAAI;MACd;MAEA,IAAIzC,CAAC,KAAKuC,GAAG,EAAE;QACd;QACAE,MAAM,GAAG,KAAK;QACd,OAAO,IAAI;MACZ;MAEA,OAAOA,MAAM;IACd,CAAC,CAAC;EACJ,CAAC;EAED,IAAIE,UAAU,GAAG,SAAAA,CAAUL,KAAK,EAAEC,GAAG,EAAE;IACtC,IAAIL,OAAO,GAAGpD,EAAE,CAACY,IAAI,CAAC;MAAEkD,MAAM,EAAE;IAAU,CAAC,CAAC,CAACV,OAAO,CAAC,CAAC;;IAEtD;IACA,IAAIA,OAAO,CAACW,OAAO,CAACP,KAAK,CAAC,GAAGJ,OAAO,CAACW,OAAO,CAACN,GAAG,CAAC,EAAE;MAClD,IAAIC,GAAG,GAAGD,GAAG;MACbA,GAAG,GAAGD,KAAK;MACXA,KAAK,GAAGE,GAAG;IACZ;IAEA,IAAIC,MAAM,GAAG,KAAK;IAClB,OAAOP,OAAO,CAACQ,MAAM,CAAC,UAAU1C,CAAC,EAAE;MAClC,IAAIA,CAAC,KAAKsC,KAAK,EAAE;QAChBG,MAAM,GAAG,IAAI;MACd;MAEA,IAAIzC,CAAC,KAAKuC,GAAG,EAAE;QACdE,MAAM,GAAG,KAAK;QACd,OAAO,IAAI;MACZ;MAEA,OAAOA,MAAM;IACd,CAAC,CAAC;EACH,CAAC;EAED,IAAI,CAAC3D,EAAE,CAACiB,KAAK,CAAC;IAAEJ,QAAQ,EAAE;EAAK,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,IAAI,CAACqC,IAAI,EAAE;IACjD;IACAE,aAAa,GAAGE,aAAa,CAAC,CAAC,EAAEL,GAAG,CAAC5B,MAAM,CAAC;IAC5CgC,UAAU,GAAGO,UAAU,CAAC,CAAC,EAAEX,GAAG,CAAC7B,GAAG,CAAC;EACpC,CAAC,MACI;IACJ;IACAgC,aAAa,GAAGE,aAAa,CAACJ,IAAI,CAAC7B,MAAM,EAAE4B,GAAG,CAAC5B,MAAM,CAAC;IACtDgC,UAAU,GAAGO,UAAU,CAACV,IAAI,CAAC9B,GAAG,EAAE6B,GAAG,CAAC7B,GAAG,CAAC;EAC3C;EAEA+B,OAAO,GAAGpD,EAAE,CAACiB,KAAK,CAACqC,UAAU,EAAED,aAAa,CAAC,CAACW,OAAO,CAAC,CAAC;EAEvD,IAAI,CAAChE,EAAE,CAACiB,KAAK,CAACiC,GAAG,EAAE;IAAErC,QAAQ,EAAE;EAAK,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,EAAE;IAC7C;IACAd,EAAE,CAACiB,KAAK,CAACmC,OAAO,CAAC,CAACvD,MAAM,CAAC,CAAC;EAC3B,CAAC,MACI;IACJ;IACAG,EAAE,CAACiB,KAAK,CAACmC,OAAO,CAAC,CAACrC,QAAQ,CAAC,CAAC;EAC7B;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASkD,qBAAqBA,CAACjE,EAAE,EAAE;EAClC,IAAIC,GAAG,GAAGD,EAAE,CAACE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1B,IAAIqC,QAAQ,GAAGtC,GAAG,CAACG,OAAO,CAACmC,QAAQ;EAEnC3C,CAAC,CAACI,EAAE,CAAC6C,KAAK,CAAC,CAAC,CAACqB,SAAS,CAAC,CAAC,CAAC,CACvBC,GAAG,CAAC,oBAAoB,EAAE5B,QAAQ,CAAC,CACnC4B,GAAG,CAAC,kBAAkB,EAAE5B,QAAQ,CAAC,CACjC4B,GAAG,CAAC,gBAAgB,EAAE5B,QAAQ,CAAC;EAEjC3C,CAAC,CAAC,MAAM,CAAC,CAACuE,GAAG,CAAC,gBAAgB,GAAGC,OAAO,CAACpE,EAAE,CAAC6C,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC7D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASuB,oBAAoBA,CAACrE,EAAE,EAAE;EACjC,IAAIkE,SAAS,GAAGtE,CAAC,CAACI,EAAE,CAAC6C,KAAK,CAAC,CAAC,CAACqB,SAAS,CAAC,CAAC,CAAC;EACzC,IAAIjE,GAAG,GAAGD,EAAE,CAACE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1B,IAAIqC,QAAQ,GAAGtC,GAAG,CAACG,OAAO,CAACmC,QAAQ;EACnC,IAAI+B,cAAc;EAElBJ,SAAS,CACP1C,EAAE,CAAC,oBAAoB,EAAEe,QAAQ,EAAE,UAAU9B,CAAC,EAAE;IAChD;IACA;IACA,IAAIA,CAAC,CAAC8D,QAAQ,IAAI9D,CAAC,CAAC+D,OAAO,IAAI/D,CAAC,CAACgE,OAAO,EAAE;MACzCP,SAAS,CACPQ,GAAG,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAC/B5C,GAAG,CAAC,sBAAsB,EAAES,QAAQ,EAAE,YAAY;QAClD,OAAO,KAAK;MACb,CAAC,CAAC;IACJ;IAEA,IAAIoC,MAAM,CAACC,YAAY,EAAE;MACxBN,cAAc,GAAGK,MAAM,CAACC,YAAY,CAAC,CAAC;IACvC;EACD,CAAC,CAAC,CACDpD,EAAE,CAAC,kBAAkB,EAAEe,QAAQ,EAAE,YAAY;IAC7C;IACA;IACA2B,SAAS,CAACQ,GAAG,CAAC,kBAAkB,EAAE,EAAE,CAAC;EACtC,CAAC,CAAC,CACDlD,EAAE,CAAC,gBAAgB,EAAEe,QAAQ,EAAE,UAAU9B,CAAC,EAAE;IAC5C,IAAIyB,KAAK,GAAGlC,EAAE,CAACH,MAAM,CAACqC,KAAK,CAAC,CAAC;IAC7B,IAAIgB,GAAG;;IAEP;IACA;IACA,IAAIoB,cAAc,EAAE;MACnB,IAAIO,SAAS,GAAGF,MAAM,CAACC,YAAY,CAAC,CAAC;;MAErC;MACA;MACA,IACC,CAACC,SAAS,CAACC,UAAU,IACrBlF,CAAC,CAACiF,SAAS,CAACC,UAAU,CAAC,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK/E,EAAE,CAAC6C,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,EAChE;QACD,IAAI+B,SAAS,KAAKP,cAAc,EAAE;UACjC;QACD;MACD;IACD;IAEA,IAAIrE,GAAG,GAAGD,EAAE,CAACE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1B,IAAIgE,SAAS,GAAGlE,EAAE,CAAC6C,KAAK,CAAC,CAAC,CAACqB,SAAS,CAAC,CAAC;;IAEtC;IACA,IAAItE,CAAC,CAACa,CAAC,CAACuE,MAAM,CAAC,CAACD,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAIb,SAAS,EAAE;MAC5D;IACD;IAEA,IAAI9C,IAAI,GAAGpB,EAAE,CAACoB,IAAI,CAACxB,CAAC,CAACa,CAAC,CAACuE,MAAM,CAAC,CAACD,OAAO,CAAC,QAAQ,CAAC,CAAC;;IAEjD;IACA;IACA,IAAI,CAAC3D,IAAI,CAACN,GAAG,CAAC,CAAC,EAAE;MAChB;IACD;IAEA,IAAImE,KAAK,GAAGrF,CAAC,CAACsF,KAAK,CAAC,gBAAgB,CAAC;IACrCC,YAAY,CAACnF,EAAE,EAAEiF,KAAK,EAAE,CAAC/C,KAAK,EAAEd,IAAI,EAAEX,CAAC,CAAC,CAAC;IAEzC,IAAIwE,KAAK,CAACG,kBAAkB,CAAC,CAAC,EAAE;MAC/B;IACD;IAEA,IAAIC,SAAS,GAAGjE,IAAI,CAACkE,KAAK,CAAC,CAAC;IAC5B,IAAIpD,KAAK,KAAK,KAAK,EAAE;MACpBgB,GAAG,GAAGmC,SAAS,CAAChE,GAAG;MACnBkE,UAAU,CAAC9E,CAAC,EAAET,EAAE,EAAEC,GAAG,EAAE,KAAK,EAAEiD,GAAG,CAAC;IACnC,CAAC,MACI,IAAIhB,KAAK,KAAK,QAAQ,EAAE;MAC5BgB,GAAG,GAAG9B,IAAI,CAACkE,KAAK,CAAC,CAAC,CAAChE,MAAM;MACzBiE,UAAU,CAAC9E,CAAC,EAAET,EAAE,EAAEC,GAAG,EAAE,QAAQ,EAAEiD,GAAG,CAAC;IACtC,CAAC,MACI,IAAIhB,KAAK,KAAK,MAAM,EAAE;MAC1BgB,GAAG,GAAG9B,IAAI,CAACkE,KAAK,CAAC,CAAC;MAClBC,UAAU,CAAC9E,CAAC,EAAET,EAAE,EAAEC,GAAG,EAAE,MAAM,EAAEiD,GAAG,CAAC;IACpC;IAEAjD,GAAG,CAACuF,gBAAgB,GAAGH,SAAS;EACjC,CAAC,CAAC;;EAEH;EACAzF,CAAC,CAAC,MAAM,CAAC,CAAC4B,EAAE,CAAC,gBAAgB,GAAG4C,OAAO,CAACpE,EAAE,CAAC6C,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,EAAE,UAAUrC,CAAC,EAAE;IACxE,IAAIR,GAAG,CAACG,OAAO,CAACgC,QAAQ,EAAE;MACzB;MACA,IAAIxC,CAAC,CAACa,CAAC,CAACuE,MAAM,CAAC,CAACS,OAAO,CAAC,CAAC,CAAC7B,MAAM,CAAC5D,EAAE,CAAC6C,KAAK,CAAC,CAAC,CAACqB,SAAS,CAAC,CAAC,CAAC,CAAC/C,MAAM,EAAE;QAChE;MACD;;MAEA;MACA;MACA,IAAIvB,CAAC,CAACa,CAAC,CAACuE,MAAM,CAAC,CAACS,OAAO,CAAC,MAAM,CAAC,CAACtE,MAAM,KAAK,CAAC,EAAE;QAC7C;MACD;;MAEA;MACA,IAAIvB,CAAC,CAACa,CAAC,CAACuE,MAAM,CAAC,CAACS,OAAO,CAAC,SAAS,CAAC,CAACtE,MAAM,EAAE;QAC1C;MACD;MAEA,IAAI8D,KAAK,GAAGrF,CAAC,CAACsF,KAAK,CAAC,gBAAgB,CAAC;MACrCC,YAAY,CAACnF,EAAE,EAAEiF,KAAK,EAAE,CAACxE,CAAC,CAACuE,MAAM,EAAEvE,CAAC,CAAC,CAAC;MAEtC,IAAIwE,KAAK,CAACG,kBAAkB,CAAC,CAAC,EAAE;QAC/B;MACD;MAEAM,KAAK,CAACzF,GAAG,EAAE,IAAI,CAAC;IACjB;EACD,CAAC,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASkF,YAAYA,CAACQ,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAE/E,GAAG,EAAE;EAC3C,IAAIA,GAAG,IAAI,CAAC6E,GAAG,CAAC3B,OAAO,CAAC,CAAC,CAAC7C,MAAM,EAAE;IACjC;EACD;EAEA,IAAI,OAAOyE,IAAI,KAAK,QAAQ,EAAE;IAC7BA,IAAI,GAAGA,IAAI,GAAG,KAAK;EACpB;EAEAC,IAAI,CAACC,OAAO,CAACH,GAAG,CAAC;EAEjB/F,CAAC,CAAC+F,GAAG,CAAC9C,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACiD,OAAO,CAACH,IAAI,EAAEC,IAAI,CAAC;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASvD,IAAIA,CAACqD,GAAG,EAAE7C,IAAI,EAAE;EACxB,IAAI6C,GAAG,CAAC9F,MAAM,CAACsC,KAAK,CAAC,CAAC,KAAK,KAAK,IAAIwD,GAAG,CAAC9F,MAAM,CAACyC,IAAI,CAAC,CAAC,KAAK,KAAK,EAAE;IAChE;EACD;EAEA,IAAI1B,IAAI,GAAG+E,GAAG,CAAC/E,IAAI,CAAC;IAAEC,QAAQ,EAAE;EAAK,CAAC,CAAC,CAACmD,OAAO,CAAC,CAAC,CAAC7C,MAAM;EACxD,IAAIH,OAAO,GAAG2E,GAAG,CAAC3E,OAAO,CAAC;IAAEH,QAAQ,EAAE;EAAK,CAAC,CAAC,CAACmD,OAAO,CAAC,CAAC,CAAC7C,MAAM;EAC9D,IAAIF,KAAK,GAAG0E,GAAG,CAAC1E,KAAK,CAAC;IAAEJ,QAAQ,EAAE;EAAK,CAAC,CAAC,CAACmD,OAAO,CAAC,CAAC,CAAC7C,MAAM;EAE1D,IAAI6E,GAAG,GAAG,SAAAA,CAAUC,EAAE,EAAEC,IAAI,EAAEC,GAAG,EAAE;IAClCF,EAAE,CAACG,MAAM,CACRxG,CAAC,CAAC,6BAA6B,CAAC,CAACwG,MAAM,CACtCT,GAAG,CAACU,IAAI,CACP,SAAS,GAAGH,IAAI,GAAG,GAAG,EACtB;MAAEI,CAAC,EAAE,KAAK,GAAGJ,IAAI,GAAG,YAAY;MAAE,CAAC,EAAE,EAAE;MAAE,CAAC,EAAE,IAAI,GAAGA,IAAI,GAAG;IAAY,CAAC,EACvEC,GACD,CACD,CACD,CAAC;EACF,CAAC;EAED,IAAIF,EAAE,GAAGrG,CAAC,CAACkD,IAAI,CAAC;EAChB,IAAIyD,MAAM,GAAG3G,CAAC,CAAC,6BAA6B,CAAC;EAE7CoG,GAAG,CAACO,MAAM,EAAE,KAAK,EAAE3F,IAAI,CAAC;EACxBoF,GAAG,CAACO,MAAM,EAAE,QAAQ,EAAEvF,OAAO,CAAC;EAC9BgF,GAAG,CAACO,MAAM,EAAE,MAAM,EAAEtF,KAAK,CAAC;EAE1B,IAAIuF,QAAQ,GAAGP,EAAE,CAACQ,QAAQ,CAAC,kBAAkB,CAAC;EAE9C,IAAID,QAAQ,CAACrF,MAAM,EAAE;IACpBqF,QAAQ,CAACE,MAAM,CAAC,CAAC;EAClB;EAEA,IAAIH,MAAM,CAACI,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IACzBV,EAAE,CAACG,MAAM,CAACG,MAAM,CAAC;EAClB;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASvD,kBAAkBA,CAAEhD,EAAE,EAAG;EACjC;EACAA,EAAE,CAACgB,OAAO,CAAC,YAAY,CAAC,CAAC4F,KAAK,CAAC,YAAY;IAC1C,IAAIC,MAAM,GAAG,IAAI,CAACA,MAAM,CAAC,CAAC;IAE1B,IAAI,CAAEjH,CAAC,CAAC,OAAO,EAAEiH,MAAM,CAAC,CAAC1F,MAAM,EAAE;MAChC;MACA,IAAI2F,KAAK,GAAGlH,CAAC,CAAC,SAAS,CAAC,CACtBmH,IAAI,CAAC;QACLC,KAAK,EAAE,oBAAoB;QAC3BpB,IAAI,EAAE,UAAU;QAChB,YAAY,EAAE5F,EAAE,CAACqG,IAAI,CAAC,4BAA4B,CAAC,IAAI;MACxD,CAAC,CAAC,CACDY,QAAQ,CAACJ,MAAM,CAAC,CAChBrF,EAAE,CAAC,QAAQ,EAAE,YAAY;QACzB,IAAI,IAAI,CAAC0F,OAAO,EAAE;UACjBlH,EAAE,CAACY,IAAI,CAAC;YAACkD,MAAM,EAAE;UAAS,CAAC,CAAC,CAACjE,MAAM,CAAC,CAAC;QACtC,CAAC,MACI;UACJG,EAAE,CAACY,IAAI,CAAC;YAACC,QAAQ,EAAE;UAAI,CAAC,CAAC,CAACE,QAAQ,CAAC,CAAC;QACrC;MACD,CAAC,CAAC,CACDS,EAAE,CAAC,OAAO,EAAE,UAAUf,CAAC,EAAE;QACzBA,CAAC,CAAC0G,eAAe,CAAC,CAAC;MACpB,CAAC,CAAC;;MAEH;MACA;MACAnH,EAAE,CAACwB,EAAE,CAAC,sBAAsB,EAAE,UAAUf,CAAC,EAAE2G,IAAI,EAAExB,IAAI,EAAE;QACtD,IAAIA,IAAI,KAAK,KAAK,IAAI,CAAEA,IAAI,EAAE;UAC7B,IAAIyB,KAAK,GAAGrH,EAAE,CAACY,IAAI,CAAC;YAACC,QAAQ,EAAE;UAAI,CAAC,CAAC,CAACwG,KAAK,CAAC,CAAC;UAC7C,IAAIvD,MAAM,GAAG9D,EAAE,CAACY,IAAI,CAAC;YAACkD,MAAM,EAAE,SAAS;YAAEjD,QAAQ,EAAE;UAAI,CAAC,CAAC,CAACwG,KAAK,CAAC,CAAC;UACjE,IAAIC,SAAS,GAAGtH,EAAE,CAACY,IAAI,CAAC;YAACkD,MAAM,EAAE;UAAS,CAAC,CAAC,CAACuD,KAAK,CAAC,CAAC;UAEpD,IAAIvD,MAAM,IAAIA,MAAM,IAAIuD,KAAK,IAAIvD,MAAM,KAAKwD,SAAS,EAAE;YACtDR,KAAK,CACHS,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CACrBA,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC;UAC/B,CAAC,MACI,IAAIzD,MAAM,KAAK,CAAC,IAAIuD,KAAK,KAAK,CAAC,EAAE;YACrCP,KAAK,CACHS,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CACtBA,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC;UAC/B,CAAC,MACI;YACJT,KAAK,CACHS,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CACtBA,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC;UAC9B;QACD;MACD,CAAC,CAAC;IACH;EACD,CAAC,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASxH,IAAIA,CAACE,GAAG,EAAE;EAClB,IAAI0F,GAAG,GAAG,IAAIhG,SAAS,CAAC6H,GAAG,CAACvH,GAAG,CAAC;EAChCA,GAAG,CAACwH,YAAY,GAAG,IAAI;;EAEvB;EACA;EACA;EACA;EACA;EACA;EACA;EACAxH,GAAG,CAACyH,oBAAoB,CAACC,IAAI,CAAC,UAAUtG,GAAG,EAAEX,IAAI,EAAE4E,KAAK,EAAE;IACxD,IAAIpE,CAAC,EAAE0G,GAAG;IACV,IAAIC,CAAC,GAAG5H,GAAG,CAAC6H,MAAM,CAACxC,KAAK,CAAC;;IAEzB;IACA,IAAIuC,CAAC,CAACE,gBAAgB,EAAE;MACvBnI,CAAC,CAACyB,GAAG,CAAC,CAAC2G,QAAQ,CAAC/H,GAAG,CAACG,OAAO,CAACoC,SAAS,CAAC;IACvC;;IAEA;IACA;IACA,KAAKtB,CAAC,GAAG,CAAC,EAAE0G,GAAG,GAAG3H,GAAG,CAACgI,SAAS,CAAC9G,MAAM,EAAED,CAAC,GAAG0G,GAAG,EAAE1G,CAAC,EAAE,EAAE;MACrD,IACCjB,GAAG,CAACgI,SAAS,CAAC/G,CAAC,CAAC,CAAC6G,gBAAgB,IAChCF,CAAC,CAACK,eAAe,IAAIL,CAAC,CAACK,eAAe,CAAChH,CAAC,CAAE,EAC1C;QACDtB,CAAC,CAACiI,CAAC,CAACM,OAAO,CAACjH,CAAC,CAAC,CAAC,CAAC8G,QAAQ,CAAC/H,GAAG,CAACG,OAAO,CAACoC,SAAS,CAAC;MAChD;IACD;EACD,CACD,CAAC;;EAED;EACA;EACAmD,GAAG,CAACnE,EAAE,CAAC,oBAAoB,EAAE,UAAUf,CAAC,EAAEP,QAAQ,EAAE;IACnD,IAAIA,QAAQ,KAAKyF,GAAG,CAACzF,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MACnC;MACA;IACD;;IAEA;IACA;IACA,IAAIU,IAAI,GAAG+E,GAAG,CACZ/E,IAAI,CAAC;MAAEC,QAAQ,EAAE;IAAK,CAAC,CAAC,CACxBY,GAAG,CAAC,IAAI,CAAC,CACTmC,MAAM,CAAC,UAAUiE,CAAC,EAAE;MACpB,OAAOA,CAAC,KAAKlH,SAAS;IACvB,CAAC,CAAC;IAEH,IAAIM,KAAK,GAAG0E,GAAG,CACb1E,KAAK,CAAC;MAAEJ,QAAQ,EAAE;IAAK,CAAC,CAAC,CACzBuH,EAAE,CAAC,CAAC,CAAC,CACLzG,GAAG,CAAC,UAAU0G,OAAO,EAAE;MACvB,IAAIxG,EAAE,GAAG8D,GAAG,CAACtE,GAAG,CAACgH,OAAO,CAAChH,GAAG,CAAC,CAACQ,EAAE,CAAC,IAAI,CAAC;MACtC,OAAOA,EAAE,GAAG;QAAER,GAAG,EAAEQ,EAAE;QAAEP,MAAM,EAAE+G,OAAO,CAAC/G;MAAO,CAAC,GAAGX,SAAS;IAC5D,CAAC,CAAC,CACDiD,MAAM,CAAC,UAAUiE,CAAC,EAAE;MACpB,OAAOA,CAAC,KAAKlH,SAAS;IACvB,CAAC,CAAC;;IAEH;IACAgF,GAAG,CAAC7D,GAAG,CAAC,kBAAkB,EAAE,YAAY;MACvC6D,GAAG,CAAC/E,IAAI,CAACA,IAAI,CAAC,CAACf,MAAM,CAAC,CAAC;;MAEvB;MACA,IAAIoB,KAAK,CAACH,GAAG,CAAC,CAAC,EAAE;QAChBG,KAAK,CAACqH,IAAI,CAAC,UAAUzG,EAAE,EAAE;UACxB8D,GAAG,CAAC1E,KAAK,CAACY,EAAE,CAACR,GAAG,EAAEQ,EAAE,CAACP,MAAM,CAAC,CAACzB,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC;MACH;IACD,CAAC,CAAC;EACH,CAAC,CAAC;;EAEF;EACA8F,GAAG,CAACnE,EAAE,CAAC,SAAS,EAAE,UAAUf,CAAC,EAAER,GAAG,EAAE6C,IAAI,EAAE;IACzC;IACA,IAAI,CAAC7C,GAAG,CAACG,OAAO,CAACuC,OAAO,CAAC4F,QAAQ,CAACzF,IAAI,CAAC,EAAE;MACxC7C,GAAG,CAACG,OAAO,CAACuC,OAAO,CAACgF,IAAI,CAAC7E,IAAI,CAAC;IAC/B;IAEAR,IAAI,CAACqD,GAAG,EAAE7C,IAAI,CAAC;EAChB,CAAC,CAAC;EAEF6C,GAAG,CAACnE,EAAE,CAAC,yCAAyC,EAAE,YAAY;IAC7DvB,GAAG,CAACG,OAAO,CAACuC,OAAO,CAAC6F,OAAO,CAAC,UAAUvC,EAAE,EAAE;MACzC3D,IAAI,CAACqD,GAAG,EAAEM,EAAE,CAAC;IACd,CAAC,CAAC;IAEFN,GAAG,CAACrF,KAAK,CAACiB,IAAI,CAAC,CAAC;EACjB,CAAC,CAAC;;EAEF;EACAoE,GAAG,CAACnE,EAAE,CAAC,kBAAkB,EAAE,YAAY;IACtC;IACA5B,CAAC,CAAC+F,GAAG,CAAC/E,IAAI,CAAC;MAAEC,QAAQ,EAAE;IAAK,CAAC,CAAC,CAAC4H,KAAK,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC/C,GAAG,CAACzF,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAACE,OAAO,CAACoC,SAAS,CAAC;IAExFyB,qBAAqB,CAAC0B,GAAG,CAAC;IAC1BA,GAAG,CAACxB,GAAG,CAAC,WAAW,CAAC;IACpBvE,CAAC,CAAC,MAAM,CAAC,CAACuE,GAAG,CAAC,WAAW,GAAGC,OAAO,CAACuB,GAAG,CAAC9C,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;EACzD,CAAC,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS6F,cAAcA,CAAC3I,EAAE,EAAE4F,IAAI,EAAE1C,GAAG,EAAEC,IAAI,EAAE;EAC5C;EACA,IAAIC,OAAO,GAAGpD,EAAE,CAAC4F,IAAI,GAAG,GAAG,CAAC,CAAC;IAAE9B,MAAM,EAAE;EAAU,CAAC,CAAC,CAACV,OAAO,CAAC,CAAC;EAC7D,IAAIwF,IAAI,GAAGxF,OAAO,CAACW,OAAO,CAACZ,IAAI,CAAC;EAChC,IAAI0F,IAAI,GAAGzF,OAAO,CAACW,OAAO,CAACb,GAAG,CAAC;EAE/B,IAAI,CAAClD,EAAE,CAAC4F,IAAI,GAAG,GAAG,CAAC,CAAC;IAAE/E,QAAQ,EAAE;EAAK,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,IAAI8H,IAAI,KAAK,CAAC,CAAC,EAAE;IAC7D;IACA;IACAxF,OAAO,CAAC0F,MAAM,CAAC1F,OAAO,CAACW,OAAO,CAACb,GAAG,CAAC,GAAG,CAAC,EAAEE,OAAO,CAACjC,MAAM,CAAC;EACzD,CAAC,MACI;IACJ;IACA,IAAIyH,IAAI,GAAGC,IAAI,EAAE;MAChB,IAAInF,GAAG,GAAGmF,IAAI;MACdA,IAAI,GAAGD,IAAI;MACXA,IAAI,GAAGlF,GAAG;IACX;IAEAN,OAAO,CAAC0F,MAAM,CAACD,IAAI,GAAG,CAAC,EAAEzF,OAAO,CAACjC,MAAM,CAAC;IACxCiC,OAAO,CAAC0F,MAAM,CAAC,CAAC,EAAEF,IAAI,CAAC;EACxB;EAEA,IAAI,CAAC5I,EAAE,CAAC4F,IAAI,CAAC,CAAC1C,GAAG,EAAE;IAAErC,QAAQ,EAAE;EAAK,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,EAAE;IAC7C;IACAd,EAAE,CAAC4F,IAAI,GAAG,GAAG,CAAC,CAACxC,OAAO,CAAC,CAACvD,MAAM,CAAC,CAAC;EACjC,CAAC,MACI;IACJ;IACAuD,OAAO,CAAC0F,MAAM,CAAC1F,OAAO,CAACW,OAAO,CAACb,GAAG,CAAC,EAAE,CAAC,CAAC;IACvClD,EAAE,CAAC4F,IAAI,GAAG,GAAG,CAAC,CAACxC,OAAO,CAAC,CAACrC,QAAQ,CAAC,CAAC;EACnC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS2E,KAAKA,CAACzF,GAAG,EAAE8I,KAAK,EAAE;EAC1B,IAAIA,KAAK,IAAI9I,GAAG,CAACG,OAAO,CAAC+B,KAAK,KAAK,QAAQ,EAAE;IAC5C,IAAIwD,GAAG,GAAG,IAAIhG,SAAS,CAAC6H,GAAG,CAACvH,GAAG,CAAC;IAEhC0F,GAAG,CAAC/E,IAAI,CAAC;MAAEC,QAAQ,EAAE;IAAK,CAAC,CAAC,CAACE,QAAQ,CAAC,CAAC;IACvC4E,GAAG,CAAC3E,OAAO,CAAC;MAAEH,QAAQ,EAAE;IAAK,CAAC,CAAC,CAACE,QAAQ,CAAC,CAAC;IAC1C4E,GAAG,CAAC1E,KAAK,CAAC;MAAEJ,QAAQ,EAAE;IAAK,CAAC,CAAC,CAACE,QAAQ,CAAC,CAAC;EACzC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASwE,UAAUA,CAAC9E,CAAC,EAAET,EAAE,EAAEC,GAAG,EAAE2F,IAAI,EAAE1C,GAAG,EAAE;EAC1C,IAAIf,KAAK,GAAGnC,EAAE,CAACH,MAAM,CAACsC,KAAK,CAAC,CAAC;EAC7B,IAAIE,UAAU,GAAGrC,EAAE,CAACH,MAAM,CAACwC,UAAU,CAAC,CAAC;EACvC,IAAI2G,UAAU,GAAGhJ,EAAE,CAAC4F,IAAI,CAAC,CAAC1C,GAAG,EAAE;IAAErC,QAAQ,EAAE;EAAK,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC;EAExD,IAAIkI,UAAU,IAAI,CAAC3G,UAAU,EAAE;IAC9B;EACD;EAEA,IAAIF,KAAK,KAAK,IAAI,EAAE;IACnB,IAAI1B,CAAC,CAACgE,OAAO,IAAIhE,CAAC,CAAC+D,OAAO,EAAE;MAC3B;MACAxE,EAAE,CAAC4F,IAAI,CAAC,CAAC1C,GAAG,CAAC,CAACrD,MAAM,CAAC,CAACmJ,UAAU,CAAC;IAClC,CAAC,MACI,IAAIvI,CAAC,CAAC8D,QAAQ,EAAE;MACpB,IAAIqB,IAAI,KAAK,MAAM,EAAE;QACpB3C,SAAS,CAACjD,EAAE,EAAEkD,GAAG,EAAEjD,GAAG,CAACuF,gBAAgB,IAAI,IAAI,CAAC;MACjD,CAAC,MACI;QACJmD,cAAc,CACb3I,EAAE,EACF4F,IAAI,EACJ1C,GAAG,EACHjD,GAAG,CAACuF,gBAAgB,GAAGvF,GAAG,CAACuF,gBAAgB,CAACI,IAAI,CAAC,GAAG,IACrD,CAAC;MACF;IACD,CAAC,MACI;MACJ;MACA;MACA,IAAI/E,QAAQ,GAAGb,EAAE,CAAC4F,IAAI,GAAG,GAAG,CAAC,CAAC;QAAE/E,QAAQ,EAAE;MAAK,CAAC,CAAC;MAEjD,IAAImI,UAAU,IAAInI,QAAQ,CAACmD,OAAO,CAAC,CAAC,CAAC7C,MAAM,KAAK,CAAC,EAAE;QAClDnB,EAAE,CAAC4F,IAAI,CAAC,CAAC1C,GAAG,CAAC,CAACnC,QAAQ,CAAC,CAAC;MACzB,CAAC,MACI;QACJF,QAAQ,CAACE,QAAQ,CAAC,CAAC;QACnBf,EAAE,CAAC4F,IAAI,CAAC,CAAC1C,GAAG,CAAC,CAACrD,MAAM,CAAC,CAAC;MACvB;IACD;EACD,CAAC,MACI,IAAIsC,KAAK,IAAI,aAAa,EAAE;IAChC,IAAI1B,CAAC,CAAC8D,QAAQ,EAAE;MACf,IAAIqB,IAAI,KAAK,MAAM,EAAE;QACpB3C,SAAS,CAACjD,EAAE,EAAEkD,GAAG,EAAEjD,GAAG,CAACuF,gBAAgB,IAAI,IAAI,CAAC;MACjD,CAAC,MACI;QACJmD,cAAc,CACb3I,EAAE,EACF4F,IAAI,EACJ1C,GAAG,EACHjD,GAAG,CAACuF,gBAAgB,GAAGvF,GAAG,CAACuF,gBAAgB,CAACI,IAAI,CAAC,GAAG,IACrD,CAAC;MACF;IACD,CAAC,MACI;MACJ5F,EAAE,CAAC4F,IAAI,CAAC,CAAC1C,GAAG,CAAC,CAACrD,MAAM,CAAC,CAACmJ,UAAU,CAAC;IAClC;EACD,CAAC,MACI;IACJhJ,EAAE,CAAC4F,IAAI,CAAC,CAAC1C,GAAG,CAAC,CAACrD,MAAM,CAAC,CAACmJ,UAAU,CAAC;EAClC;AACD;AAEA,SAAS5E,OAAOA,CAACtB,IAAI,EAAE;EACtB,OAAOA,IAAI,CAACjB,EAAE,CAACoH,OAAO,CAAC,mBAAmB,EAAE,GAAG,CAAC;AACjD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACArJ,CAAC,CAAC0I,IAAI,CACL,CACC;EAAE1C,IAAI,EAAE,KAAK;EAAE2B,IAAI,EAAE;AAAS,CAAC,EAC/B;EAAE3B,IAAI,EAAE,QAAQ;EAAE2B,IAAI,EAAE;AAAY,CAAC,CACrC,EACD,UAAUrG,CAAC,EAAEgI,CAAC,EAAE;EACfvJ,SAAS,CAACwJ,GAAG,CAAC5G,QAAQ,CAAC2G,CAAC,CAACtD,IAAI,CAAC,CAAC+B,IAAI,CAAC,UAAUzH,QAAQ,EAAE+B,IAAI,EAAEmB,OAAO,EAAE;IACtE,IAAIvC,QAAQ,GAAGoB,IAAI,CAACpB,QAAQ;IAC5B,IAAIH,IAAI;IACR,IAAI0I,GAAG,GAAG,EAAE;IAEZ,IAAIvI,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,EAAE;MAC5C,OAAOuC,OAAO;IACf;IAEA,KAAK,IAAIlC,CAAC,GAAG,CAAC,EAAE0G,GAAG,GAAGxE,OAAO,CAACjC,MAAM,EAAED,CAAC,GAAG0G,GAAG,EAAE1G,CAAC,EAAE,EAAE;MACnDR,IAAI,GAAGR,QAAQ,CAACgJ,CAAC,CAAC3B,IAAI,CAAC,CAACnE,OAAO,CAAClC,CAAC,CAAC,CAAC;MAEnC,IACCR,IAAI,KACFG,QAAQ,KAAK,IAAI,IAAIH,IAAI,CAACqH,gBAAgB,KAAK,IAAI,IACnDlH,QAAQ,KAAK,KAAK,IAAI,CAACH,IAAI,CAACqH,gBAAiB,CAC9C,EACA;QACDqB,GAAG,CAACzB,IAAI,CAACvE,OAAO,CAAClC,CAAC,CAAC,CAAC;MACrB;IACD;IAEA,OAAOkI,GAAG;EACX,CAAC,CAAC;AACH,CACD,CAAC;AAEDzJ,SAAS,CAACwJ,GAAG,CAAC5G,QAAQ,CAACnB,IAAI,CAACuG,IAAI,CAAC,UAAUzH,QAAQ,EAAE+B,IAAI,EAAEhB,KAAK,EAAE;EACjE,IAAIJ,QAAQ,GAAGoB,IAAI,CAACpB,QAAQ;EAC5B,IAAIwI,OAAO;EACX,IAAID,GAAG,GAAG,EAAE;EAEZ,IAAIvI,QAAQ,KAAKF,SAAS,EAAE;IAC3B,OAAOM,KAAK;EACb;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAE0G,GAAG,GAAG3G,KAAK,CAACE,MAAM,EAAED,CAAC,GAAG0G,GAAG,EAAE1G,CAAC,EAAE,EAAE;IACjDmI,OAAO,GAAGnJ,QAAQ,CAAC4H,MAAM,CAAC7G,KAAK,CAACC,CAAC,CAAC,CAACG,GAAG,CAAC;IAEvC,IACCgI,OAAO,KACLxI,QAAQ,KAAK,IAAI,IACjBwI,OAAO,CAACnB,eAAe,IACvBmB,OAAO,CAACnB,eAAe,CAACjH,KAAK,CAACC,CAAC,CAAC,CAACI,MAAM,CAAC,KAAK,IAAI,IACjDT,QAAQ,KAAK,KAAK,KACjB,CAACwI,OAAO,CAACnB,eAAe,IAAI,CAACmB,OAAO,CAACnB,eAAe,CAACjH,KAAK,CAACC,CAAC,CAAC,CAACI,MAAM,CAAC,CAAE,CACzE,EACA;MACD8H,GAAG,CAACzB,IAAI,CAAC1G,KAAK,CAACC,CAAC,CAAC,CAAC;IACnB;EACD;EAEA,OAAOkI,GAAG;AACX,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAIE,WAAW,GAAG3J,SAAS,CAAC6H,GAAG,CAAC+B,QAAQ;AACxC,IAAIC,iBAAiB,GAAG7J,SAAS,CAAC6H,GAAG,CAACiC,cAAc;AAEpDH,WAAW,CAAC,UAAU,EAAE,YAAY;EACnC,OAAO,IAAI,CAACI,QAAQ,CAAC,OAAO,EAAE,UAAUzJ,GAAG,EAAE;IAC5CN,SAAS,CAACE,MAAM,CAACE,IAAI,CAAC,IAAIJ,SAAS,CAAC6H,GAAG,CAACvH,GAAG,CAAC,CAAC;EAC9C,CAAC,CAAC;AACH,CAAC,CAAC;AAEFqJ,WAAW,CAAC,mBAAmB,EAAE,UAAUK,IAAI,EAAE;EAChD,IAAIA,IAAI,KAAKhJ,SAAS,EAAE;IACvB,OAAO,IAAI,CAACiJ,OAAO,CAAC,CAAC,CAAC,CAACxJ,OAAO,CAACgC,QAAQ;EACxC;EAEA,OAAO,IAAI,CAACsH,QAAQ,CAAC,OAAO,EAAE,UAAUzJ,GAAG,EAAE;IAC5CA,GAAG,CAACG,OAAO,CAACgC,QAAQ,GAAGuH,IAAI;EAC5B,CAAC,CAAC;AACH,CAAC,CAAC;AAEFL,WAAW,CAAC,qBAAqB,EAAE,UAAUK,IAAI,EAAE;EAClD,IAAIA,IAAI,KAAKhJ,SAAS,EAAE;IACvB,OAAO,IAAI,CAACiJ,OAAO,CAAC,CAAC,CAAC,CAACxJ,OAAO,CAACiC,UAAU;EAC1C;EAEA,OAAO,IAAI,CAACqH,QAAQ,CAAC,OAAO,EAAE,UAAUzJ,GAAG,EAAE;IAC5CA,GAAG,CAACG,OAAO,CAACiC,UAAU,GAAGsH,IAAI;EAC9B,CAAC,CAAC;AACH,CAAC,CAAC;AAEFL,WAAW,CAAC,eAAe,EAAE,UAAUK,IAAI,EAAE;EAC5C,IAAIA,IAAI,KAAKhJ,SAAS,EAAE;IACvB,OAAO,IAAI,CAACiJ,OAAO,CAAC,CAAC,CAAC,CAACxJ,OAAO,CAACkC,IAAI;EACpC;EAEA,OAAO,IAAI,CAACoH,QAAQ,CAAC,OAAO,EAAE,UAAUzJ,GAAG,EAAE;IAC5CA,GAAG,CAACG,OAAO,CAACkC,IAAI,GAAGqH,IAAI;EACxB,CAAC,CAAC;AACH,CAAC,CAAC;AAEFL,WAAW,CAAC,gBAAgB,EAAE,UAAUpH,KAAK,EAAE;EAC9C,IAAIA,KAAK,KAAKvB,SAAS,EAAE;IACxB,OAAO,IAAI,CAACiJ,OAAO,CAAC,CAAC,CAAC,CAACxJ,OAAO,CAAC8B,KAAK;EACrC;EAEA,OAAO,IAAI,CAACwH,QAAQ,CAAC,OAAO,EAAE,UAAUzJ,GAAG,EAAE;IAC5CA,GAAG,CAACG,OAAO,CAAC8B,KAAK,GAAGA,KAAK;IAEzBiD,YAAY,CAAC,IAAIxF,SAAS,CAAC6H,GAAG,CAACvH,GAAG,CAAC,EAAE,aAAa,EAAE,CAACiC,KAAK,CAAC,CAAC;EAC7D,CAAC,CAAC;AACH,CAAC,CAAC;;AAEF;AACA;AACAoH,WAAW,CAAC,gBAAgB,EAAE,UAAUnH,KAAK,EAAE;EAC9C,IAAIA,KAAK,KAAKxB,SAAS,EAAE;IACxB,OAAO,IAAI,CAACiJ,OAAO,CAAC,CAAC,CAAC,CAACxJ,OAAO,CAAC+B,KAAK;EACrC;EAEA,OAAO,IAAI,CAACuH,QAAQ,CAAC,OAAO,EAAE,UAAUzJ,GAAG,EAAE;IAC5C,IAAI,CAACA,GAAG,CAACG,OAAO,EAAE;MACjBT,SAAS,CAACE,MAAM,CAACE,IAAI,CAAC,IAAIJ,SAAS,CAAC6H,GAAG,CAACvH,GAAG,CAAC,CAAC;IAC9C;IAEA,IAAI,CAACA,GAAG,CAACwH,YAAY,EAAE;MACtB1H,IAAI,CAACE,GAAG,CAAC;IACV;IAEAA,GAAG,CAACG,OAAO,CAAC+B,KAAK,GAAGA,KAAK;;IAEzB;IACA;IACA,IAAInC,EAAE,GAAG,IAAIL,SAAS,CAAC6H,GAAG,CAACvH,GAAG,CAAC;IAC/BgE,qBAAqB,CAACjE,EAAE,CAAC;IAEzB,IAAImC,KAAK,KAAK,KAAK,EAAE;MACpBkC,oBAAoB,CAACrE,EAAE,CAAC;IACzB;IAEAmF,YAAY,CAAC,IAAIxF,SAAS,CAAC6H,GAAG,CAACvH,GAAG,CAAC,EAAE,aAAa,EAAE,CAACkC,KAAK,CAAC,CAAC;EAC7D,CAAC,CAAC;AACH,CAAC,CAAC;AAEFmH,WAAW,CAAC,mBAAmB,EAAE,UAAU/G,QAAQ,EAAE;EACpD,IAAIA,QAAQ,KAAK5B,SAAS,EAAE;IAC3B,OAAO,IAAI,CAACiJ,OAAO,CAAC,CAAC,CAAC,CAACxJ,OAAO,CAACmC,QAAQ;EACxC;EAEA,OAAO,IAAI,CAACmH,QAAQ,CAAC,OAAO,EAAE,UAAUzJ,GAAG,EAAE;IAC5CgE,qBAAqB,CAAC,IAAItE,SAAS,CAAC6H,GAAG,CAACvH,GAAG,CAAC,CAAC;IAE7CA,GAAG,CAACG,OAAO,CAACmC,QAAQ,GAAGA,QAAQ;IAE/B,IAAItC,GAAG,CAACG,OAAO,CAAC+B,KAAK,KAAK,KAAK,EAAE;MAChCkC,oBAAoB,CAAC,IAAI1E,SAAS,CAAC6H,GAAG,CAACvH,GAAG,CAAC,CAAC;IAC7C;EACD,CAAC,CAAC;AACH,CAAC,CAAC;AAEFqJ,WAAW,CAAC,eAAe,EAAE,UAAUO,GAAG,EAAE;EAC3C,IAAI5J,GAAG,GAAG,IAAI,CAAC2J,OAAO,CAAC,CAAC,CAAC;EAEzB,IAAIC,GAAG,EAAE;IACR5J,GAAG,CAACuF,gBAAgB,GAAGqE,GAAG;IAC1B,OAAO,IAAI;EACZ;EAEA,OAAO5J,GAAG,CAACuF,gBAAgB;AAC5B,CAAC,CAAC;AAEFgE,iBAAiB,CAAC,iBAAiB,EAAE,gBAAgB,EAAE,UAAU3J,MAAM,EAAE;EACxE,IAAI8F,GAAG,GAAG,IAAI;EAEd,IAAI9F,MAAM,KAAK,KAAK,EAAE;IACrB,OAAO,IAAI,CAACkB,QAAQ,CAAC,CAAC;EACvB;EAEA,IAAI,CAAC2I,QAAQ,CAAC,KAAK,EAAE,UAAUzJ,GAAG,EAAEiD,GAAG,EAAE;IACxCwC,KAAK,CAACzF,GAAG,CAAC;;IAEV;IACA;IACA;IACA,IAAI6J,MAAM,GAAG7J,GAAG,CAAC6H,MAAM,CAAC5E,GAAG,CAAC;IAC5B,IAAI6G,SAAS,GAAG9J,GAAG,CAACgI,SAAS;IAE7BrI,CAAC,CAACkK,MAAM,CAACE,GAAG,CAAC,CAAChC,QAAQ,CAAC/H,GAAG,CAACG,OAAO,CAACoC,SAAS,CAAC;IAC7CsH,MAAM,CAAC/B,gBAAgB,GAAG,IAAI;IAE9B,KAAK,IAAI7G,CAAC,GAAC,CAAC,EAAGA,CAAC,GAAC6I,SAAS,CAAC5I,MAAM,EAAGD,CAAC,EAAE,EAAE;MACxC,IAAI+I,GAAG,GAAGF,SAAS,CAAC7I,CAAC,CAAC;MAEtB,IAAI+I,GAAG,CAACC,KAAK,KAAK,iBAAiB,EAAE;QACpC;QACAtK,CAAC,CAAC,0BAA0B,EAAEkK,MAAM,CAAC3B,OAAO,CAACjH,CAAC,CAAC,CAAC,CAACqG,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC;;QAEtE;QACAuC,MAAM,CAACK,UAAU,CAACjJ,CAAC,CAAC,GAAG,IAAI;MAC5B;IACD;EACD,CAAC,CAAC;EAEF,IAAI,CAACwI,QAAQ,CAAC,OAAO,EAAE,UAAUzJ,GAAG,EAAEiB,CAAC,EAAE;IACxCiE,YAAY,CAACQ,GAAG,EAAE,QAAQ,EAAE,CAAC,KAAK,EAAEA,GAAG,CAACzE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;EACnD,CAAC,CAAC;EAEF,OAAO,IAAI;AACZ,CAAC,CAAC;AAEFoI,WAAW,CAAC,kBAAkB,EAAE,YAAY;EAC3C,IAAIrJ,GAAG,GAAG,IAAI,CAAC2J,OAAO,CAAC,CAAC,CAAC;EAEzB,IAAI3J,GAAG,IAAI,IAAI,CAACkB,MAAM,IAAIlB,GAAG,CAAC6H,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI7H,GAAG,CAAC6H,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAACC,gBAAgB,EAAE;IACtF,OAAO,IAAI;EACZ;EAEA,OAAO,KAAK;AACb,CAAC,CAAC;AAEFyB,iBAAiB,CAAC,oBAAoB,EAAE,mBAAmB,EAAE,UAAU3J,MAAM,EAAE;EAC9E,IAAI8F,GAAG,GAAG,IAAI;EAEd,IAAI9F,MAAM,KAAK,KAAK,EAAE;IACrB,OAAO,IAAI,CAACkB,QAAQ,CAAC,CAAC;EACvB;EAEA,IAAI,CAAC2I,QAAQ,CAAC,QAAQ,EAAE,UAAUzJ,GAAG,EAAEiD,GAAG,EAAE;IAC3CwC,KAAK,CAACzF,GAAG,CAAC;IAEVA,GAAG,CAACgI,SAAS,CAAC/E,GAAG,CAAC,CAAC6E,gBAAgB,GAAG,IAAI;IAE1C,IAAIzG,MAAM,GAAG,IAAI3B,SAAS,CAAC6H,GAAG,CAACvH,GAAG,CAAC,CAACqB,MAAM,CAAC4B,GAAG,CAAC;IAE/CtD,CAAC,CAAC0B,MAAM,CAACuF,MAAM,CAAC,CAAC,CAAC,CAACmB,QAAQ,CAAC/H,GAAG,CAACG,OAAO,CAACoC,SAAS,CAAC;IAClD5C,CAAC,CAAC0B,MAAM,CAAC8I,MAAM,CAAC,CAAC,CAAC,CAACpC,QAAQ,CAAC/H,GAAG,CAACG,OAAO,CAACoC,SAAS,CAAC;IAElDlB,MAAM,CAACmH,KAAK,CAAC,CAAC,CAAC4B,GAAG,CAAC,CAAC,CAACrC,QAAQ,CAAC/H,GAAG,CAACG,OAAO,CAACoC,SAAS,CAAC;EACrD,CAAC,CAAC;EAEF,IAAI,CAACkH,QAAQ,CAAC,OAAO,EAAE,UAAUzJ,GAAG,EAAEiB,CAAC,EAAE;IACxCiE,YAAY,CAACQ,GAAG,EAAE,QAAQ,EAAE,CAAC,QAAQ,EAAEA,GAAG,CAACzE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;EACtD,CAAC,CAAC;EAEF,OAAO,IAAI;AACZ,CAAC,CAAC;AAEFoI,WAAW,CAAC,qBAAqB,EAAE,YAAY;EAC9C,IAAIrJ,GAAG,GAAG,IAAI,CAAC2J,OAAO,CAAC,CAAC,CAAC;EAEzB,IAAI3J,GAAG,IAAI,IAAI,CAACkB,MAAM,IAAIlB,GAAG,CAACgI,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAIhI,GAAG,CAACgI,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAACF,gBAAgB,EAAE;IAC5F,OAAO,IAAI;EACZ;EAEA,OAAO,KAAK;AACb,CAAC,CAAC;AAEFyB,iBAAiB,CAAC,kBAAkB,EAAE,iBAAiB,EAAE,UAAU3J,MAAM,EAAE;EAC1E,IAAI8F,GAAG,GAAG,IAAI;EAEd,IAAI9F,MAAM,KAAK,KAAK,EAAE;IACrB,OAAO,IAAI,CAACkB,QAAQ,CAAC,CAAC;EACvB;EAEA,IAAI,CAAC2I,QAAQ,CAAC,MAAM,EAAE,UAAUzJ,GAAG,EAAEqK,MAAM,EAAEC,MAAM,EAAE;IACpD7E,KAAK,CAACzF,GAAG,CAAC;IAEV,IAAIS,IAAI,GAAGT,GAAG,CAAC6H,MAAM,CAACwC,MAAM,CAAC;IAE7B,IAAI5J,IAAI,CAACwH,eAAe,KAAKvH,SAAS,EAAE;MACvCD,IAAI,CAACwH,eAAe,GAAG,EAAE;IAC1B;IAEAxH,IAAI,CAACwH,eAAe,CAACqC,MAAM,CAAC,GAAG,IAAI;IAEnC,IAAI7J,IAAI,CAACyH,OAAO,EAAE;MACjBvI,CAAC,CAACc,IAAI,CAACyH,OAAO,CAACoC,MAAM,CAAC,CAAC,CAACvC,QAAQ,CAAC/H,GAAG,CAACG,OAAO,CAACoC,SAAS,CAAC;IACxD;EACD,CAAC,CAAC;EAEF,IAAI,CAACkH,QAAQ,CAAC,OAAO,EAAE,UAAUzJ,GAAG,EAAEiB,CAAC,EAAE;IACxCiE,YAAY,CAACQ,GAAG,EAAE,QAAQ,EAAE,CAAC,MAAM,EAAEA,GAAG,CAAC1E,KAAK,CAAC0E,GAAG,CAACzE,CAAC,CAAC,CAAC,CAACkC,OAAO,CAAC,CAAC,CAAC1B,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;EACnF,CAAC,CAAC;EAEF,OAAO,IAAI;AACZ,CAAC,CAAC;AAEF4H,WAAW,CAAC,mBAAmB,EAAE,YAAY;EAC5C,IAAIrJ,GAAG,GAAG,IAAI,CAAC2J,OAAO,CAAC,CAAC,CAAC;EAEzB,IAAI3J,GAAG,IAAI,IAAI,CAACkB,MAAM,EAAE;IACvB,IAAIE,GAAG,GAAGpB,GAAG,CAAC6H,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACzG,GAAG,CAAC;IAEpC,IAAIA,GAAG,IAAIA,GAAG,CAAC6G,eAAe,IAAI7G,GAAG,CAAC6G,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC5G,MAAM,CAAC,EAAE;MACzE,OAAO,IAAI;IACZ;EACD;EAEA,OAAO,KAAK;AACb,CAAC,CAAC;AAEFkI,iBAAiB,CAAC,mBAAmB,EAAE,kBAAkB,EAAE,YAAY;EACtE,IAAI7D,GAAG,GAAG,IAAI;EAEd,IAAI,CAAC+D,QAAQ,CAAC,KAAK,EAAE,UAAUzJ,GAAG,EAAEiD,GAAG,EAAE;IACxC;IACA,IAAI4G,MAAM,GAAG7J,GAAG,CAAC6H,MAAM,CAAC5E,GAAG,CAAC;IAC5B,IAAI6G,SAAS,GAAG9J,GAAG,CAACgI,SAAS;IAE7BrI,CAAC,CAACkK,MAAM,CAACE,GAAG,CAAC,CAACtB,WAAW,CAACzI,GAAG,CAACG,OAAO,CAACoC,SAAS,CAAC;IAChDsH,MAAM,CAAC/B,gBAAgB,GAAG,KAAK;IAC/B9H,GAAG,CAACuF,gBAAgB,GAAG,IAAI;IAE3B,KAAK,IAAItE,CAAC,GAAC,CAAC,EAAGA,CAAC,GAAC6I,SAAS,CAAC5I,MAAM,EAAGD,CAAC,EAAE,EAAE;MACxC,IAAI+I,GAAG,GAAGF,SAAS,CAAC7I,CAAC,CAAC;MAEtB,IAAI+I,GAAG,CAACC,KAAK,KAAK,iBAAiB,EAAE;QACpC;QACAtK,CAAC,CAAC,0BAA0B,EAAEkK,MAAM,CAAC3B,OAAO,CAACjH,CAAC,CAAC,CAAC,CAACqG,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC;;QAEvE;QACAuC,MAAM,CAACK,UAAU,CAACjJ,CAAC,CAAC,GAAG,IAAI;MAC5B;IACD;EACD,CAAC,CAAC;EAEF,IAAI,CAACwI,QAAQ,CAAC,OAAO,EAAE,UAAUzJ,GAAG,EAAEiB,CAAC,EAAE;IACxCiE,YAAY,CAACQ,GAAG,EAAE,UAAU,EAAE,CAAC,KAAK,EAAEA,GAAG,CAACzE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;EACrD,CAAC,CAAC;EAEF,OAAO,IAAI;AACZ,CAAC,CAAC;AAEFsI,iBAAiB,CAAC,sBAAsB,EAAE,qBAAqB,EAAE,YAAY;EAC5E,IAAI7D,GAAG,GAAG,IAAI;EAEd,IAAI,CAAC+D,QAAQ,CAAC,QAAQ,EAAE,UAAUzJ,GAAG,EAAEiD,GAAG,EAAE;IAC3CjD,GAAG,CAACgI,SAAS,CAAC/E,GAAG,CAAC,CAAC6E,gBAAgB,GAAG,KAAK;IAE3C,IAAIpC,GAAG,GAAG,IAAIhG,SAAS,CAAC6H,GAAG,CAACvH,GAAG,CAAC;IAChC,IAAIqB,MAAM,GAAGqE,GAAG,CAACrE,MAAM,CAAC4B,GAAG,CAAC;IAE5BtD,CAAC,CAAC0B,MAAM,CAACuF,MAAM,CAAC,CAAC,CAAC,CAAC6B,WAAW,CAACzI,GAAG,CAACG,OAAO,CAACoC,SAAS,CAAC;IACrD5C,CAAC,CAAC0B,MAAM,CAAC8I,MAAM,CAAC,CAAC,CAAC,CAAC1B,WAAW,CAACzI,GAAG,CAACG,OAAO,CAACoC,SAAS,CAAC;;IAErD;IACA;IACA;IACAmD,GAAG,CAAC1E,KAAK,CAAC,IAAI,EAAEiC,GAAG,CAAC,CAClBE,OAAO,CAAC,CAAC,CACTkF,IAAI,CAAC,UAAUD,OAAO,EAAE;MACxB,IAAI3H,IAAI,GAAGT,GAAG,CAAC6H,MAAM,CAACO,OAAO,CAAChH,GAAG,CAAC;MAClC,IAAImJ,YAAY,GAAG9J,IAAI,CAACwH,eAAe;MAEvC,IAAIxH,IAAI,CAACyH,OAAO,KAAK,CAACqC,YAAY,IAAI,CAACA,YAAY,CAACnC,OAAO,CAAC/G,MAAM,CAAC,CAAC,EAAE;QACrE1B,CAAC,CAACc,IAAI,CAACyH,OAAO,CAACE,OAAO,CAAC/G,MAAM,CAAC,CAAC,CAACoH,WAAW,CAACzI,GAAG,CAACG,OAAO,CAACoC,SAAS,CAAC;MACnE;IACD,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,IAAI,CAACkH,QAAQ,CAAC,OAAO,EAAE,UAAUzJ,GAAG,EAAEiB,CAAC,EAAE;IACxCiE,YAAY,CAACQ,GAAG,EAAE,UAAU,EAAE,CAAC,QAAQ,EAAEA,GAAG,CAACzE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;EACxD,CAAC,CAAC;EAEF,OAAO,IAAI;AACZ,CAAC,CAAC;AAEFsI,iBAAiB,CAAC,oBAAoB,EAAE,mBAAmB,EAAE,YAAY;EACxE,IAAI7D,GAAG,GAAG,IAAI;EAEd,IAAI,CAAC+D,QAAQ,CAAC,MAAM,EAAE,UAAUzJ,GAAG,EAAEqK,MAAM,EAAEC,MAAM,EAAE;IACpD,IAAI7J,IAAI,GAAGT,GAAG,CAAC6H,MAAM,CAACwC,MAAM,CAAC;IAE7B,IAAI5J,IAAI,CAACwH,eAAe,KAAKvH,SAAS,EAAE;MACvCD,IAAI,CAACwH,eAAe,CAACqC,MAAM,CAAC,GAAG,KAAK;IACrC;;IAEA;IACA;IACA;IACA,IAAI7J,IAAI,CAACyH,OAAO,IAAI,CAAClI,GAAG,CAACgI,SAAS,CAACsC,MAAM,CAAC,CAACxC,gBAAgB,EAAE;MAC5DnI,CAAC,CAACc,IAAI,CAACyH,OAAO,CAACoC,MAAM,CAAC,CAAC,CAAC7B,WAAW,CAACzI,GAAG,CAACG,OAAO,CAACoC,SAAS,CAAC;IAC3D;EACD,CAAC,CAAC;EAEF,IAAI,CAACkH,QAAQ,CAAC,OAAO,EAAE,UAAUzJ,GAAG,EAAEiB,CAAC,EAAE;IACxCiE,YAAY,CAACQ,GAAG,EAAE,UAAU,EAAE,CAAC,MAAM,EAAEA,GAAG,CAACzE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;EACtD,CAAC,CAAC;EAEF,OAAO,IAAI;AACZ,CAAC,CAAC;;AAEF;AACA;AACA;AACA,SAASmF,IAAIA,CAACoE,KAAK,EAAEC,GAAG,EAAE;EACzB,OAAO,UAAU1K,EAAE,EAAE;IACpB,OAAOA,EAAE,CAACqG,IAAI,CAAC,UAAU,GAAGoE,KAAK,EAAEC,GAAG,CAAC;EACxC,CAAC;AACF;;AAEA;AACA,SAASC,gBAAgBA,CAACC,MAAM,EAAE;EACjC,IAAIC,MAAM,GAAGD,MAAM,CAACE,eAAe;EAEnC,OAAO,YAAY,GAAGD,MAAM,GAAG,eAAe,GAAGA,MAAM,GAAG,iBAAiB,GAAGA,MAAM;AACrF;AAEA,SAASE,OAAOA,CAAC/K,EAAE,EAAE4K,MAAM,EAAE;EAC5B,IAAIA,MAAM,CAACI,OAAO,CAACjH,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI/D,EAAE,CAACY,IAAI,CAAC;IAAEC,QAAQ,EAAE;EAAK,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,EAAE;IAC/E,OAAO,IAAI;EACZ;EAEA,IAAI8J,MAAM,CAACI,OAAO,CAACjH,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI/D,EAAE,CAACgB,OAAO,CAAC;IAAEH,QAAQ,EAAE;EAAK,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,EAAE;IACrF,OAAO,IAAI;EACZ;EAEA,IAAI8J,MAAM,CAACI,OAAO,CAACjH,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI/D,EAAE,CAACiB,KAAK,CAAC;IAAEJ,QAAQ,EAAE;EAAK,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,EAAE;IACjF,OAAO,IAAI;EACZ;EAEA,OAAO,KAAK;AACb;AAEA,IAAImK,gBAAgB,GAAG,CAAC;AAExBrL,CAAC,CAACsL,MAAM,CAACvL,SAAS,CAACwJ,GAAG,CAACgC,OAAO,EAAE;EAC/BtK,QAAQ,EAAE;IACT8F,IAAI,EAAEN,IAAI,CAAC,UAAU,EAAE,UAAU,CAAC;IAClC7D,SAAS,EAAE,kBAAkB;IAC7BwI,OAAO,EAAE,CAAC,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC;IACrCjL,IAAI,EAAE,SAAAA,CAAUC,EAAE,EAAE8C,IAAI,EAAE8H,MAAM,EAAE;MACjC,IAAIQ,IAAI,GAAG,IAAI;MACfR,MAAM,CAACE,eAAe,GAAG,SAAS,GAAGG,gBAAgB,EAAE;;MAEvD;MACA;MACAjL,EAAE,CAACwB,EAAE,CAACmJ,gBAAgB,CAACC,MAAM,CAAC,EAAE,YAAY;QAC3CQ,IAAI,CAACC,MAAM,CAACN,OAAO,CAAC/K,EAAE,EAAE4K,MAAM,CAAC,CAAC;MACjC,CAAC,CAAC;MAEF,IAAI,CAACU,OAAO,CAAC,CAAC;IACf,CAAC;IACDC,OAAO,EAAE,SAAAA,CAAUvL,EAAE,EAAE8C,IAAI,EAAE8H,MAAM,EAAE;MACpC5K,EAAE,CAACmE,GAAG,CAACyG,MAAM,CAACE,eAAe,CAAC;IAC/B;EACD,CAAC;EACDU,cAAc,EAAE;IACf7E,IAAI,EAAEN,IAAI,CAAC,gBAAgB,EAAE,iBAAiB,CAAC;IAC/C7D,SAAS,EAAE,yBAAyB;IACpCzC,IAAI,EAAE,SAAAA,CAAUC,EAAE,EAAE8C,IAAI,EAAE8H,MAAM,EAAE;MACjC,IAAIQ,IAAI,GAAG,IAAI;MACfR,MAAM,CAACE,eAAe,GAAG,SAAS,GAAGG,gBAAgB,EAAE;MAEvDjL,EAAE,CAACwB,EAAE,CAACmJ,gBAAgB,CAACC,MAAM,CAAC,EAAE,YAAY;QAC3C,IAAIvD,KAAK,GACRrH,EAAE,CAACY,IAAI,CAAC;UAAEC,QAAQ,EAAE;QAAK,CAAC,CAAC,CAACmD,OAAO,CAAC,CAAC,CAAC7C,MAAM,GAC5CnB,EAAE,CAACgB,OAAO,CAAC;UAAEH,QAAQ,EAAE;QAAK,CAAC,CAAC,CAACmD,OAAO,CAAC,CAAC,CAAC7C,MAAM,GAC/CnB,EAAE,CAACiB,KAAK,CAAC;UAAEJ,QAAQ,EAAE;QAAK,CAAC,CAAC,CAACmD,OAAO,CAAC,CAAC,CAAC7C,MAAM;QAE9CiK,IAAI,CAACC,MAAM,CAAChE,KAAK,KAAK,CAAC,CAAC;MACzB,CAAC,CAAC;MAEF,IAAI,CAACiE,OAAO,CAAC,CAAC;IACf,CAAC;IACDC,OAAO,EAAE,SAAAA,CAAUvL,EAAE,EAAE8C,IAAI,EAAE8H,MAAM,EAAE;MACpC5K,EAAE,CAACmE,GAAG,CAACyG,MAAM,CAACE,eAAe,CAAC;IAC/B;EACD,CAAC;EACDW,SAAS,EAAE;IACV9E,IAAI,EAAEN,IAAI,CAAC,WAAW,EAAE,YAAY,CAAC;IACrC7D,SAAS,EAAE,oBAAoB;IAC/BkJ,MAAM,EAAE,SAAAA,CAAUjL,CAAC,EAAET,EAAE,EAAE8C,IAAI,EAAE8H,MAAM,EAAE;MACtC,IAAI1I,KAAK,GAAG,IAAI,CAACrC,MAAM,CAACqC,KAAK,CAAC,CAAC;MAC/B,IAAIyJ,GAAG,GAAGf,MAAM,CAACgB,gBAAgB;MAEjC,IAAID,GAAG,EAAE;QACR,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;UAC9BA,GAAG,GAAGA,GAAG,CAACE,IAAI,CAAC7L,EAAE,EAAES,CAAC,EAAET,EAAE,EAAE8C,IAAI,EAAE8H,MAAM,CAAC;QACxC;QAEA,IAAI,CAAC1I,KAAK,GAAG,GAAG,CAAC,CAACyJ,GAAG,CAAC,CAAC9L,MAAM,CAAC,CAAC;MAChC,CAAC,MACI;QACJ,IAAI,CAACqC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAACrC,MAAM,CAAC,CAAC;MAC7B;IACD;IACA;EACD,CAAC;EACDiM,UAAU,EAAE;IACXnF,IAAI,EAAEN,IAAI,CAAC,YAAY,EAAE,cAAc,CAAC;IACxC7D,SAAS,EAAE,qBAAqB;IAChCkJ,MAAM,EAAE,SAAAA,CAAA,EAAY;MACnBhG,KAAK,CAAC,IAAI,CAACxF,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;IAChC,CAAC;IACDH,IAAI,EAAE,SAAAA,CAAUC,EAAE,EAAE8C,IAAI,EAAE8H,MAAM,EAAE;MACjC,IAAIQ,IAAI,GAAG,IAAI;MACfR,MAAM,CAACE,eAAe,GAAG,SAAS,GAAGG,gBAAgB,EAAE;MAEvDjL,EAAE,CAACwB,EAAE,CAACmJ,gBAAgB,CAACC,MAAM,CAAC,EAAE,YAAY;QAC3C,IAAIvD,KAAK,GACRrH,EAAE,CAACY,IAAI,CAAC;UAAEC,QAAQ,EAAE;QAAK,CAAC,CAAC,CAACmD,OAAO,CAAC,CAAC,CAAC7C,MAAM,GAC5CnB,EAAE,CAACgB,OAAO,CAAC;UAAEH,QAAQ,EAAE;QAAK,CAAC,CAAC,CAACmD,OAAO,CAAC,CAAC,CAAC7C,MAAM,GAC/CnB,EAAE,CAACiB,KAAK,CAAC;UAAEJ,QAAQ,EAAE;QAAK,CAAC,CAAC,CAACmD,OAAO,CAAC,CAAC,CAAC7C,MAAM;QAE9CiK,IAAI,CAACC,MAAM,CAAChE,KAAK,GAAG,CAAC,CAAC;MACvB,CAAC,CAAC;MAEF,IAAI,CAACiE,OAAO,CAAC,CAAC;IACf,CAAC;IACDC,OAAO,EAAE,SAAAA,CAAUvL,EAAE,EAAE8C,IAAI,EAAE8H,MAAM,EAAE;MACpC5K,EAAE,CAACmE,GAAG,CAACyG,MAAM,CAACE,eAAe,CAAC;IAC/B;EACD,CAAC;EACDiB,YAAY,EAAE;IACbpF,IAAI,EAAEN,IAAI,CAAC,cAAc,EAAE,oBAAoB,CAAC;IAChD7D,SAAS,EAAE,uBAAuB;IAClCkJ,MAAM,EAAE,SAAAA,CAAUjL,CAAC,EAAET,EAAE,EAAE;MACxB,IAAIA,EAAE,CAAC8D,MAAM,CAACkI,KAAK,CAAC,WAAW,CAAC,EAAE;QACjC;QACAhM,EAAE,CAAC8D,MAAM,CAACkI,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC;QAElC,IAAI,CAACC,MAAM,CAAC,KAAK,CAAC;MACnB,CAAC,MACI;QACJ;QACA;QACA;QACA,IAAIC,OAAO,GAAGlM,EAAE,CAACE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC4H,MAAM;QAErC9H,EAAE,CAAC8D,MAAM,CAACkI,KAAK,CAAC,WAAW,EAAE,UAAUrF,IAAI,EAAEjG,IAAI,EAAEwC,GAAG,EAAE;UACvD;UACA,OAAOgJ,OAAO,CAAChJ,GAAG,CAAC,CAAC6E,gBAAgB;QACrC,CAAC,CAAC;QAEF,IAAI,CAACkE,MAAM,CAAC,IAAI,CAAC;MAClB;MAEAjM,EAAE,CAACmM,IAAI,CAAC,CAAC;IACV;EACD;AACD,CAAC,CAAC;AAEFvM,CAAC,CAAC0I,IAAI,CAAC,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,CAAC,EAAE,UAAUpH,CAAC,EAAEkL,IAAI,EAAE;EACpD,IAAIC,EAAE,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC;EAE3B3M,SAAS,CAACwJ,GAAG,CAACgC,OAAO,CAAC,QAAQ,GAAGiB,IAAI,GAAG,GAAG,CAAC,GAAG;IAC9CzF,IAAI,EAAEN,IAAI,CAAC,QAAQ,GAAG+F,IAAI,GAAG,GAAG,EAAE,SAAS,GAAGC,EAAE,GAAG,GAAG,CAAC;IACvD7J,SAAS,EAAE,iBAAiB,GAAG6J,EAAE,GAAG,GAAG;IACvCX,MAAM,EAAE,SAAAA,CAAA,EAAY;MACnB,IAAI,CAAC7L,MAAM,CAACqC,KAAK,CAACmK,EAAE,CAAC;IACtB,CAAC;IACDtM,IAAI,EAAE,SAAAA,CAAUC,EAAE,EAAE;MACnB,IAAIoL,IAAI,GAAG,IAAI;MAEfpL,EAAE,CAACwB,EAAE,CAAC,mBAAmB,EAAE,UAAUf,CAAC,EAAER,GAAG,EAAEiC,KAAK,EAAE;QACnDkJ,IAAI,CAACa,MAAM,CAAC/J,KAAK,KAAKmK,EAAE,CAAC;MAC1B,CAAC,CAAC;IACH;EACD,CAAC;AACF,CAAC,CAAC;AAEF1M,SAAS,CAACiG,IAAI,CAAC,iBAAiB,EAAE;EACjCpD,SAAS,EAAE,WAAW;EACtB+J,MAAM,EAAE,SAAAA,CAAU7L,IAAI,EAAE;IACvB;IACA,OAAOA,IAAI,KAAK,iBAAiB,GAAGA,IAAI,GAAG,KAAK;EACjD,CAAC;EACD8L,KAAK,EAAE;IACNC,GAAG,EAAE,SAAAA,CAAU5E,CAAC,EAAE;MACjB,OAAOA,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;IAC1B;EACD;AACD,CAAC,CAAC;AAEFjI,CAAC,CAACsL,MAAM,CAAC,IAAI,EAAEvL,SAAS,CAACqC,QAAQ,CAAC0K,SAAS,EAAE;EAC5C7M,MAAM,EAAE;IACP8M,IAAI,EAAE;MACLC,WAAW,EAAE;IACd;EACD;AACD,CAAC,CAAC;AAEFjN,SAAS,CAACkN,MAAM,CAAChN,MAAM,GAAG,UAAUiN,SAAS,EAAEC,QAAQ,EAAE;EACxD,IAAIC,OAAO,GAAGF,SAAS,GAAGnN,SAAS,CAACsN,IAAI,CAACC,GAAG,CAACJ,SAAS,CAAC,GAAG,IAAI;EAC9D,IAAIK,MAAM,GAAGJ,QAAQ,GAAGpN,SAAS,CAACsN,IAAI,CAACC,GAAG,CAACH,QAAQ,CAAC,GAAG,IAAI;EAE3D,OAAO,UAAUrM,IAAI,EAAEkF,IAAI,EAAEvE,GAAG,EAAE+L,IAAI,EAAE;IACvC,IAAIC,KAAK,GAAGD,IAAI,CAAClN,QAAQ,CAAC4H,MAAM,CAACsF,IAAI,CAAC/L,GAAG,CAAC;IAC1C,IAAIR,QAAQ,GAAGwM,KAAK,CAACtF,gBAAgB;IACrC,IAAIuF,SAAS,GAAGF,IAAI,CAAClN,QAAQ,CAACwM,SAAS,CAAC7M,MAAM,CAAC8M,IAAI,CAACC,WAAW;IAE/D,IAAIhH,IAAI,KAAK,SAAS,EAAE;MACvB,OAAOhG,CAAC,CAAC,SAAS,CAAC,CACjBmH,IAAI,CAAC;QACL,YAAY,EAAEuG,SAAS;QACvBtG,KAAK,EAAE,oBAAoB;QAC3Bd,IAAI,EAAEiH,MAAM,GAAGA,MAAM,CAAC9L,GAAG,CAAC,GAAG,IAAI;QACjCuE,IAAI,EAAE,UAAU;QAChB2H,KAAK,EAAEP,OAAO,GAAGA,OAAO,CAAC3L,GAAG,CAAC,GAAG,IAAI;QACpC6F,OAAO,EAAErG;MACV,CAAC,CAAC,CAAC,CAAC,CAAC;IACP,CAAC,MACI,IAAI+E,IAAI,KAAK,MAAM,EAAE;MACzB,OAAO,iBAAiB;IACzB,CAAC,MACI,IAAIA,IAAI,KAAK,QAAQ,EAAE;MAC3B,OAAO,EAAE;IACV;IAEA,OAAO/E,QAAQ,GAAG,GAAG,GAAG,EAAE;EAC3B,CAAC;AACF,CAAC;;AAED;AACAlB,SAAS,CAACwJ,GAAG,CAACqD,KAAK,CAAC,iBAAiB,CAAC,GAAG,UAAUtM,QAAQ,EAAE+J,GAAG,EAAE;EACjE,OAAO,IAAI,CAACtE,GAAG,CAAC,CAAC,CACfrE,MAAM,CAAC2I,GAAG,EAAE;IAAEuC,KAAK,EAAE;EAAQ,CAAC,CAAC,CAC/B/D,KAAK,CAAC,CAAC,CACP9G,GAAG,CAAC,UAAU6L,EAAE,EAAE;IAClB,IAAItN,QAAQ,CAACE,OAAO,CAAC8B,KAAK,KAAK,KAAK,EAAE;MACrC,OAAOtC,CAAC,CAAC4N,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC1K,QAAQ,CAAC7C,QAAQ,CAACE,OAAO,CAACoC,SAAS,CAAC;IAC3D,CAAC,MACI,IAAItC,QAAQ,CAACE,OAAO,CAAC8B,KAAK,KAAK,MAAM,EAAE;MAC3C,OAAOtC,CAAC,CAAC4N,EAAE,CAAC,CAACzK,QAAQ,CAAC7C,QAAQ,CAACE,OAAO,CAACoC,SAAS,CAAC;IAClD;IACA,OAAO,KAAK;EACb,CAAC,CAAC;AACJ,CAAC;AAED5C,CAAC,CAAC8N,EAAE,CAAC/N,SAAS,CAACE,MAAM,GAAGF,SAAS,CAACE,MAAM;;AAExC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACAD,CAAC,CAAC+N,QAAQ,CAAC,CAACnM,EAAE,CAAC,qBAAqB,EAAE,UAAUf,CAAC,EAAER,GAAG,EAAE;EACvD,IAAIQ,CAAC,CAACmN,SAAS,KAAK,IAAI,EAAE;IACzB;EACD;EAEAjO,SAAS,CAACE,MAAM,CAACE,IAAI,CAAC,IAAIJ,SAAS,CAAC6H,GAAG,CAACvH,GAAG,CAAC,CAAC;AAC9C,CAAC,CAAC;AAGF,eAAeN,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}