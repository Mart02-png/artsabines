{"ast":null,"code":"import DataTable from 'datatables.net-vue3';\nimport DataTablesCore from 'datatables.net-bs5';\nimport Buttons from 'datatables.net-buttons-bs5';\nimport axios from 'axios';\nimport * as bootstrap from 'bootstrap';\nexport default {\n  components: {\n    DataTable\n  },\n  data() {\n    return {\n      deletemodal: null,\n      editmodal: null,\n      columns: [\n        // Your column definition\n      ],\n      tableData: []\n    };\n  },\n  mounted() {\n    this.fetchEvents();\n    this.deletemodal = new bootstrap.Modal(document.getElementById('deleteModal'), {\n      // Optional: specify options here\n    });\n    this.editmodal = new bootstrap.Modal(document.getElementById('editModal'), {\n      // Optional: specify options here\n    });\n  },\n  methods: {\n    fetchEvents() {\n      // Your fetch events method\n    },\n    deleteEvent(id) {\n      // Your delete event method\n    },\n    deleteItemModal() {\n      // Your delete item modal method\n    },\n    editEvent(id) {\n      console.log(\"Edit this ID\", id);\n      // Show edit modal\n      this.editmodal.show();\n      // Implement logic to populate form fields for editing\n    },\n    saveEdit() {\n      // Logic to save changes after editing\n      // Close edit modal after saving\n      this.editmodal.hide();\n    }\n  }\n};","map":{"version":3,"names":["DataTable","DataTablesCore","Buttons","axios","bootstrap","components","data","deletemodal","editmodal","columns","tableData","mounted","fetchEvents","Modal","document","getElementById","methods","deleteEvent","id","deleteItemModal","editEvent","console","log","show","saveEdit","hide"],"sources":["C:\\Users\\Asus\\Desktop\\Clinic\\Working System\\clinicsystem\\src\\views\\AboutView.vue"],"sourcesContent":["<script>\nimport DataTable from 'datatables.net-vue3';\nimport DataTablesCore from 'datatables.net-bs5';\nimport Buttons from 'datatables.net-buttons-bs5';\nimport axios from 'axios';\nimport * as bootstrap from 'bootstrap';\n\nexport default {\n  components: {\n    DataTable,\n  },\n\n  data() {\n    return {\n      deletemodal: null,\n      editmodal: null,\n      columns: [\n        // Your column definition\n      ],\n      tableData: [],\n    }\n  },\n  mounted() {\n    this.fetchEvents();\n    this.deletemodal = new bootstrap.Modal(document.getElementById('deleteModal'), {\n      // Optional: specify options here\n    });\n    this.editmodal = new bootstrap.Modal(document.getElementById('editModal'), {\n      // Optional: specify options here\n    });\n  },\n\n  methods: {\n    fetchEvents() {\n      // Your fetch events method\n    },\n    deleteEvent(id) {\n      // Your delete event method\n    },\n    deleteItemModal() {\n      // Your delete item modal method\n    },\n    editEvent(id) {\n      console.log(\"Edit this ID\", id);\n      // Show edit modal\n      this.editmodal.show();\n      // Implement logic to populate form fields for editing\n    },\n    saveEdit() {\n      // Logic to save changes after editing\n      // Close edit modal after saving\n      this.editmodal.hide();\n    }\n  }\n}\n</script>\n"],"mappings":"AACA,OAAOA,SAAQ,MAAO,qBAAqB;AAC3C,OAAOC,cAAa,MAAO,oBAAoB;AAC/C,OAAOC,OAAM,MAAO,4BAA4B;AAChD,OAAOC,KAAI,MAAO,OAAO;AACzB,OAAO,KAAKC,SAAQ,MAAO,WAAW;AAEtC,eAAe;EACbC,UAAU,EAAE;IACVL;EACF,CAAC;EAEDM,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,IAAI;MACjBC,SAAS,EAAE,IAAI;MACfC,OAAO,EAAE;QACP;MAAA,CACD;MACDC,SAAS,EAAE;IACb;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,WAAW,CAAC,CAAC;IAClB,IAAI,CAACL,WAAU,GAAI,IAAIH,SAAS,CAACS,KAAK,CAACC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,EAAE;MAC7E;IAAA,CACD,CAAC;IACF,IAAI,CAACP,SAAQ,GAAI,IAAIJ,SAAS,CAACS,KAAK,CAACC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,EAAE;MACzE;IAAA,CACD,CAAC;EACJ,CAAC;EAEDC,OAAO,EAAE;IACPJ,WAAWA,CAAA,EAAG;MACZ;IAAA,CACD;IACDK,WAAWA,CAACC,EAAE,EAAE;MACd;IAAA,CACD;IACDC,eAAeA,CAAA,EAAG;MAChB;IAAA,CACD;IACDC,SAASA,CAACF,EAAE,EAAE;MACZG,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEJ,EAAE,CAAC;MAC/B;MACA,IAAI,CAACV,SAAS,CAACe,IAAI,CAAC,CAAC;MACrB;IACF,CAAC;IACDC,QAAQA,CAAA,EAAG;MACT;MACA;MACA,IAAI,CAAChB,SAAS,CAACiB,IAAI,CAAC,CAAC;IACvB;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}