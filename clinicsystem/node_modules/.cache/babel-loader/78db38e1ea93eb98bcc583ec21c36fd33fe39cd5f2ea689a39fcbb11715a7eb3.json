{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"demo-app\"\n};\nconst _hoisted_2 = {\n  class: \"demo-app-sidebar\",\n  style: {\n    \"display\": \"flex\",\n    \"flex-direction\": \"column\",\n    \"justify-content\": \"space-between\"\n  }\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"margin\": \"50px 5px 10px 5px\"\n  }\n})], -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"text-center\",\n  style: {\n    \"margin\": \"10px 5px 10px 5px\"\n  }\n};\nconst _hoisted_5 = {\n  class: \"demo-app-main\"\n};\nconst _hoisted_6 = {\n  class: \"modal fade\",\n  id: \"exampleModal\",\n  tabindex: \"-1\",\n  \"aria-labelledby\": \"exampleModalLabel\",\n  \"aria-hidden\": \"true\"\n};\nconst _hoisted_7 = {\n  class: \"modal-dialog modal-dialog-centered\"\n};\nconst _hoisted_8 = {\n  class: \"modal-content\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"modal-header\"\n}, [/*#__PURE__*/_createElementVNode(\"h5\", {\n  class: \"modal-title\",\n  id: \"exampleModalLabel\"\n}, \"Create Schedule\"), /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"button\",\n  class: \"btn-close\",\n  \"data-bs-dismiss\": \"modal\",\n  \"aria-label\": \"Close\"\n})], -1 /* HOISTED */);\nconst _hoisted_10 = {\n  class: \"modal-body\"\n};\nconst _hoisted_11 = {\n  class: \"mb-3\"\n};\nconst _hoisted_12 = {\n  class: \"modal-footer\"\n};\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"button\",\n  class: \"btn btn-secondary\",\n  \"data-bs-dismiss\": \"modal\"\n}, \"Close\", -1 /* HOISTED */);\nconst _hoisted_14 = {\n  class: \"modal fade\",\n  id: \"deleteModal\",\n  tabindex: \"-1\",\n  \"aria-labelledby\": \"deleteModal\",\n  \"aria-hidden\": \"true\"\n};\nconst _hoisted_15 = {\n  class: \"modal-dialog modal-dialog-centered\"\n};\nconst _hoisted_16 = {\n  class: \"modal-content\"\n};\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"modal-header\"\n}, [/*#__PURE__*/_createElementVNode(\"h5\", {\n  class: \"modal-title\"\n}, \"Delete\"), /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"button\",\n  class: \"btn-close\",\n  \"data-bs-dismiss\": \"modal\",\n  \"aria-label\": \"Close\"\n})], -1 /* HOISTED */);\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"modal-body\"\n}, [/*#__PURE__*/_createElementVNode(\"p\", null, \"Are you sure you want to delete?\")], -1 /* HOISTED */);\nconst _hoisted_19 = {\n  class: \"modal-footer\"\n};\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"button\",\n  class: \"btn btn-secondary\",\n  \"data-bs-dismiss\": \"modal\"\n}, \"Close\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_FullCalendar = _resolveComponent(\"FullCalendar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createCommentVNode(\" Admin Logout \"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.logout && $options.logout(...args)),\n    class: \"btn btn-danger\"\n  }, \"Admin Logout\")])]), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_FullCalendar, {\n    class: \"demo-app-calendar\",\n    options: _ctx.calendarOptions\n  }, {\n    eventContent: _withCtx(arg => [_createElementVNode(\"b\", null, _toDisplayString(arg.start), 1 /* TEXT */), _createElementVNode(\"i\", null, _toDisplayString(arg.event.title), 1 /* TEXT */)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"options\"])]), _createCommentVNode(\" Modal \"), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _createCommentVNode(\" Modal Body Content \"), _createElementVNode(\"div\", _hoisted_10, [_createCommentVNode(\" <div class=\\\"mb-3\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"newEventTitle\\\" v-model=\\\"newEventTitle\\\" placeholder=\\\"Event Title\\\">\\n                </div> \"), _createElementVNode(\"div\", _hoisted_11, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"nameInput\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.nameInput = $event),\n    placeholder: \"Name\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.nameInput]])]), _createCommentVNode(\" <div class=\\\"mb-3\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastnameInput\\\" v-model=\\\"lastnameInput\\\" placeholder=\\\"Lastname\\\">\\n                </div>\\n                <div class=\\\"mb-3\\\">\\n                  <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"emailInput\\\" v-model=\\\"emailInput\\\" placeholder=\\\"Email\\\">\\n                </div> \"), _createCommentVNode(\" Rest of your modal content \")]), _createElementVNode(\"div\", _hoisted_12, [_hoisted_13, _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-primary\",\n    onClick: _cache[2] || (_cache[2] = $event => $options.saveChanges(_ctx.selectedInfo))\n  }, \"Save changes\")])])])]), _createCommentVNode(\" Delete \"), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"div\", _hoisted_16, [_hoisted_17, _hoisted_18, _createElementVNode(\"div\", _hoisted_19, [_hoisted_20, _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-danger\",\n    onClick: _cache[3] || (_cache[3] = $event => $options.deleteItemModal(_ctx.clickedInfo))\n  }, \"Delete\")])])])])]);\n}","map":{"version":3,"names":["class","style","_createElementVNode","id","tabindex","type","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createCommentVNode","_hoisted_4","onClick","_cache","args","$options","logout","_hoisted_5","_createVNode","_component_FullCalendar","options","_ctx","calendarOptions","eventContent","_withCtx","arg","_toDisplayString","start","event","title","_","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","$event","nameInput","placeholder","_hoisted_12","_hoisted_13","saveChanges","selectedInfo","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","deleteItemModal","clickedInfo"],"sources":["C:\\Users\\Asus\\Desktop\\Clinic\\clinicsystem\\src\\views\\AdminView.vue"],"sourcesContent":["<!-- AdminView.vue -->\n\n<script>\n// require('@fullcalendar/core/main.min.css')\n\nimport FullCalendar from '@fullcalendar/vue3'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport listPlugin from '@fullcalendar/list'\n\nimport axios from 'axios';\n// import { INITIAL_EVENTS, createEventId } from './event-utils'\nimport bootstrap5Plugin from '@fullcalendar/bootstrap5'\nimport * as bootstrap from 'bootstrap';\n\nlet eventGuid = 0\nexport function createEventId() {\n  return String(eventGuid++)\n}\n\nfunction formatDatetime(datetimeStr) {\n  return datetimeStr.replace('T', ' ').replace(/\\+.*$/, '');\n}\n\nexport default {\n  components: {\n    FullCalendar // make the <FullCalendar> tag available\n  },\n\n  data: function () {\n    return {\n      modal: null,\n      deletemodal: null,\n      nameInput: '',\n      email: '',\n      // lastnameInput: '',\n      // emailInput: '',\n      calendarOptions: {\n        plugins: [\n          bootstrap5Plugin,\n          listPlugin,\n          dayGridPlugin,\n          timeGridPlugin,\n          interactionPlugin // needed for dateClick\n        ],\n        headerToolbar: {\n          left: 'prev,next today',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'\n        },\n        themeSystem: 'bootstrap5', // important!\n        initialView: 'dayGridMonth',\n        // initialEvents: INITIAL_EVENTS, // alternatively, use the `events` setting to fetch from a feed\n        editable: true,\n        selectable: true,\n        selectMirror: true,\n        dayMaxEvents: true,\n        weekends: true,\n        select: this.handleDateSelect,\n        eventClick: this.deleteItem,\n        eventsSet: this.handleEvents,\n        eventDrop: this.handleEventDrop, // Add eventDrop handler\n        eventResize: this.handleEventResize,\n        eventDisplay: 'block'\n        /* you can update a remote database when these fire:\n        eventAdd:\n        eventChange:\n        eventRemove:\n        */\n      },\n      allevents: []\n    }\n  },\n\n  mounted() {\n    this.fetchEvents();\n    this.modal = new bootstrap.Modal(document.getElementById('exampleModal'), {\n      // Optional: specify options here\n    });\n    this.deletemodal = new bootstrap.Modal(document.getElementById('deleteModal'), {\n      // Optional: specify options here\n    });\n    // Get the logged-in user's email from route parameters\n    this.email = this.$route.params.email;\n        console.log('Email in mounted():', this.email); // Add this line to debug\n  },\n\n  methods: {\n    logout() {\n\n      console.log(localStorage.getItem('token'));\n      axios.post('http://localhost:8000/api/auth/logout', null, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      })\n      .then(response => {\n        localStorage.removeItem('token');\n        this.$router.push({ name: 'login' });\n        console.log(response.data);\n      })\n      .catch(error => {\n        localStorage.removeItem('token');\n        this.$router.push({ name: 'login' });\n        console.error('Logout error:', error);\n        console.log('An error occurred while logging out. Please try again.');\n      });\n    },\n\n    fetchEvents() {\n      // Fetch events from local storage\n      let eventsFromLocalStorage = JSON.parse(localStorage.getItem('events')) || [];\n      // Fetch events from the API\n      axios.get('http://localhost:8000/api/events')\n        .then(response => {\n          //   let eventsFromAPI = response.data.filter(event => event.user === 'admin' ||  event.user === 'clientApproved' ).map(event => ({\n          //   id: event.id,\n          //   title: event.title,\n          //   start: event.start,\n          //   user: event.user,\n          //   end: event.end,\n          //   allDay: event.allDay  \n          // }));\n\n          // let eventsFromAPI = response.data.map(event => {\n            let eventsFromAPI = response.data.filter(event => event.user === 'admin' ||  event.user === 'clientApproved' ).map(event => {\n          \n            let color;\n            switch (event.user) {\n                case 'clientApproval':\n                    color = '#007FFF';\n                    break;\n                case 'clientApproved':\n                    color = '#FF9E00';\n                    break;\n                case 'admin':\n                    color = '#FF2D00';\n                    break;\n                default:\n                    // Handle default case if needed\n                    break;\n            }\n\n            return {\n                id: event.id,\n                title: event.title,\n                start: event.start,\n                end: event.end,\n                allDay: event.allDay,\n                user: event.user,\n                color: color // Assign color based on user type\n            };\n        });\n\n          // Combine events from local storage and API\n          let allEvents = eventsFromLocalStorage.concat(eventsFromAPI);\n\n          // Update the calendar events with combined events\n          // this.$set(this.calendarOptions, 'events', allEvents);\n          this.calendarOptions.events = allEvents; // Directly assign events to calendarOptions\n\n        })\n        .catch(error => {\n          console.error('Error fetching events:', error);\n        });\n    },\n\n    handleWeekendsToggle() {\n      this.calendarOptions.weekends = !this.calendarOptions.weekends // update a property\n    },\n\n    //ADD EVENT\n    handleDateSelect(selectInfo) {\n      this.modal.show();\n      this.selectedInfo = selectInfo; // Store selectInfo in selectedInfo\n    },\n\n    saveChanges(selectedInfo) {\n      let calendarApi = selectedInfo.view.calendar\n      calendarApi.unselect() // clear date selection\n\n      console.log(this.email);\n      \n      axios.post('http://localhost:8000/api/events', {\n\n          title: this.nameInput,\n          email: this.email,\n          start: formatDatetime(selectedInfo.startStr),\n          end: formatDatetime(selectedInfo.endStr),\n          user: 'admin',\n          allDay: selectedInfo.allDay\n        })\n          .then(response => {\n            // Hide the modal\n            this.modal.hide();\n            // Handle success\n            console.log('Event added:', response.data);\n            console.log('Event added ID:', response.data.id);\n            this.allevents.push(response.data);\n            this.fetchEvents();\n\n            // this.newEventTitle = '';\n            this.nameInput = '';\n              this.lastnameInput = '';\n              this.emailInput = '';\n\n          })\n          .catch(error => {\n            // Handle error\n            console.error('Error adding event:', error.response.data);\n          });\n    },\n\n    // handleDateSelect(selectInfo) {\n    //   let title = prompt('Please enter a new title for your event')\n    //   let calendarApi = selectInfo.view.calendar\n\n    //   calendarApi.unselect() // clear date selection\n\n    //   if (title) {\n\n    //     console.log(formatDatetime(new Date().toISOString()));\n\n    //     axios.post('http://localhost:8000/api/events', {\n\n    //       title: title,\n    //       start: formatDatetime(selectInfo.startStr),\n    //       end: formatDatetime(selectInfo.endStr),\n    //       user: 'admin',\n    //       allDay: selectInfo.allDay\n    //     })\n    //       .then(response => {\n    //         // Handle success\n    //         console.log('Event added:', response.data);\n    //         console.log('Event added ID:', response.data.id);\n    //         this.allevents.push(response.data);\n\n    //         // let newEvent = {\n    //         //   id: response.data.id,\n    //         //   title: response.data.title,\n    //         //   start: response.data.start,\n    //         //   end: response.data.end,\n    //         //   allDay: response.data.allDay\n    //         // };\n\n    //         // this.allevents.push(newEvent);\n    //         // localStorage.setItem('events', JSON.stringify(this.allevents));\n\n    //         // Get existing events from local storage or initialize an empty array\n    //         // let events = JSON.parse(localStorage.getItem('events')) || [];\n    //         // events.push(newEvent); // Append the new event to existing events\n    //         // localStorage.setItem('events', JSON.stringify(events)); // Set the updated events array to local storage\n\n    //         // calendarApi.addEvent(newEvent);\n    //         // Fetch events again to update the calendar\n    //         this.fetchEvents();\n\n    //       })\n    //       .catch(error => {\n    //         // Handle error\n    //         console.error('Error adding event:', error.response.data);\n    //       });\n    //   }\n    // },\n\n    deleteItem(clickInfo) {\n      console.log(\"Deleted? : \" + clickInfo.event.id);\n      this.deletemodal.show();\n      this.clickedInfo = clickInfo;\n    },\n\n    deleteItemModal(clickedInfo){\n      axios.delete(`http://localhost:8000/api/events/${clickedInfo.event.id}`)\n        .then(response => {\n          this.deletemodal.hide();\n          // this.fetchEvents(); // Refresh events after deleting\n          console.log(\"Succesfully Deleted: \" + response.data + clickedInfo.event.id);\n          this.fetchEvents();\n\n        })\n        .catch(error => {\n          \n          console.error('Error deleting event:', error);\n        });\n\n    },\n    \n    // deleteItem(clickInfo) {\n    //   console.log(\"Deleted? : \" + clickInfo.event.id);\n\n    //   if (confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n    //     axios.delete(`http://localhost:8000/api/events/${clickInfo.event.id}`)\n    //       .then(response => {\n    //         // this.fetchEvents(); // Refresh events after deleting\n    //         console.log(\"Succesfully Deleted: \" + response.data + clickInfo.event.id);\n\n    //         // Fetch events from local storage\n    //         // let events = JSON.parse(localStorage.getItem('events')) || [];\n    //         // console.log('Events before deletion:', events);\n    //         // Filter out the event to be deleted\n    //         // const updatedEvents = events.filter(event => String(event.id) !== String(clickInfo.event.id));\n    //         // console.log('Updated events after deletion:', updatedEvents);\n    //         // Store the updated events back into local storage\n    //         // localStorage.setItem('events', JSON.stringify(updatedEvents));\n    //         this.fetchEvents();\n\n    //       })\n    //       .catch(error => {\n            \n    //         console.error('Error deleting event:', error);\n    //       });\n    //   }\n    // },\n\n    handleEventDrop(info) {\n      const eventId = info.event.id;\n      const allDay = info.event.allDay;\n      const start_formatdate = formatDatetime(info.event.startStr);\n      let end_formatdate = formatDatetime(info.event.endStr);\n\n      // If end date is empty, set it to start date\n       const moment = require('moment');\n      // If end date is empty, set it to start date\n      if (end_formatdate === \"\") {\n        end_formatdate = moment(start_formatdate).add(1, 'hours').format('YYYY-MM-DD HH:mm:ss');\n      }else{\n        end_formatdate = moment(start_formatdate).add(24, 'hours').format('YYYY-MM-DD HH:mm:ss');\n      }\n\n      console.log(\"handleEventDrop : \", eventId, \"start_formatdate: \" + start_formatdate, \"End: \" + end_formatdate, \"AllDay: \", allDay);\n\n      axios.put(`http://localhost:8000/api/events/${eventId}`, {\n        start: start_formatdate,\n        end: end_formatdate,\n        allDay: allDay\n      })\n        .then(response => {\n          console.log('Event updated:', response.data);\n\n          // Retrieve events from local storage\n          // let events = JSON.parse(localStorage.getItem('events')) || [];\n          // console.log('Existing events:', events);\n\n          // Find index of event being updated\n          // const eventIndex = events.findIndex(event => event.id === eventId);\n          // console.log('Event index:', eventIndex);\n\n          // Update event if found\n          // if (eventIndex !== -1) {\n            // events[eventIndex].start = response.data.start;\n            // events[eventIndex].end = response.data.end;\n\n            // Save updated events to local storage\n            // localStorage.setItem('events', JSON.stringify(events));\n            // console.log('Updated events:', events);\n          // } else {\n            // If event is not found, it might be a new event, handle accordingly\n            // console.log('Event not found in local storage. Adding new event...');\n            // events.push(response.data);\n            // localStorage.setItem('events', JSON.stringify(events));\n            // console.log('Updated events:', events);\n          // }\n        })\n        .catch(error => {\n          console.error('Error updating event:', error.response.data);\n        });\n    },\n\n    // Function to handle resize event\n    handleEventResize(info) {\n      const eventId = info.event.id;\n      const start = formatDatetime(info.event.startStr);\n      const end = formatDatetime(info.event.endStr);\n\n      console.log(\"handleEventResize : \", eventId, \"start \", start, \"  end \", end);\n\n      axios.put(`http://localhost:8000/api/events/${eventId}`, {\n        start: start,\n        end: end,\n        allDay: false\n      })\n        .then(response => {\n          console.log('Event updated Resize:', response.data);\n        })\n        .catch(error => {\n          console.error('Error updating event:', error.response.data);\n        });\n    },\n\n    handleEvents(events) {\n      this.allevents = events;\n    }\n  },\n\n\n}\n</script>\n\n\n<template>\n  <div class='demo-app'>\n    <div class='demo-app-sidebar' style=\"display: flex; flex-direction: column; justify-content: space-between;\">\n  <div>\n    \n    \n    \n    <div style=\"margin: 50px 5px 10px 5px ;\">\n      \n    </div>\n  </div>\n\n  <!-- Admin Logout -->\n  <div class=\"text-center\" style=\"margin: 10px 5px 10px 5px;\">\n    <button @click=\"logout\" class=\"btn btn-danger\">Admin Logout</button>\n  </div>\n</div>\n\n\n    <div class='demo-app-main'>\n\n      <FullCalendar class='demo-app-calendar' :options='calendarOptions'>\n        <template v-slot:eventContent='arg'>\n          <b>{{ arg.start }}</b>\n          <i>{{ arg.event.title }}</i>\n        </template>\n      </FullCalendar>\n    </div>\n\n     <!-- Modal -->\n     <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog modal-dialog-centered\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\" id=\"exampleModalLabel\">Create Schedule</h5>\n              <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n              <!-- Modal Body Content -->\n              <div class=\"modal-body\">\n                <!-- <div class=\"mb-3\">\n                  <input type=\"text\" class=\"form-control\" id=\"newEventTitle\" v-model=\"newEventTitle\" placeholder=\"Event Title\">\n                </div> -->\n                <div class=\"mb-3\">\n                  <input type=\"text\" class=\"form-control\" id=\"nameInput\" v-model=\"nameInput\" placeholder=\"Name\">\n                </div>\n                <!-- <div class=\"mb-3\">\n                  <input type=\"text\" class=\"form-control\" id=\"lastnameInput\" v-model=\"lastnameInput\" placeholder=\"Lastname\">\n                </div>\n                <div class=\"mb-3\">\n                  <input type=\"email\" class=\"form-control\" id=\"emailInput\" v-model=\"emailInput\" placeholder=\"Email\">\n                </div> -->\n                <!-- Rest of your modal content -->\n              </div>\n\n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n              <button type=\"button\" class=\"btn btn-primary\" @click=\"saveChanges(selectedInfo)\">Save changes</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n            <!-- Delete -->\n            <div class=\"modal fade\" id=\"deleteModal\" tabindex=\"-1\" aria-labelledby=\"deleteModal\" aria-hidden=\"true\">\n        <div class=\"modal-dialog modal-dialog-centered\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\">Delete</h5>\n              <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n              <p>Are you sure you want to delete?</p>\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n              <button type=\"button\" class=\"btn btn-danger\" @click=\"deleteItemModal(clickedInfo)\">Delete</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n  </div>\n</template>\n\n\n\n<style lang='css'>\n\n\nhtml, body {\n    height: 100vh;\n    margin: 0;\n    padding: 0;\n    \n   /* overflow: hidden; Disable scrolling of the entire page */\n}\n@media (max-width: 650px) {\n    ul {\n      margin: 0;\n      /* padding: 0 0 0 1.5em; */\n      font-size: 10px;\n    }\n\n    li {\n      /* margin: 1.5em 0; */\n      padding: 0;\n      font-size: 10px;\n    }\n  }\n\n\n  h2 {\n    margin: 0;\n    font-size: 16px;\n  }\n\n  ul {\n    margin: 0;\n    /* padding: 0 0 0 1.5em; */\n  }\n\n  li {\n    /* margin: 1.5em 0; */\n    padding: 0;\n  }\n\n  b {\n    /* used for event dates/times */\n    margin-right: 3px;\n    color: black;\n  }\n\n  i {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n\n  .demo-app {\n    display: flex;\n    font-family: Arial, Helvetica Neue, Helvetica, sans-serif;\n    font-size: 14px;\n    max-height: 100vh; /* Set sidebar height to match viewport height */\n  }\n\n  .demo-app-sidebar {\n    padding: 10px;\n    width: 300px;\n    line-height: 1.5;\n    /* background: #eaf9ff; */\n    background-color: #e6e7e9;\n    border-right: 1px solid #d3e2e8;\n    /* overflow-y: auto; */\n    max-height: 100vh; /* Set sidebar height to match viewport height */\n  }\n\n  .demo-app-main {\n    flex-grow: 1;\n    padding: 3em;\n  }\n\n    /* Adjust the height of FullCalendar to fit within the main content area */\n  .demo-app-calendar {\n      height: calc(100vh - 6em); /* Adjust as needed, considering header/footer heights */\n  }\n\n  .fc {\n    /* the calendar root */\n    /* max-width: 1100px; */\n    margin: 0 auto;\n    max-height: 100vh; /* Set sidebar height to match viewport height */\n  }\n  .fc-col-header-cell-cushion{\n    text-decoration: none;\n    color: black;\n  }\n  .fc-scrollgrid .fc-daygrid-day-number{\n    text-decoration: none;\n    color: black;\n\n  }\n  .fc-event{\n    color: white;\n  }\n\n  .fc-list-event-title{\n    color: black;\n  }\n\n  .fc-list-event-time{\n    color: black;\n  }\n\n  </style>\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}