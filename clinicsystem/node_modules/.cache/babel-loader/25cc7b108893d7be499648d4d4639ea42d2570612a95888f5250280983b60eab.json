{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.selectBlock = void 0;\nconst resolveScript_1 = require(\"./resolveScript\");\nfunction selectBlock(descriptor, scopeId, options, loaderContext, query, appendExtension) {\n  // template\n  if (query.type === `template`) {\n    // if we are receiving a query with type it can only come from a *.vue file\n    // that contains that block, so the block is guaranteed to exist.\n    const template = descriptor.template;\n    if (appendExtension) {\n      loaderContext.resourcePath += '.' + (template.lang || 'html');\n    }\n    loaderContext.callback(null, template.content, template.map);\n    return;\n  }\n  // script\n  if (query.type === `script`) {\n    const script = (0, resolveScript_1.resolveScript)(descriptor, scopeId, options, loaderContext);\n    if (appendExtension) {\n      loaderContext.resourcePath += '.' + (script.lang || 'js');\n    }\n    loaderContext.callback(null, script.content, script.map);\n    return;\n  }\n  // styles\n  if (query.type === `style` && query.index != null) {\n    const style = descriptor.styles[Number(query.index)];\n    if (appendExtension) {\n      loaderContext.resourcePath += '.' + (style.lang || 'css');\n    }\n    loaderContext.callback(null, style.content, style.map);\n    return;\n  }\n  // custom\n  if (query.type === 'custom' && query.index != null) {\n    const block = descriptor.customBlocks[Number(query.index)];\n    loaderContext.callback(null, block.content, block.map);\n  }\n}\nexports.selectBlock = selectBlock;","map":{"version":3,"names":["Object","defineProperty","exports","value","selectBlock","resolveScript_1","require","descriptor","scopeId","options","loaderContext","query","appendExtension","type","template","resourcePath","lang","callback","content","map","script","resolveScript","index","style","styles","Number","block","customBlocks"],"sources":["C:/Users/Asus/Desktop/Clinic/Working System/clinicsystem/node_modules/vue-loader/dist/select.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.selectBlock = void 0;\nconst resolveScript_1 = require(\"./resolveScript\");\nfunction selectBlock(descriptor, scopeId, options, loaderContext, query, appendExtension) {\n    // template\n    if (query.type === `template`) {\n        // if we are receiving a query with type it can only come from a *.vue file\n        // that contains that block, so the block is guaranteed to exist.\n        const template = descriptor.template;\n        if (appendExtension) {\n            loaderContext.resourcePath += '.' + (template.lang || 'html');\n        }\n        loaderContext.callback(null, template.content, template.map);\n        return;\n    }\n    // script\n    if (query.type === `script`) {\n        const script = (0, resolveScript_1.resolveScript)(descriptor, scopeId, options, loaderContext);\n        if (appendExtension) {\n            loaderContext.resourcePath += '.' + (script.lang || 'js');\n        }\n        loaderContext.callback(null, script.content, script.map);\n        return;\n    }\n    // styles\n    if (query.type === `style` && query.index != null) {\n        const style = descriptor.styles[Number(query.index)];\n        if (appendExtension) {\n            loaderContext.resourcePath += '.' + (style.lang || 'css');\n        }\n        loaderContext.callback(null, style.content, style.map);\n        return;\n    }\n    // custom\n    if (query.type === 'custom' && query.index != null) {\n        const block = descriptor.customBlocks[Number(query.index)];\n        loaderContext.callback(null, block.content, block.map);\n    }\n}\nexports.selectBlock = selectBlock;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,WAAW,GAAG,KAAK,CAAC;AAC5B,MAAMC,eAAe,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAClD,SAASF,WAAWA,CAACG,UAAU,EAAEC,OAAO,EAAEC,OAAO,EAAEC,aAAa,EAAEC,KAAK,EAAEC,eAAe,EAAE;EACtF;EACA,IAAID,KAAK,CAACE,IAAI,KAAM,UAAS,EAAE;IAC3B;IACA;IACA,MAAMC,QAAQ,GAAGP,UAAU,CAACO,QAAQ;IACpC,IAAIF,eAAe,EAAE;MACjBF,aAAa,CAACK,YAAY,IAAI,GAAG,IAAID,QAAQ,CAACE,IAAI,IAAI,MAAM,CAAC;IACjE;IACAN,aAAa,CAACO,QAAQ,CAAC,IAAI,EAAEH,QAAQ,CAACI,OAAO,EAAEJ,QAAQ,CAACK,GAAG,CAAC;IAC5D;EACJ;EACA;EACA,IAAIR,KAAK,CAACE,IAAI,KAAM,QAAO,EAAE;IACzB,MAAMO,MAAM,GAAG,CAAC,CAAC,EAAEf,eAAe,CAACgB,aAAa,EAAEd,UAAU,EAAEC,OAAO,EAAEC,OAAO,EAAEC,aAAa,CAAC;IAC9F,IAAIE,eAAe,EAAE;MACjBF,aAAa,CAACK,YAAY,IAAI,GAAG,IAAIK,MAAM,CAACJ,IAAI,IAAI,IAAI,CAAC;IAC7D;IACAN,aAAa,CAACO,QAAQ,CAAC,IAAI,EAAEG,MAAM,CAACF,OAAO,EAAEE,MAAM,CAACD,GAAG,CAAC;IACxD;EACJ;EACA;EACA,IAAIR,KAAK,CAACE,IAAI,KAAM,OAAM,IAAIF,KAAK,CAACW,KAAK,IAAI,IAAI,EAAE;IAC/C,MAAMC,KAAK,GAAGhB,UAAU,CAACiB,MAAM,CAACC,MAAM,CAACd,KAAK,CAACW,KAAK,CAAC,CAAC;IACpD,IAAIV,eAAe,EAAE;MACjBF,aAAa,CAACK,YAAY,IAAI,GAAG,IAAIQ,KAAK,CAACP,IAAI,IAAI,KAAK,CAAC;IAC7D;IACAN,aAAa,CAACO,QAAQ,CAAC,IAAI,EAAEM,KAAK,CAACL,OAAO,EAAEK,KAAK,CAACJ,GAAG,CAAC;IACtD;EACJ;EACA;EACA,IAAIR,KAAK,CAACE,IAAI,KAAK,QAAQ,IAAIF,KAAK,CAACW,KAAK,IAAI,IAAI,EAAE;IAChD,MAAMI,KAAK,GAAGnB,UAAU,CAACoB,YAAY,CAACF,MAAM,CAACd,KAAK,CAACW,KAAK,CAAC,CAAC;IAC1DZ,aAAa,CAACO,QAAQ,CAAC,IAAI,EAAES,KAAK,CAACR,OAAO,EAAEQ,KAAK,CAACP,GAAG,CAAC;EAC1D;AACJ;AACAjB,OAAO,CAACE,WAAW,GAAGA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}