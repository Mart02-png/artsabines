{"ast":null,"code":"import DataTable from 'datatables.net-vue3';\nimport DataTablesCore from 'datatables.net-bs5';\nimport axios from 'axios';\nDataTable.use(DataTablesCore);\nconst columns = [{\n  data: 'id'\n}, {\n  data: 'title'\n}, {\n  data: 'email'\n}, {\n  data: 'start'\n}, {\n  data: 'end'\n}, {\n  // New action column definition\n  data: null,\n  render: (data, type, row) => {\n    return `\n        <button class=\"btn btn-success btn-sm\" @click=\"acceptEvent(${row.id})\">Accept</button>\n        <button class=\"btn btn-danger btn-sm\" @click=\"deleteEvent(${row.id})\">Delete</button>\n      `;\n  }\n}];\nimport { ref } from 'vue';\nlet tableData = ref([]);\naxios.get('http://localhost:8000/api/events').then(response => {\n  let eventsFromAPI = response.data.filter(event => event.user === 'clientApproval').map(event => {\n    return {\n      id: event.id,\n      title: event.title,\n      email: event.email,\n      start: event.start,\n      end: event.end\n    };\n  });\n  tableData.value = [...eventsFromAPI];\n  console.log(tableData.value);\n}).catch(error => {\n  console.error('Error fetching data:', error);\n});\nasync function acceptEvent(eventId) {\n  try {\n    const response = await axios.put(`http://localhost:8000/api/events/${eventId}`, {\n      user: 'clientApproved'\n    });\n    console.log('Event accepted:', response.data);\n    // You can update the UI or perform any other actions upon successful acceptance\n  } catch (error) {\n    console.error('Error accepting event:', error);\n    // Handle error\n  }\n}\nasync function deleteEvent(eventId) {\n  try {\n    const response = await axios.delete(`http://localhost:8000/api/events/${eventId}`);\n    console.log('Event deleted:', response.data);\n    // You can update the UI or perform any other actions upon successful deletion\n  } catch (error) {\n    console.error('Error deleting event:', error);\n    // Handle error\n  }\n}","map":{"version":3,"names":["DataTable","DataTablesCore","axios","use","columns","data","render","type","row","id","ref","tableData","get","then","response","eventsFromAPI","filter","event","user","map","title","email","start","end","value","console","log","catch","error","acceptEvent","eventId","put","deleteEvent","delete"],"sources":["C:\\Users\\Asus\\Desktop\\Clinic\\Working System\\clinicsystem\\src\\views\\AboutView.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>Bootstrap 5 styled DataTable</h1>\n    <h2>DataTables + Vue3 example</h2>\n    <p>\n      In this example we show a DataTable in a Vue3 application being styled by\n      Bootstrap 5. DataTables supports a number of other styling libraries as\n      well, such as Bulma, Foundation, Boostrap 3, 4 and others.\n    </p>\n\n    <DataTable\n      :columns=\"columns\"\n      :data=\"tableData\"\n      class=\"table table-hover table-striped\"\n      width=\"100%\"\n    >\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Title</th>\n          <th>Email</th>\n          <th>Start Date</th>\n          <th>End Date</th>\n          <th>Action</th>\n        </tr>\n      </thead>\n    </DataTable>\n  </div>\n</template>\n\n<script>\nimport DataTable from 'datatables.net-vue3';\nimport DataTablesCore from 'datatables.net-bs5';\nimport axios from 'axios';\n\nDataTable.use(DataTablesCore);\n\nconst columns = [\n  { data: 'id' },\n  { data: 'title' },\n  { data: 'email' },\n  { data: 'start' },\n  { data: 'end' },\n\n  {\n    // New action column definition\n    data: null,\n    render: (data, type, row) => {\n      return `\n        <button class=\"btn btn-success btn-sm\" @click=\"acceptEvent(${row.id})\">Accept</button>\n        <button class=\"btn btn-danger btn-sm\" @click=\"deleteEvent(${row.id})\">Delete</button>\n      `;\n    }\n  }\n  \n];\n\nimport { ref } from 'vue';\nlet tableData = ref([]);\n\naxios.get('http://localhost:8000/api/events')\n  .then(response => {\n    let eventsFromAPI = response.data.filter(event => event.user === 'clientApproval').map(event => {\n      return {\n        id: event.id,\n        title: event.title,\n        email: event.email,\n        start: event.start,\n        end: event.end,\n      };\n    });\n    tableData.value = [...eventsFromAPI];\n    console.log(tableData.value);\n  })\n  .catch(error => {\n    console.error('Error fetching data:', error);\n  });\n\n  async function acceptEvent(eventId) {\n  try {\n    const response = await axios.put(`http://localhost:8000/api/events/${eventId}`, {\n      user: 'clientApproved'\n    });\n    console.log('Event accepted:', response.data);\n    // You can update the UI or perform any other actions upon successful acceptance\n  } catch (error) {\n    console.error('Error accepting event:', error);\n    // Handle error\n  }\n}\n\n  async function deleteEvent(eventId) {\n  try {\n    const response = await axios.delete(`http://localhost:8000/api/events/${eventId}`);\n    console.log('Event deleted:', response.data);\n    // You can update the UI or perform any other actions upon successful deletion\n  } catch (error) {\n    console.error('Error deleting event:', error);\n    // Handle error\n  }\n}\n\n</script>\n\n<style>\n@import 'bootstrap';\n@import 'datatables.net-bs5';\n</style>\n"],"mappings":"AA+BA,OAAOA,SAAQ,MAAO,qBAAqB;AAC3C,OAAOC,cAAa,MAAO,oBAAoB;AAC/C,OAAOC,KAAI,MAAO,OAAO;AAEzBF,SAAS,CAACG,GAAG,CAACF,cAAc,CAAC;AAE7B,MAAMG,OAAM,GAAI,CACd;EAAEC,IAAI,EAAE;AAAK,CAAC,EACd;EAAEA,IAAI,EAAE;AAAQ,CAAC,EACjB;EAAEA,IAAI,EAAE;AAAQ,CAAC,EACjB;EAAEA,IAAI,EAAE;AAAQ,CAAC,EACjB;EAAEA,IAAI,EAAE;AAAM,CAAC,EAEf;EACE;EACAA,IAAI,EAAE,IAAI;EACVC,MAAM,EAAEA,CAACD,IAAI,EAAEE,IAAI,EAAEC,GAAG,KAAK;IAC3B,OAAO;qEACwDA,GAAG,CAACC,EAAG;oEACRD,GAAG,CAACC,EAAG;OACpE;EACH;AACF,EAED;AAED,SAASC,GAAE,QAAS,KAAK;AACzB,IAAIC,SAAQ,GAAID,GAAG,CAAC,EAAE,CAAC;AAEvBR,KAAK,CAACU,GAAG,CAAC,kCAAkC,EACzCC,IAAI,CAACC,QAAO,IAAK;EAChB,IAAIC,aAAY,GAAID,QAAQ,CAACT,IAAI,CAACW,MAAM,CAACC,KAAI,IAAKA,KAAK,CAACC,IAAG,KAAM,gBAAgB,CAAC,CAACC,GAAG,CAACF,KAAI,IAAK;IAC9F,OAAO;MACLR,EAAE,EAAEQ,KAAK,CAACR,EAAE;MACZW,KAAK,EAAEH,KAAK,CAACG,KAAK;MAClBC,KAAK,EAAEJ,KAAK,CAACI,KAAK;MAClBC,KAAK,EAAEL,KAAK,CAACK,KAAK;MAClBC,GAAG,EAAEN,KAAK,CAACM;IACb,CAAC;EACH,CAAC,CAAC;EACFZ,SAAS,CAACa,KAAI,GAAI,CAAC,GAAGT,aAAa,CAAC;EACpCU,OAAO,CAACC,GAAG,CAACf,SAAS,CAACa,KAAK,CAAC;AAC9B,CAAC,EACAG,KAAK,CAACC,KAAI,IAAK;EACdH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;AAC9C,CAAC,CAAC;AAEF,eAAeC,WAAWA,CAACC,OAAO,EAAE;EACpC,IAAI;IACF,MAAMhB,QAAO,GAAI,MAAMZ,KAAK,CAAC6B,GAAG,CAAE,oCAAmCD,OAAQ,EAAC,EAAE;MAC9EZ,IAAI,EAAE;IACR,CAAC,CAAC;IACFO,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEZ,QAAQ,CAACT,IAAI,CAAC;IAC7C;EACF,EAAE,OAAOuB,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C;EACF;AACF;AAEE,eAAeI,WAAWA,CAACF,OAAO,EAAE;EACpC,IAAI;IACF,MAAMhB,QAAO,GAAI,MAAMZ,KAAK,CAAC+B,MAAM,CAAE,oCAAmCH,OAAQ,EAAC,CAAC;IAClFL,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEZ,QAAQ,CAACT,IAAI,CAAC;IAC5C;EACF,EAAE,OAAOuB,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}