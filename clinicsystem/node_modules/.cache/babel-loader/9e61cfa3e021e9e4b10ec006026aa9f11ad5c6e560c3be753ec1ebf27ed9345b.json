{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      firstName: '',\n      lastName: '',\n      email: '',\n      currentSection: 'basic',\n      date_picked: '',\n      time: '',\n      purpose: '',\n      basicInfoError: false,\n      appointmentError: false\n    };\n  },\n  methods: {\n    nextSection() {\n      if (this.currentSection === 'basic') {\n        if (!this.firstName || !this.lastName || !this.email) {\n          this.basicInfoError = true;\n          return;\n        } else {\n          this.basicInfoError = false;\n        }\n      }\n      this.currentSection = 'makeAppointment';\n    },\n    async makeAppointment() {\n      try {\n        // Check if all appointment fields are filled\n        if (!this.date_picked || !this.time || !this.purpose) {\n          this.appointmentError = true;\n          return;\n        } else {\n          this.appointmentError = false;\n        }\n\n        // Send appointment data to the server\n        const response = await axios.post('http://127.0.0.1:8000/api/appointments', {\n          firstname: this.firstName,\n          lastname: this.lastName,\n          email: this.email,\n          date_picked: this.date_picked,\n          time: this.time,\n          purpose: this.purpose\n        });\n\n        // Check if the appointment was successfully created\n        if (response && response.data && response.data.message === 'Appointment created successfully.') {\n          console.log('Appointment created:', response.data);\n\n          // Clear input fields after successful appointment\n          this.firstName = '';\n          this.lastName = '';\n          this.email = '';\n          this.date_picked = '';\n          this.time = '';\n          this.purpose = '';\n\n          // Inform the user about successful appointment\n          alert('Your appointment was successful!');\n        } else {\n          console.error('Error creating appointment:', response.data);\n          // Display error message to the user if the server returns an error\n          alert('There was an error creating your appointment. Please try again later.');\n        }\n      } catch (error) {\n        console.error('Error creating appointment:', error.response.data);\n        // Display error message to the user if there's an exception\n        alert('There was an error creating your appointment. Please try again later.');\n      }\n    },\n    goBack() {\n      this.currentSection = 'basic';\n    },\n    goToBasicSection() {\n      this.currentSection = 'basic';\n    },\n    goToMakeAppointmentSection() {\n      this.currentSection = 'makeAppointment';\n    }\n  }\n};","map":{"version":3,"names":["axios","data","firstName","lastName","email","currentSection","date_picked","time","purpose","basicInfoError","appointmentError","methods","nextSection","makeAppointment","response","post","firstname","lastname","message","console","log","alert","error","goBack","goToBasicSection","goToMakeAppointmentSection"],"sources":["C:\\Users\\Asus\\Desktop\\Clinic\\Working System\\clinicsystem\\src\\views\\AboutView.vue"],"sourcesContent":["<template>\n  <div class=\"appointment-form\">\n      <!-- Navbar -->\n      <nav class=\"navbar navbar-expand-lg navbar-light bg-light mb-5\">\n          <div class=\"container\">\n              <a class=\"navbar-brand\" href=\"#\">Clinic</a>\n              <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n                  aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                  <span class=\"navbar-toggler-icon\"></span>\n              </button>\n\n              <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                  <ul class=\"navbar-nav ml-auto\">\n                      <li class=\"nav-item active\">\n                          <a class=\"nav-link\" href=\"#\">Home</a>\n                      </li>\n                      <li class=\"nav-item\">\n                          <a class=\"nav-link\" href=\"#\">About Us</a>\n                      </li>\n                  </ul>\n              </div>\n          </div>\n      </nav>\n\n      <!-- Main Content -->\n      <div class=\"container\">\n          <!-- Navigation Buttons -->\n          <div class=\"navigation-buttons\">\n              <button @click=\"goToBasicSection\" :class=\"{ 'nav-btn': true, disabled: currentSection === 'basic' }\">Basic Information</button>\n              <button @click=\"goToMakeAppointmentSection\" :class=\"{ 'nav-btn': true, disabled: currentSection === 'makeAppointment' }\">Make Appointment</button>\n          </div>\n\n          <!-- Basic Information Section -->\n          <div v-if=\"currentSection === 'basic'\">\n              <h2>Basic Information</h2>\n              <!-- Form for Basic Information -->\n              <div class=\"form-group\">\n                  <label for=\"firstName\">First Name:</label>\n                  <input type=\"text\" id=\"firstName\" v-model=\"firstName\" class=\"form-control\">\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"lastName\">Last Name:</label>\n                  <input type=\"text\" id=\"lastName\" v-model=\"lastName\" class=\"form-control\">\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"email\">Email:</label>\n                  <input type=\"email\" id=\"email\" v-model=\"email\" class=\"form-control\">\n              </div>\n              <button @click=\"nextSection\" class=\"primary-btn\">Next</button>\n              <p v-if=\"basicInfoError\" class=\"error-msg\">Please fill out all fields</p>\n          </div>\n\n          <!-- Make Appointment Section -->\n          <div v-else>\n              <h2>Make Appointment</h2>\n              <!-- Appointment Form -->\n              <div class=\"form-group\">\n                  <label for=\"date_picked\">Appointment Date:</label>\n                  <input type=\"date\" id=\"date_picked\" v-model=\"date_picked\" class=\"form-control\">\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"time\">Appointment Time:</label>\n                  <input type=\"time\" id=\"time\" v-model=\"time\" class=\"form-control\">\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"purpose\">Purpose of Appointment:</label>\n                  <textarea id=\"purpose\" v-model=\"purpose\" class=\"form-control\" rows=\"3\"></textarea>\n              </div>\n              <div class=\"button-group\">\n                  <button @click=\"goBack\" class=\"secondary-btn\">Go Back</button>\n                  <div class=\"button-space\"></div> <!-- Space between buttons -->\n                  <button @click=\"makeAppointment\" class=\"primary-btn\">Confirm Appointment</button>\n              </div>\n              <p v-if=\"appointmentError\" class=\"error-msg\">Please fill out all fields</p>\n          </div>\n      </div>\n\n      <!-- Footer -->\n      <footer class=\"footer mt-auto py-3 text-center\">\n          <div class=\"container\">\n              <span class=\"text-muted\">Follow Us:</span>\n              <!-- Social Media Icons -->\n              <ul class=\"list-inline\">\n                  <li class=\"list-inline-item\"><a href=\"#\"><i class=\"fab fa-facebook\"></i></a></li>\n                  <li class=\"list-inline-item\"><a href=\"#\"><i class=\"fab fa-twitter\"></i></a></li>\n                  <li class=\"list-inline-item\"><a href=\"#\"><i class=\"fab fa-instagram\"></i></a></li>\n              </ul>\n              <p class=\"text-muted\">All Rights Reserved &copy; Clinic</p>\n          </div>\n      </footer>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n      return {\n          firstName: '',\n          lastName: '',\n          email: '',\n          currentSection: 'basic',\n          date_picked: '',\n          time: '',\n          purpose: '',\n          basicInfoError: false,\n          appointmentError: false\n      };\n  },\n  methods: {\n      nextSection() {\n          if (this.currentSection === 'basic') {\n              if (!this.firstName || !this.lastName || !this.email) {\n                  this.basicInfoError = true;\n                  return;\n              } else {\n                  this.basicInfoError = false;\n              }\n          }\n          this.currentSection = 'makeAppointment';\n      },\n      async makeAppointment() {\n          try {\n              // Check if all appointment fields are filled\n              if (!this.date_picked || !this.time || !this.purpose) {\n                  this.appointmentError = true;\n                  return;\n              } else {\n                  this.appointmentError = false;\n              }\n\n              // Send appointment data to the server\n              const response = await axios.post('http://127.0.0.1:8000/api/appointments', {\n                  firstname: this.firstName,\n                  lastname: this.lastName,\n                  email: this.email,\n                  date_picked: this.date_picked,\n                  time: this.time,\n                  purpose: this.purpose,\n              });\n\n              // Check if the appointment was successfully created\n              if (response && response.data && response.data.message === 'Appointment created successfully.') {\n                  console.log('Appointment created:', response.data);\n\n                  // Clear input fields after successful appointment\n                  this.firstName = '';\n                  this.lastName = '';\n                  this.email = '';\n                  this.date_picked = '';\n                  this.time = '';\n                  this.purpose = '';\n\n                  // Inform the user about successful appointment\n                  alert('Your appointment was successful!');\n              } else {\n                  console.error('Error creating appointment:', response.data);\n                  // Display error message to the user if the server returns an error\n                  alert('There was an error creating your appointment. Please try again later.');\n              }\n\n          } catch (error) {\n              console.error('Error creating appointment:', error.response.data);\n              // Display error message to the user if there's an exception\n              alert('There was an error creating your appointment. Please try again later.');\n          }\n      },\n\n      goBack() {\n          this.currentSection = 'basic';\n      },\n      goToBasicSection() {\n          this.currentSection = 'basic';\n      },\n      goToMakeAppointmentSection() {\n          this.currentSection = 'makeAppointment';\n      }\n  }\n};\n</script>\n\n<style>\n/* Existing styles... */\n\n.appointment-form {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.footer {\n  background-color: #f8f9fa;\n  text-align: center;\n}\n\n.navbar-brand {\n  font-weight: bold;\n}\n\n.navbar-nav .nav-link {\n  font-weight: bold;\n}\n\n.navbar-nav .nav-link:hover {\n  color: #007bff;\n}\n\n.list-inline-item {\n  margin-right: 10px;\n}\n\n.large-calendar {\nwidth: 300px; /* Adjust the width as needed */\nheight: 300px; /* Adjust the height as needed */\n}\n.nav-btn {\n  margin-right: 10px; /* Adjust spacing between navigation buttons */\n}\n.button-group {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n  }\n\n  .button-space {\n      width: 20px; /* Adjust as needed */\n  }\n</style>  "],"mappings":"AA8FA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,cAAc,EAAE,OAAO;MACvBC,WAAW,EAAE,EAAE;MACfC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE,EAAE;MACXC,cAAc,EAAE,KAAK;MACrBC,gBAAgB,EAAE;IACtB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,WAAWA,CAAA,EAAG;MACV,IAAI,IAAI,CAACP,cAAa,KAAM,OAAO,EAAE;QACjC,IAAI,CAAC,IAAI,CAACH,SAAQ,IAAK,CAAC,IAAI,CAACC,QAAO,IAAK,CAAC,IAAI,CAACC,KAAK,EAAE;UAClD,IAAI,CAACK,cAAa,GAAI,IAAI;UAC1B;QACJ,OAAO;UACH,IAAI,CAACA,cAAa,GAAI,KAAK;QAC/B;MACJ;MACA,IAAI,CAACJ,cAAa,GAAI,iBAAiB;IAC3C,CAAC;IACD,MAAMQ,eAAeA,CAAA,EAAG;MACpB,IAAI;QACA;QACA,IAAI,CAAC,IAAI,CAACP,WAAU,IAAK,CAAC,IAAI,CAACC,IAAG,IAAK,CAAC,IAAI,CAACC,OAAO,EAAE;UAClD,IAAI,CAACE,gBAAe,GAAI,IAAI;UAC5B;QACJ,OAAO;UACH,IAAI,CAACA,gBAAe,GAAI,KAAK;QACjC;;QAEA;QACA,MAAMI,QAAO,GAAI,MAAMd,KAAK,CAACe,IAAI,CAAC,wCAAwC,EAAE;UACxEC,SAAS,EAAE,IAAI,CAACd,SAAS;UACzBe,QAAQ,EAAE,IAAI,CAACd,QAAQ;UACvBC,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBE,WAAW,EAAE,IAAI,CAACA,WAAW;UAC7BC,IAAI,EAAE,IAAI,CAACA,IAAI;UACfC,OAAO,EAAE,IAAI,CAACA;QAClB,CAAC,CAAC;;QAEF;QACA,IAAIM,QAAO,IAAKA,QAAQ,CAACb,IAAG,IAAKa,QAAQ,CAACb,IAAI,CAACiB,OAAM,KAAM,mCAAmC,EAAE;UAC5FC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEN,QAAQ,CAACb,IAAI,CAAC;;UAElD;UACA,IAAI,CAACC,SAAQ,GAAI,EAAE;UACnB,IAAI,CAACC,QAAO,GAAI,EAAE;UAClB,IAAI,CAACC,KAAI,GAAI,EAAE;UACf,IAAI,CAACE,WAAU,GAAI,EAAE;UACrB,IAAI,CAACC,IAAG,GAAI,EAAE;UACd,IAAI,CAACC,OAAM,GAAI,EAAE;;UAEjB;UACAa,KAAK,CAAC,kCAAkC,CAAC;QAC7C,OAAO;UACHF,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAER,QAAQ,CAACb,IAAI,CAAC;UAC3D;UACAoB,KAAK,CAAC,uEAAuE,CAAC;QAClF;MAEJ,EAAE,OAAOC,KAAK,EAAE;QACZH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAACR,QAAQ,CAACb,IAAI,CAAC;QACjE;QACAoB,KAAK,CAAC,uEAAuE,CAAC;MAClF;IACJ,CAAC;IAEDE,MAAMA,CAAA,EAAG;MACL,IAAI,CAAClB,cAAa,GAAI,OAAO;IACjC,CAAC;IACDmB,gBAAgBA,CAAA,EAAG;MACf,IAAI,CAACnB,cAAa,GAAI,OAAO;IACjC,CAAC;IACDoB,0BAA0BA,CAAA,EAAG;MACzB,IAAI,CAACpB,cAAa,GAAI,iBAAiB;IAC3C;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}