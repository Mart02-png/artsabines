{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '../assets/icon.png';\nconst _hoisted_1 = {\n  class: \"demo-app\"\n};\nconst _hoisted_2 = {\n  class: \"demo-app-sidebar\",\n  style: {\n    \"display\": \"flex\",\n    \"flex-direction\": \"column\",\n    \"justify-content\": \"space-between\"\n  }\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"text-center\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"Ears Nose and Throat\",\n  style: {\n    \"width\": \"160px\",\n    \"height\": \"auto\"\n  },\n  class: \"img-fluid\"\n})]), /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"margin\": \"50px 5px 10px 5px\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"h2\", null, \"Instructions\"), /*#__PURE__*/_createElementVNode(\"ul\", {\n  style: {\n    \"text-align\": \"left\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"li\", null, \"Select dates and you will be prompted to create a new event\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"Drag, drop, and resize events\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"Click an event to delete it\")])])], -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"text-center\",\n  style: {\n    \"margin\": \"10px 5px 10px 5px\"\n  }\n};\nconst _hoisted_5 = {\n  class: \"text-center\",\n  style: {\n    \"margin\": \"10px 5px 10px 5px\"\n  }\n};\nconst _hoisted_6 = {\n  class: \"demo-app-main\"\n};\nconst _hoisted_7 = {\n  class: \"modal fade\",\n  id: \"exampleModal\",\n  tabindex: \"-1\",\n  \"aria-labelledby\": \"exampleModalLabel\",\n  \"aria-hidden\": \"true\"\n};\nconst _hoisted_8 = {\n  class: \"modal-dialog modal-dialog-centered\"\n};\nconst _hoisted_9 = {\n  class: \"modal-content\"\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"modal-header bg-primary text-white\"\n}, [/*#__PURE__*/_createElementVNode(\"h5\", {\n  class: \"modal-title\",\n  id: \"exampleModalLabel\"\n}, \"Create Schedule\"), /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"button\",\n  class: \"btn-close\",\n  \"data-bs-dismiss\": \"modal\",\n  \"aria-label\": \"Close\"\n})], -1 /* HOISTED */);\nconst _hoisted_11 = {\n  class: \"modal-body\"\n};\nconst _hoisted_12 = {\n  class: \"mb-3\"\n};\nconst _hoisted_13 = {\n  class: \"mb-3\"\n};\nconst _hoisted_14 = {\n  class: \"mb-3\"\n};\nconst _hoisted_15 = {\n  class: \"modal-footer\"\n};\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"button\",\n  class: \"btn btn-secondary\",\n  \"data-bs-dismiss\": \"modal\"\n}, \"Close\", -1 /* HOISTED */);\nconst _hoisted_17 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"modal fade\\\" id=\\\"errorModal\\\" tabindex=\\\"-1\\\" aria-labelledby=\\\"errorModal\\\" aria-hidden=\\\"true\\\"><div class=\\\"modal-dialog modal-dialog-centered\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header bg-danger text-white\\\"><h5 class=\\\"modal-title bi-exclamation-triangle-fill\\\"> Error</h5><button type=\\\"button\\\" class=\\\"btn-close btn-close-white\\\" data-bs-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"></button></div><div class=\\\"modal-body\\\"><h4><p><i class=\\\"bi\\\"></i> <span id=\\\"errorMessage\\\"></span></p></h4></div><div class=\\\"modal-footer\\\"><button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-bs-dismiss=\\\"modal\\\">Close</button></div></div></div></div>\", 1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  const _component_FullCalendar = _resolveComponent(\"FullCalendar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createCommentVNode(\" Admin Login \"), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_router_link, {\n    to: {\n      name: 'about'\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"about\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_router_view)]), _createCommentVNode(\" Admin Login \"), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_router_link, {\n    to: {\n      name: 'login'\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Admin Login\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_router_view)])]), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_FullCalendar, {\n    class: \"demo-app-calendar\",\n    options: _ctx.calendarOptions\n  }, {\n    eventContent: _withCtx(arg => [_createElementVNode(\"b\", null, _toDisplayString(arg.start), 1 /* TEXT */), _createElementVNode(\"i\", null, _toDisplayString(arg.event.title), 1 /* TEXT */)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"options\"]), _createCommentVNode(\" Modal \"), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _createCommentVNode(\" Modal Body Content \"), _createElementVNode(\"div\", _hoisted_11, [_createCommentVNode(\" <div class=\\\"mb-3\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"newEventTitle\\\" v-model=\\\"newEventTitle\\\" placeholder=\\\"Event Title\\\">\\n                </div> \"), _createElementVNode(\"div\", _hoisted_12, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"nameInput\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.nameInput = $event),\n    placeholder: \"Name\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.nameInput]])]), _createElementVNode(\"div\", _hoisted_13, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"lastnameInput\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.lastnameInput = $event),\n    placeholder: \"Lastname\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.lastnameInput]])]), _createElementVNode(\"div\", _hoisted_14, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    class: \"form-control\",\n    id: \"emailInput\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.emailInput = $event),\n    placeholder: \"Email\",\n    autocomplete: \"current-emailInput\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.emailInput]])]), _createCommentVNode(\" Rest of your modal content \")]), _createElementVNode(\"div\", _hoisted_15, [_hoisted_16, _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-primary\",\n    onClick: _cache[3] || (_cache[3] = $event => $options.saveChanges(_ctx.selectedInfo))\n  }, \"Save changes\")])])])]), _createCommentVNode(\" Error \"), _hoisted_17])]);\n}","map":{"version":3,"names":["_imports_0","class","style","_createElementVNode","src","alt","id","tabindex","type","_createStaticVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createCommentVNode","_hoisted_4","_createVNode","_component_router_link","to","name","default","_withCtx","_createTextVNode","_","_component_router_view","_hoisted_5","_hoisted_6","_component_FullCalendar","options","_ctx","calendarOptions","eventContent","arg","_toDisplayString","start","event","title","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_cache","$event","nameInput","placeholder","_hoisted_13","lastnameInput","_hoisted_14","emailInput","autocomplete","required","_hoisted_15","_hoisted_16","onClick","$options","saveChanges","selectedInfo","_hoisted_17"],"sources":["C:\\Users\\Asus\\Desktop\\Clinic\\Working System\\clinicsystem\\src\\views\\ClientView.vue"],"sourcesContent":["<!-- ClientView.vue -->\n\n<script>\n// require('@fullcalendar/core/main.min.css')\n\nimport FullCalendar from '@fullcalendar/vue3'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport listPlugin from '@fullcalendar/list'\n\nimport axios from 'axios';\n// import { INITIAL_EVENTS, createEventId } from './event-utils'\nimport bootstrap5Plugin from '@fullcalendar/bootstrap5'\nimport * as bootstrap from 'bootstrap';\n\nfunction formatDatetime(datetimeStr) {\n  return datetimeStr.replace('T', ' ').replace(/\\+.*$/, '');\n}\n\nfunction updateErrorMessage(message) {\n  const errorMessageElement = document.getElementById('errorMessage');\n  errorMessageElement.textContent = message;\n}\n\nexport default {\n  components: {\n    FullCalendar // make the <FullCalendar> tag available\n  },\n\n  data: function () {\n    return {\n      modal: null,\n      errorModal: null,\n      nameInput: '',\n      lastnameInput: '',\n      emailInput: '',\n\n      calendarOptions: {\n        //1 day only\n        selectAllow: function (selectionInfo) {\n          let startDate = selectionInfo.start;\n          let endDate = selectionInfo.end;\n          endDate.setSeconds(endDate.getSeconds() - 1);  // allow full day selection\n          if (startDate.getDate() === endDate.getDate()) {\n            return true;\n          } else {\n            return false;\n          }\n        },\n        plugins: [\n          bootstrap5Plugin,\n          listPlugin,\n          dayGridPlugin,\n          timeGridPlugin,\n          interactionPlugin // needed for dateClick\n        ],\n        headerToolbar: {\n          left: 'prev,next today',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'\n        },\n        themeSystem: 'bootstrap5', // important!\n        initialView: 'dayGridMonth',\n        // initialEvents: INITIAL_EVENTS, // alternatively, use the `events` setting to fetch from a feed\n        editable: true,\n        selectable: true,\n        selectMirror: true,\n        dayMaxEvents: true,\n        weekends: true,\n        select: this.handleDateSelect,\n        eventsSet: this.handleEvents,\n        eventDisplay: 'block'\n        /* you can update a remote database when these fire:\n        eventAdd:\n        eventChange:\n        eventRemove:\n        */\n      },\n      allevents: [],\n    }\n  },\n\n  mounted() {\n    this.fetchEvents();\n    this.modal = new bootstrap.Modal(document.getElementById('exampleModal'), {\n      // Optional: specify options here\n    });\n    this.errorModal = new bootstrap.Modal(document.getElementById('errorModal'), {\n      // Optional: specify options here\n    });\n\n  },\n\n  methods: {\n\n    handleWeekendsToggle() {\n      this.calendarOptions.weekends = !this.calendarOptions.weekends // update a property\n    },\n\n    fetchEvents() {\n      // Fetch events from local storage\n      // let eventsFromLocalStorage = JSON.parse(localStorage.getItem('events')) || [];\n      // Fetch events from the API\n      axios.get('http://localhost:8000/api/events')\n        .then(response => {\n\n            let eventsFromAPI = response.data.filter(event => event.user === 'clientApproval' ).map(event => {\n          \n            let color;\n            switch (event.user) {\n                case 'clientApproval':\n                    color = '#007FFF';\n                    break;\n                case 'clientApproved':\n                    color = '#FF9E00';\n                    break;\n                case 'admin':\n                    color = '#FF2D00';\n                    break;\n                default:\n                    // Handle default case if needed\n                    break;\n            }\n\n            return {\n                id: event.id,\n                title: event.title,\n                start: event.start,\n                end: event.end,\n                allDay: event.allDay,\n                user: event.user,\n                color: color // Assign color based on user type\n            };\n        });\n\n          // Combine events from local storage and API\n          // let allEvents = eventsFromLocalStorage.concat(eventsFromAPI);\n\n          // Update the calendar events with combined events\n          // this.$set(this.calendarOptions, 'events', allEvents);\n          this.calendarOptions.events = eventsFromAPI; // Directly assign events to calendarOptions\n\n        })\n        .catch(error => {\n          console.error('Error fetching events:', error);\n        });\n    },\n\n\n\n    //ADD EVENT\n    handleDateSelect(selectInfo) {\n      const moment = require('moment');\n      // Get the current time in HH:mm:ss format\n      const currentTime = moment().format('HH:mm:ss');\n      let startSelectedDate = selectInfo.startStr + \" \" + currentTime;\n\n      axios.get('http://localhost:8000/api/events')\n        .then(response => {\n          let canAddEvent = true;\n          response.data.forEach(event => {\n            const moment = require('moment');\n            // Combine the current time with selectInfo.startStr\n            let startSelectedDateNoTime = moment(selectInfo.startStr).format('YYYY-MM-DD');\n            let EndSelectedDateNoTime = moment(event.start).format('YYYY-MM-DD');\n            // console.log(event.user, event.allDay, \"startSelected\", startSelectedDateNoTime,  \"EndSelected\", EndSelectedDateNoTime);\n            // console.log(event.user, \"\\n startSelectedDate\", startSelectedDate, \"\\n event.start\", event.start, \"\\n startSelectedDate\", startSelectedDate, \"\\n event.end\", event.end);\n\n            // Check if the admin has added an event that overlaps with the selected time range\n            if (event.user === 'admin' && event.allDay === 1 && startSelectedDateNoTime === EndSelectedDateNoTime || event.user === 'admin' && startSelectedDate >= event.start && startSelectedDate <= event.end) {\n              canAddEvent = false;\n              // console.log(\"The schedule is busy day of admin. Please select another date\");\n              // this.errorModal.show();\n              updateErrorMessage(\"The schedule is busy on this day. Please select another date\");\n              this.errorModal.show(); \n            }\n          });\n\n          if (canAddEvent) {\n            this.modal.show();\n            this.selectedInfo = selectInfo;\n            // console.log(\"YOU CAN NOW ADD\");\n          }\n        })\n        .catch(error => {\n          console.error('Error fetching events:', error);\n        });\n    },\n\n\n\n    saveChanges(selectedInfo) {\n      this.newEventTitle = this.nameInput + ' ' + this.lastnameInput;\n      if (this.newEventTitle.trim() !== '') {\n\n        let calendarApi = selectedInfo.view.calendar;\n        calendarApi.unselect() // clear date selection\n\n        // Format start and end dates\n        let start = formatDatetime(selectedInfo.startStr);\n        let end = formatDatetime(selectedInfo.endStr);\n\n        axios.post('http://localhost:8000/api/events', {\n          title: this.newEventTitle,\n          email: this.emailInput,\n          start: start,\n          end: end,\n          user: 'clientApproval',\n          allDay: selectedInfo.allDay\n        })\n          .then(response => {\n            this.modal.hide();\n            this.allevents.push(response.data);\n            let newEvent = {\n              id: response.data.id,\n              title: response.data.title,\n              email: response.data.email,\n              user: response.data.user,\n              start: response.data.start,\n              end: response.data.end,\n              allDay: response.data.allDay,\n\n            };\n\n            this.allevents.push(newEvent);\n            // Get existing events from local storage or initialize an empty array\n            let events = JSON.parse(localStorage.getItem('events')) || [];\n            events.push(newEvent); // Append the new event to existing events\n            localStorage.setItem('events', JSON.stringify(events)); // Set the updated events array to local storage\n\n            calendarApi.addEvent(newEvent);\n            // Fetch events again to update the calendar\n            this.fetchEvents();\n\n            // this.newEventTitle = '';\n            this.nameInput = '';\n            this.lastnameInput = '';\n            this.emailInput = '';\n\n          })\n          .catch(error => {\n            // Handle error\n            console.error('Error adding event:', error.response.data);\n          });\n      } else {\n        // Alert the user if the input field is empty\n        alert('Please enter a title for the event');\n      }\n    },\n\n  }\n\n}\n</script>\n\n\n\n<template>\n  <div class='demo-app'>\n    <div class='demo-app-sidebar' style=\"display: flex; flex-direction: column; justify-content: space-between;\">\n      <div>\n        <div class=\"text-center\">\n          <img src=\"../assets/icon.png\" alt=\"Ears Nose and Throat\" style=\"width: 160px; height: auto; \"\n            class=\"img-fluid\">\n        </div>\n        <div style=\"margin: 50px 5px 10px 5px ;\">\n          <h2>Instructions</h2>\n          <ul style=\"text-align: left;\">\n            <li>Select dates and you will be prompted to create a new event</li>\n            <li>Drag, drop, and resize events</li>\n            <li>Click an event to delete it</li>\n          </ul>\n        </div>\n      </div>\n\n      <!-- Admin Login -->\n      <div class=\"text-center\" style=\"margin: 10px 5px 10px 5px ;\">\n        <router-link :to=\"{ name: 'about' }\">about</router-link>\n        <router-view />\n      </div>\n\n      <!-- Admin Login -->\n      <div class=\"text-center\" style=\"margin: 10px 5px 10px 5px ;\">\n        <router-link :to=\"{ name: 'login' }\">Admin Login</router-link>\n        <router-view />\n      </div>\n    </div>\n\n\n    <div class='demo-app-main'>\n      <FullCalendar class='demo-app-calendar' :options='calendarOptions'>\n        <template v-slot:eventContent='arg'>\n          <b>{{ arg.start }}</b>\n          <i>{{ arg.event.title }}</i>\n        </template>\n      </FullCalendar>\n\n      <!-- Modal -->\n      <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog modal-dialog-centered\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header bg-primary text-white\">\n              <h5 class=\"modal-title\" id=\"exampleModalLabel\">Create Schedule</h5>\n              <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <!-- Modal Body Content -->\n            <div class=\"modal-body\">\n              <!-- <div class=\"mb-3\">\n                  <input type=\"text\" class=\"form-control\" id=\"newEventTitle\" v-model=\"newEventTitle\" placeholder=\"Event Title\">\n                </div> -->\n              <div class=\"mb-3\">\n                <input type=\"text\" class=\"form-control\" id=\"nameInput\" v-model=\"nameInput\" placeholder=\"Name\">\n              </div>\n              <div class=\"mb-3\">\n                <input type=\"text\" class=\"form-control\" id=\"lastnameInput\" v-model=\"lastnameInput\"\n                  placeholder=\"Lastname\">\n              </div>\n              <div class=\"mb-3\">\n                \n                <input type=\"email\" class=\"form-control\" id=\"emailInput\" v-model=\"emailInput\" placeholder=\"Email\" autocomplete=\"current-emailInput\" required>\n              </div>\n              <!-- Rest of your modal content -->\n            </div>\n\n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n              <button type=\"button\" class=\"btn btn-primary\" @click=\"saveChanges(selectedInfo)\">Save changes</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n            <!-- Error -->\n        <div class=\"modal fade\" id=\"errorModal\" tabindex=\"-1\" aria-labelledby=\"errorModal\" aria-hidden=\"true\">\n          <div class=\"modal-dialog modal-dialog-centered\">\n            <div class=\"modal-content\">\n              <div class=\"modal-header bg-danger text-white\">\n                <h5 class=\"modal-title bi-exclamation-triangle-fill\"> Error</h5>\n                <button type=\"button\" class=\"btn-close btn-close-white\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n              </div>\n              <div class=\"modal-body\">\n              <h4><p><i class=\"bi\"></i> <span id=\"errorMessage\"></span></p></h4>\n              </div>\n              <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-danger\" data-bs-dismiss=\"modal\">Close</button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n    </div>\n  </div>\n</template>\n\n\n\n<style lang='css'>\nhtml,\nbody {\n  height: 100vh;\n  margin: 0;\n  padding: 0;\n\n  /* overflow: hidden; Disable scrolling of the entire page */\n}\n\n@media (max-width: 650px) {\n  ul {\n    margin: 0;\n    /* padding: 0 0 0 1.5em; */\n    font-size: 10px;\n  }\n\n  li {\n    /* margin: 1.5em 0; */\n    padding: 0;\n    font-size: 10px;\n  }\n}\n\n/* .modal-backdrop {\n    display: none;\n    z-index: 1040 !important;\n}\n\n.modal-content {\n    margin: 2px auto;\n    z-index: 1100 !important;\n} */\n\nh2 {\n  margin: 0;\n  font-size: 16px;\n}\n\nul {\n  margin: 0;\n  /* padding: 0 0 0 1.5em; */\n}\n\nli {\n  /* margin: 1.5em 0; */\n  padding: 0;\n}\n\nb {\n  /* used for event dates/times */\n  margin-right: 3px;\n  color: black;\n}\n\ni {\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n\n.demo-app {\n  display: flex;\n  font-family: Arial, Helvetica Neue, Helvetica, sans-serif;\n  font-size: 14px;\n  max-height: 100vh;\n  /* Set sidebar height to match viewport height */\n}\n\n.demo-app-sidebar {\n  padding: 10px;\n  width: 300px;\n  line-height: 1.5;\n  /* background: #eaf9ff; */\n  background-color: #e6e7e9;\n  border-right: 1px solid #d3e2e8;\n  /* overflow-y: auto; */\n  max-height: 100vh;\n  /* Set sidebar height to match viewport height */\n}\n\n.demo-app-main {\n  flex-grow: 1;\n  padding: 3em;\n}\n\n/* Adjust the height of FullCalendar to fit within the main content area */\n.demo-app-calendar {\n  height: calc(100vh - 6em);\n  /* Adjust as needed, considering header/footer heights */\n}\n\n.fc {\n  /* the calendar root */\n  /* max-width: 1100px; */\n  margin: 0 auto;\n  max-height: 100vh;\n  /* Set sidebar height to match viewport height */\n}\n\n.fc-col-header-cell-cushion {\n  text-decoration: none;\n  color: black;\n}\n\n.fc-scrollgrid .fc-daygrid-day-number {\n  text-decoration: none;\n  color: black;\n\n}\n\n.fc-event {\n  color: white;\n}\n\n.fc-list-event-title {\n  color: black;\n}\n\n.fc-list-event-time {\n  color: black;\n}\n\n.modal-backdrop {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n\n/* Make the text bold in the week view of FullCalendar */\n.fc-timegrid-event .fc-content {\n  /* For event titles */\n  font-weight: bold;\n}\n\n.fc-timegrid-axis,\n/* For time labels on the left */\n.fc-day-header,\n/* For day headers */\n.fc-timegrid-slots td,\n/* For time slots */\n.fc-timegrid-slots .fc-timegrid-slot-lane {\n  /* For the content within time slots */\n  font-weight: bold;\n}\n\n\n/* Make the dates bold in FullCalendar */\n.fc-daygrid-day-number {\n  /* For day numbers in month view */\n  font-weight: bold;\n}\n\n.fc-col-header {\n  /* For day headers (e.g., Sun, Mon, Tue) */\n  font-weight: bold;\n  background-color: white;\n  font-size: 20px;\n}\n\n.fc table {\n  font-size: 14px;\n}\n\n\n/* Make the text bold in FullCalendar */\n.fc-daygrid-event,\n/* Event titles */\n.fc-list-item-title\n\n/* List view event titles */\n  {\n  font-weight: bold;\n  overflow: hidden;\n}\n\n.fc-toolbar-title\n\n/* Calendar header title */\n  {\n  font-weight: bold;\n  color: white;\n}\n\n.fc-view-harness {\n  background-color: rgba(230, 231, 233, 0.783);\n  /* Adjust the alpha value (0.5) to make it more or less transparent */\n}\n\n:root {\n  --fc-list-event-hover-bg-color: #ADD8E6;\n  /* Light blue color */\n  --fc-today-bg-color: rgba(77, 76, 75, 0.53);\n}\n\n.fc-day:hover {\n  background-color: #ADD8E6;\n  /* Light blue color on hover */\n  cursor: pointer;\n  /* Change cursor to pointer on hover */\n}\n\n.fc-event-time,\n.fc-event-title {\n  display: inline;\n}\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}