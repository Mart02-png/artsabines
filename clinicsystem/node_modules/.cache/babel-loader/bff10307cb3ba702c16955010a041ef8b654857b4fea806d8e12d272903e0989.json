{"ast":null,"code":"import DataTable from 'datatables.net-vue3';\nimport DataTablesCore from 'datatables.net-bs5';\nimport axios from 'axios';\nimport { ref } from 'vue';\nexport default {\n  __name: 'AboutView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    DataTable.use(DataTablesCore);\n    const columns = [{\n      data: 'id'\n    }, {\n      data: 'title'\n    }, {\n      data: 'email'\n    }, {\n      data: 'start'\n    }, {\n      data: 'end'\n    }, {\n      // New action column definition\n      data: null,\n      render: (data, type, row) => {\n        return `\n        <button class=\"btn btn-success btn-sm\" @click=\"acceptEvent(${row.id})\">Accept</button>\n        <button class=\"btn btn-danger btn-sm\" @click=\"deleteEvent(${row.id})\">Delete</button>\n      `;\n      }\n    }];\n    let tableData = ref([]);\n    methods: {\n      axios.get('http://localhost:8000/api/events').then(response => {\n        let eventsFromAPI = response.data.filter(event => event.user === 'clientApproval').map(event => {\n          return {\n            id: event.id,\n            title: event.title,\n            email: event.email,\n            start: event.start,\n            end: event.end\n          };\n        });\n        tableData.value = [...eventsFromAPI];\n        console.log(tableData.value);\n      }).catch(error => {\n        console.error('Error fetching data:', error);\n      });\n      async function acceptEvent(eventId) {\n        try {\n          const response = await axios.put(`http://localhost:8000/api/events/${eventId}`, {\n            user: 'clientApproved'\n          });\n          console.log('Event accepted:', response.data);\n          // You can update the UI or perform any other actions upon successful acceptance\n        } catch (error) {\n          console.error('Error accepting event:', error);\n          // Handle error\n        }\n      }\n      async function deleteEvent(eventId) {\n        try {\n          const response = await axios.delete(`http://localhost:8000/api/events/${eventId}`);\n          console.log('Event deleted:', response.data);\n          // You can update the UI or perform any other actions upon successful deletion\n        } catch (error) {\n          console.error('Error deleting event:', error);\n          // Handle error\n        }\n      }\n    }\n    const __returned__ = {\n      columns,\n      get tableData() {\n        return tableData;\n      },\n      set tableData(v) {\n        tableData = v;\n      },\n      get DataTable() {\n        return DataTable;\n      },\n      get DataTablesCore() {\n        return DataTablesCore;\n      },\n      get axios() {\n        return axios;\n      },\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["DataTable","DataTablesCore","axios","ref","use","columns","data","render","type","row","id","tableData","methods","get","then","response","eventsFromAPI","filter","event","user","map","title","email","start","end","value","console","log","catch","error","acceptEvent","eventId","put","deleteEvent","delete"],"sources":["C:/Users/Asus/Desktop/Clinic/Working System/clinicsystem/src/views/AboutView.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>Bootstrap 5 styled DataTable</h1>\n    <h2>DataTables + Vue3 example</h2>\n    <p>\n      In this example we show a DataTable in a Vue3 application being styled by\n      Bootstrap 5. DataTables supports a number of other styling libraries as\n      well, such as Bulma, Foundation, Boostrap 3, 4 and others.\n    </p>\n\n    <DataTable\n      :columns=\"columns\"\n      :data=\"tableData\"\n      class=\"table table-hover table-striped\"\n      width=\"100%\"\n    >\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Title</th>\n          <th>Email</th>\n          <th>Start Date</th>\n          <th>End Date</th>\n          <th>Action</th>\n        </tr>\n      </thead>\n    </DataTable>\n  </div>\n</template>\n\n<script setup>\nimport DataTable from 'datatables.net-vue3';\nimport DataTablesCore from 'datatables.net-bs5';\nimport axios from 'axios';\n\nDataTable.use(DataTablesCore);\n\nconst columns = [\n  { data: 'id' },\n  { data: 'title' },\n  { data: 'email' },\n  { data: 'start' },\n  { data: 'end' },\n\n  {\n    // New action column definition\n    data: null,\n    render: (data, type, row) => {\n      return `\n        <button class=\"btn btn-success btn-sm\" @click=\"acceptEvent(${row.id})\">Accept</button>\n        <button class=\"btn btn-danger btn-sm\" @click=\"deleteEvent(${row.id})\">Delete</button>\n      `;\n    }\n  }\n  \n];\n\nimport { ref } from 'vue';\nlet tableData = ref([]);\n\nmethods: {\n\naxios.get('http://localhost:8000/api/events')\n  .then(response => {\n    let eventsFromAPI = response.data.filter(event => event.user === 'clientApproval').map(event => {\n      return {\n        id: event.id,\n        title: event.title,\n        email: event.email,\n        start: event.start,\n        end: event.end,\n      };\n    });\n    tableData.value = [...eventsFromAPI];\n    console.log(tableData.value);\n  })\n  .catch(error => {\n    console.error('Error fetching data:', error);\n  });\n\n  async function acceptEvent(eventId) {\n  try {\n    const response = await axios.put(`http://localhost:8000/api/events/${eventId}`, {\n      user: 'clientApproved'\n    });\n    console.log('Event accepted:', response.data);\n    // You can update the UI or perform any other actions upon successful acceptance\n  } catch (error) {\n    console.error('Error accepting event:', error);\n    // Handle error\n  }\n}\n\n  async function deleteEvent(eventId) {\n  try {\n    const response = await axios.delete(`http://localhost:8000/api/events/${eventId}`);\n    console.log('Event deleted:', response.data);\n    // You can update the UI or perform any other actions upon successful deletion\n  } catch (error) {\n    console.error('Error deleting event:', error);\n    // Handle error\n  }\n}\n}\n\n\n</script>\n\n<style>\n@import 'bootstrap';\n@import 'datatables.net-bs5';\n</style>\n"],"mappings":"AA+BA,OAAOA,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,cAAc,MAAM,oBAAoB;AAC/C,OAAOC,KAAK,MAAM,OAAO;AAwBzB,SAASC,GAAG,QAAQ,KAAK;;;;;;;IAtBzBH,SAAS,CAACI,GAAG,CAACH,cAAc,CAAC;IAE7B,MAAMI,OAAO,GAAG,CACd;MAAEC,IAAI,EAAE;IAAK,CAAC,EACd;MAAEA,IAAI,EAAE;IAAQ,CAAC,EACjB;MAAEA,IAAI,EAAE;IAAQ,CAAC,EACjB;MAAEA,IAAI,EAAE;IAAQ,CAAC,EACjB;MAAEA,IAAI,EAAE;IAAM,CAAC,EAEf;MACE;MACAA,IAAI,EAAE,IAAI;MACVC,MAAM,EAAEA,CAACD,IAAI,EAAEE,IAAI,EAAEC,GAAG,KAAK;QAC3B,OAAQ;AACd,qEAAqEA,GAAG,CAACC,EAAG;AAC5E,oEAAoED,GAAG,CAACC,EAAG;AAC3E,OAAO;MACH;IACF,CAAC,CAEF;IAGD,IAAIC,SAAS,GAAGR,GAAG,CAAC,EAAE,CAAC;IAEvBS,OAAO,EAAE;MAETV,KAAK,CAACW,GAAG,CAAC,kCAAkC,CAAC,CAC1CC,IAAI,CAACC,QAAQ,IAAI;QAChB,IAAIC,aAAa,GAAGD,QAAQ,CAACT,IAAI,CAACW,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,KAAK,gBAAgB,CAAC,CAACC,GAAG,CAACF,KAAK,IAAI;UAC9F,OAAO;YACLR,EAAE,EAAEQ,KAAK,CAACR,EAAE;YACZW,KAAK,EAAEH,KAAK,CAACG,KAAK;YAClBC,KAAK,EAAEJ,KAAK,CAACI,KAAK;YAClBC,KAAK,EAAEL,KAAK,CAACK,KAAK;YAClBC,GAAG,EAAEN,KAAK,CAACM;UACb,CAAC;QACH,CAAC,CAAC;QACFb,SAAS,CAACc,KAAK,GAAG,CAAC,GAAGT,aAAa,CAAC;QACpCU,OAAO,CAACC,GAAG,CAAChB,SAAS,CAACc,KAAK,CAAC;MAC9B,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;QACdH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,CAAC;MAEF,eAAeC,WAAWA,CAACC,OAAO,EAAE;QACpC,IAAI;UACF,MAAMhB,QAAQ,GAAG,MAAMb,KAAK,CAAC8B,GAAG,CAAE,oCAAmCD,OAAQ,EAAC,EAAE;YAC9EZ,IAAI,EAAE;UACR,CAAC,CAAC;UACFO,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEZ,QAAQ,CAACT,IAAI,CAAC;UAC7C;QACF,CAAC,CAAC,OAAOuB,KAAK,EAAE;UACdH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;UAC9C;QACF;MACF;MAEE,eAAeI,WAAWA,CAACF,OAAO,EAAE;QACpC,IAAI;UACF,MAAMhB,QAAQ,GAAG,MAAMb,KAAK,CAACgC,MAAM,CAAE,oCAAmCH,OAAQ,EAAC,CAAC;UAClFL,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEZ,QAAQ,CAACT,IAAI,CAAC;UAC5C;QACF,CAAC,CAAC,OAAOuB,KAAK,EAAE;UACdH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;UAC7C;QACF;MACF;IACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}