{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDescriptor = exports.setDescriptor = exports.descriptorCache = void 0;\nconst fs = __importStar(require(\"fs\"));\nconst compiler_1 = require(\"./compiler\");\nconst {\n  parse\n} = compiler_1.compiler;\nexports.descriptorCache = new Map();\nfunction setDescriptor(filename, entry) {\n  exports.descriptorCache.set(cleanQuery(filename), entry);\n}\nexports.setDescriptor = setDescriptor;\nfunction getDescriptor(filename, compilerOptions) {\n  filename = cleanQuery(filename);\n  if (exports.descriptorCache.has(filename)) {\n    return exports.descriptorCache.get(filename);\n  }\n  // This function should only be called after the descriptor has been\n  // cached by the main loader.\n  // If this is somehow called without a cache hit, it's probably due to sub\n  // loaders being run in separate threads. The only way to deal with this is to\n  // read from disk directly...\n  const source = fs.readFileSync(filename, 'utf-8');\n  const {\n    descriptor\n  } = parse(source, {\n    filename,\n    sourceMap: true,\n    templateParseOptions: compilerOptions\n  });\n  exports.descriptorCache.set(filename, descriptor);\n  return descriptor;\n}\nexports.getDescriptor = getDescriptor;\nfunction cleanQuery(str) {\n  const i = str.indexOf('?');\n  return i > 0 ? str.slice(0, i) : str;\n}","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","exports","getDescriptor","setDescriptor","descriptorCache","fs","require","compiler_1","parse","compiler","Map","filename","entry","set","cleanQuery","compilerOptions","has","source","readFileSync","descriptor","sourceMap","templateParseOptions","str","i","indexOf","slice"],"sources":["C:/Users/Asus/Desktop/Clinic/Working System/clinicsystem/node_modules/vue-loader/dist/descriptorCache.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDescriptor = exports.setDescriptor = exports.descriptorCache = void 0;\nconst fs = __importStar(require(\"fs\"));\nconst compiler_1 = require(\"./compiler\");\nconst { parse } = compiler_1.compiler;\nexports.descriptorCache = new Map();\nfunction setDescriptor(filename, entry) {\n    exports.descriptorCache.set(cleanQuery(filename), entry);\n}\nexports.setDescriptor = setDescriptor;\nfunction getDescriptor(filename, compilerOptions) {\n    filename = cleanQuery(filename);\n    if (exports.descriptorCache.has(filename)) {\n        return exports.descriptorCache.get(filename);\n    }\n    // This function should only be called after the descriptor has been\n    // cached by the main loader.\n    // If this is somehow called without a cache hit, it's probably due to sub\n    // loaders being run in separate threads. The only way to deal with this is to\n    // read from disk directly...\n    const source = fs.readFileSync(filename, 'utf-8');\n    const { descriptor } = parse(source, {\n        filename,\n        sourceMap: true,\n        templateParseOptions: compilerOptions,\n    });\n    exports.descriptorCache.set(filename, descriptor);\n    return descriptor;\n}\nexports.getDescriptor = getDescriptor;\nfunction cleanQuery(str) {\n    const i = str.indexOf('?');\n    return i > 0 ? str.slice(0, i) : str;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}