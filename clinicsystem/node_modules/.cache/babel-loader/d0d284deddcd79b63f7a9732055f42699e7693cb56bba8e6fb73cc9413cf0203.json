{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// require('@fullcalendar/core/main.min.css')\n\nimport FullCalendar from '@fullcalendar/vue3';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport listPlugin from '@fullcalendar/list';\nimport axios from 'axios';\n// import { INITIAL_EVENTS, createEventId } from './event-utils'\nimport bootstrap5Plugin from '@fullcalendar/bootstrap5';\nimport * as bootstrap from 'bootstrap';\nlet eventGuid = 0;\nexport function createEventId() {\n  return String(eventGuid++);\n}\nfunction formatDatetime(datetimeStr) {\n  return datetimeStr.replace('T', ' ').replace(/\\+.*$/, '');\n}\nexport default {\n  components: {\n    FullCalendar // make the <FullCalendar> tag available\n  },\n  data: function () {\n    return {\n      inputPlaceholder: 'Schedule Name',\n      // showInputsNumAplha: false,\n      buttonText: 'Save changes',\n      modalTitle: 'Create Schedule',\n      buttonDisabled: false,\n      modal: null,\n      deletemodal: null,\n      limitModal: null,\n      savingConfirmation: null,\n      adminEmail: '',\n      nameRegex: /^[a-zA-Z\\s]*$/,\n      numberRegex: /^\\d+$/,\n      nameInput: '',\n      numberInput: '',\n      nameInputValid: false,\n      numberTextInput: false,\n      // lastnameInput: '',\n      // emailInput: '',\n      calendarOptions: {\n        //1 day only\n        selectAllow: function (selectionInfo) {\n          let startDate = selectionInfo.start;\n          let endDate = selectionInfo.end;\n          endDate.setSeconds(endDate.getSeconds() - 1); // allow full day selection\n          if (startDate.getDate() === endDate.getDate()) {\n            return true;\n          } else {\n            return false;\n          }\n        },\n        plugins: [bootstrap5Plugin, listPlugin, dayGridPlugin, timeGridPlugin, interactionPlugin // needed for dateClick\n        ],\n        headerToolbar: {\n          left: 'prev,next today',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'\n        },\n        // dayCellContent(arg) {\n        //   const date = arg.date.getDate(); // Extract the date from the arg object\n        //   const customContent = \"<div class='custom-content'>Client Left: 10</div>\"; // Custom text\n        //   return {\n        //     html: `<div class='date-cell'><div class='cell-content'>${customContent}</div><div class='date'>${date}</div></div>`\n        //   };\n        // },\n        themeSystem: 'bootstrap5',\n        initialView: 'dayGridMonth',\n        editable: true,\n        selectable: true,\n        selectMirror: true,\n        dayMaxEvents: true,\n        weekends: true,\n        select: this.handleDateSelect,\n        eventClick: this.deleteItem,\n        eventsSet: this.handleEvents,\n        eventDrop: this.handleEventDrop,\n        eventResize: this.handleEventResize,\n        eventDisplay: 'block',\n        slotMinTime: '05:00',\n        slotMaxTime: '17:00',\n        slotDuration: '01:00',\n        allDaySlot: false\n        /* you can update a remote database when these fire:\n        eventAdd:\n        eventChange:\n        eventRemove:\n        */\n      },\n      allevents: []\n    };\n  },\n  mounted() {\n    this.fetchEvents();\n    this.modal = new bootstrap.Modal(document.getElementById('exampleModal'), {\n      // Optional: specify options here\n    });\n    this.deletemodal = new bootstrap.Modal(document.getElementById('deleteModal'), {\n      // Optional: specify options here\n    });\n    this.limitModal = new bootstrap.Modal(document.getElementById('limitModal'), {\n      // Optional: specify options here\n    });\n    this.savingConfirmation = new bootstrap.Modal(document.getElementById('savingConfirmation'), {\n      // Optional: specify options here\n    });\n    this.adminEmail = localStorage.getItem('email');\n  },\n  methods: {\n    closeModal() {\n      this.modal.show();\n      this.savingConfirmation.hide();\n    },\n    approval_client() {\n      this.$router.push({\n        name: 'approval'\n      });\n    },\n    logout() {\n      console.log(localStorage.getItem('token'));\n      axios.post('http://localhost:8000/api/auth/logout', null, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      }).then(response => {\n        localStorage.removeItem('token');\n        this.$router.push({\n          name: 'login'\n        });\n        console.log(response.data);\n      }).catch(error => {\n        localStorage.removeItem('token');\n        this.$router.push({\n          name: 'login'\n        });\n        console.error('Logout error:', error);\n        console.log('An error occurred while logging out. Please try again.');\n      });\n    },\n    fetchEvents() {\n      // Fetch events from local storage\n      let eventsFromLocalStorage = JSON.parse(localStorage.getItem('events')) || [];\n      // Fetch events from the API\n      axios.get('http://localhost:8000/api/events').then(response => {\n        let eventsFromAPI = response.data.filter(event => event.user === 'admin' || event.user === 'clientApproved').map(event => {\n          let color;\n          switch (event.user) {\n            case 'clientApproval':\n              color = '#007FFF';\n              break;\n            case 'clientApproved':\n              color = '#FF9E00';\n              break;\n            case 'admin':\n              color = '#FF2D00';\n              break;\n            default:\n              // Handle default case if needed\n              break;\n          }\n          return {\n            id: event.id,\n            title: event.title,\n            start: event.start,\n            end: event.end,\n            allDay: event.allDay,\n            user: event.user,\n            color: color // Assign color based on user type\n          };\n        });\n\n        // Combine events from local storage and API\n        let allEvents = eventsFromLocalStorage.concat(eventsFromAPI);\n\n        // Update the calendar events with combined events\n        // this.$set(this.calendarOptions, 'events', allEvents);\n        this.calendarOptions.events = allEvents; // Directly assign events to calendarOptions\n      }).catch(error => {\n        console.error('Error fetching events:', error);\n      });\n    },\n    //ADD EVENT\n    handleDateSelect(selectInfo) {\n      // this.modal.show();\n      this.limitModal.show();\n      this.selectedInfo = selectInfo; // Store selectInfo in selectedInfo\n    },\n    createEventSelected(selectedInfo) {\n      this.inputPlaceholder = 'Schedule Name';\n      this.limitModal.hide();\n      this.modal.show();\n      // this.limitModal.show();\n      // this.showInputsNumAplha = true;\n      this.selectedInfo = selectedInfo; // Store selectInfo in selectedInfo\n      this.modalTitle = 'Create Schedule';\n      this.nameInputValid = true;\n      this.numberTextInput = false;\n    },\n    limitEventSelected(selectedInfo) {\n      this.limitModal.hide();\n      this.modal.show();\n      this.selectedInfo = selectedInfo; // Store selectInfo in selectedInfo\n      this.inputPlaceholder = 'Limit Client Schedule';\n      this.modalTitle = 'Limit date Schedule';\n      this.nameInputValid = false;\n      this.numberTextInput = true;\n    },\n    saveChanges(selectedInfo) {\n      console.log(this.nameInputValid, this.numberTextInput);\n\n      // Reset validity flags\n      this.nameInputValid = this.nameInput.trim() !== '';\n      if (!this.nameInputValid) {\n        return;\n      }\n\n      // Validation for Name Input\n      if (!this.nameRegex.test(this.nameInput)) {\n        this.nameInputValid = false;\n        return;\n      }\n      this.modal.hide();\n      this.savingConfirmation.show();\n      this.confirmSavingInfo = selectedInfo;\n    },\n    savingConfirmationEvent(confirmSavingInfo) {\n      this.buttonText = 'Processing';\n      this.buttonDisabled = true;\n      let calendarApi = confirmSavingInfo.view.calendar;\n      calendarApi.unselect(); // clear date selection\n\n      axios.post('http://localhost:8000/api/events', {\n        title: this.nameInput,\n        email: this.adminEmail,\n        start: formatDatetime(confirmSavingInfo.startStr),\n        end: formatDatetime(confirmSavingInfo.endStr),\n        user: 'admin',\n        allDay: confirmSavingInfo.allDay\n      }).then(response => {\n        // Hide the modal\n        this.savingConfirmation.hide();\n        this.buttonText = 'Save changes';\n        // Handle success\n        console.log('Event added:', response.data);\n        console.log('Event added ID:', response.data.id);\n        this.allevents.push(response.data);\n        this.fetchEvents();\n\n        // this.newEventTitle = '';\n        this.nameInput = '';\n        this.lastnameInput = '';\n        this.emailInput = '';\n      }).catch(error => {\n        // Handle error\n        console.error('Error adding event:', error.response.data);\n      });\n    },\n    deleteItem(clickInfo) {\n      console.log(\"Deleted? : \" + clickInfo.event.id);\n      this.deletemodal.show();\n      this.clickedInfo = clickInfo;\n    },\n    deleteItemModal(clickedInfo) {\n      axios.delete(`http://localhost:8000/api/events/${clickedInfo.event.id}`).then(response => {\n        this.deletemodal.hide();\n        // this.fetchEvents(); // Refresh events after deleting\n        console.log(\"Succesfully Deleted: \" + response.data + clickedInfo.event.id);\n        this.fetchEvents();\n      }).catch(error => {\n        console.error('Error deleting event:', error);\n      });\n    },\n    handleEventDrop(info) {\n      const eventId = info.event.id;\n      const allDay = info.event.allDay;\n      const start_formatdate = formatDatetime(info.event.startStr);\n      let end_formatdate = formatDatetime(info.event.endStr);\n\n      // If end date is empty, set it to start date\n      const moment = require('moment');\n      // If end date is empty, set it to start date\n      if (end_formatdate === \"\") {\n        end_formatdate = moment(start_formatdate).add(1, 'hours').format('YYYY-MM-DD HH:mm:ss');\n      } else {\n        end_formatdate = moment(start_formatdate).add(24, 'hours').format('YYYY-MM-DD HH:mm:ss');\n      }\n      console.log(\"handleEventDrop : \", eventId, \"start_formatdate: \" + start_formatdate, \"End: \" + end_formatdate, \"AllDay: \", allDay);\n      axios.put(`http://localhost:8000/api/events/${eventId}`, {\n        start: start_formatdate,\n        end: end_formatdate,\n        allDay: allDay\n      }).then(response => {\n        console.log('Event updated:', response.data);\n      }).catch(error => {\n        console.error('Error updating event:', error.response.data);\n      });\n    },\n    // Function to handle resize event\n    handleEventResize(info) {\n      const eventId = info.event.id;\n      const start = formatDatetime(info.event.startStr);\n      const end = formatDatetime(info.event.endStr);\n      console.log(\"handleEventResize : \", eventId, \"start \", start, \"  end \", end);\n      axios.put(`http://localhost:8000/api/events/${eventId}`, {\n        start: start,\n        end: end,\n        allDay: false\n      }).then(response => {\n        console.log('Event updated Resize:', response.data);\n      }).catch(error => {\n        console.error('Error updating event:', error.response.data);\n      });\n    },\n    handleEvents(events) {\n      this.allevents = events;\n    }\n  }\n};","map":{"version":3,"names":["FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","axios","bootstrap5Plugin","bootstrap","eventGuid","createEventId","String","formatDatetime","datetimeStr","replace","components","data","inputPlaceholder","buttonText","modalTitle","buttonDisabled","modal","deletemodal","limitModal","savingConfirmation","adminEmail","nameRegex","numberRegex","nameInput","numberInput","nameInputValid","numberTextInput","calendarOptions","selectAllow","selectionInfo","startDate","start","endDate","end","setSeconds","getSeconds","getDate","plugins","headerToolbar","left","center","right","themeSystem","initialView","editable","selectable","selectMirror","dayMaxEvents","weekends","select","handleDateSelect","eventClick","deleteItem","eventsSet","handleEvents","eventDrop","handleEventDrop","eventResize","handleEventResize","eventDisplay","slotMinTime","slotMaxTime","slotDuration","allDaySlot","allevents","mounted","fetchEvents","Modal","document","getElementById","localStorage","getItem","methods","closeModal","show","hide","approval_client","$router","push","name","logout","console","log","post","headers","Authorization","then","response","removeItem","catch","error","eventsFromLocalStorage","JSON","parse","get","eventsFromAPI","filter","event","user","map","color","id","title","allDay","allEvents","concat","events","selectInfo","selectedInfo","createEventSelected","limitEventSelected","saveChanges","trim","test","confirmSavingInfo","savingConfirmationEvent","calendarApi","view","calendar","unselect","email","startStr","endStr","lastnameInput","emailInput","clickInfo","clickedInfo","deleteItemModal","delete","info","eventId","start_formatdate","end_formatdate","moment","require","add","format","put"],"sources":["C:\\Users\\Asus\\Desktop\\Clinic\\Working System\\clinicsystem\\src\\views\\AdminView.vue"],"sourcesContent":["<!-- AdminView.vue -->\n\n<script>\n// require('@fullcalendar/core/main.min.css')\n\nimport FullCalendar from '@fullcalendar/vue3'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport listPlugin from '@fullcalendar/list'\n\nimport axios from 'axios';\n// import { INITIAL_EVENTS, createEventId } from './event-utils'\nimport bootstrap5Plugin from '@fullcalendar/bootstrap5'\nimport * as bootstrap from 'bootstrap';\n\nlet eventGuid = 0\nexport function createEventId() {\n  return String(eventGuid++)\n}\n\nfunction formatDatetime(datetimeStr) {\n  return datetimeStr.replace('T', ' ').replace(/\\+.*$/, '');\n}\n\nexport default {\n  components: {\n    FullCalendar // make the <FullCalendar> tag available\n  },\n\n  data: function () {\n    return {\n      inputPlaceholder: 'Schedule Name',\n      // showInputsNumAplha: false,\n      buttonText: 'Save changes',\n      modalTitle: 'Create Schedule',\n      buttonDisabled: false,\n      modal: null,\n      deletemodal: null,\n      limitModal: null,\n      savingConfirmation: null,\n      adminEmail: '',\n\n\n      nameRegex: /^[a-zA-Z\\s]*$/,\n      numberRegex: /^\\d+$/,\n      nameInput: '',\n      numberInput: '',\n      nameInputValid: false,\n      numberTextInput: false,\n      // lastnameInput: '',\n      // emailInput: '',\n      calendarOptions: {\n\n        //1 day only\n        selectAllow: function (selectionInfo) {\n          \n          let startDate = selectionInfo.start;\n          let endDate = selectionInfo.end;\n          endDate.setSeconds(endDate.getSeconds() - 1);  // allow full day selection\n          if (startDate.getDate() === endDate.getDate()) {\n            return true;\n          } else {\n            return false;\n          }\n        },\n        plugins: [\n          bootstrap5Plugin,\n          listPlugin,\n          dayGridPlugin,\n          timeGridPlugin,\n          interactionPlugin // needed for dateClick\n        ],\n        headerToolbar: {\n          left: 'prev,next today',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'\n        },\n        // dayCellContent(arg) {\n        //   const date = arg.date.getDate(); // Extract the date from the arg object\n        //   const customContent = \"<div class='custom-content'>Client Left: 10</div>\"; // Custom text\n        //   return {\n        //     html: `<div class='date-cell'><div class='cell-content'>${customContent}</div><div class='date'>${date}</div></div>`\n        //   };\n        // },\n        themeSystem: 'bootstrap5', \n        initialView: 'dayGridMonth',\n        editable: true,\n        selectable: true,\n        selectMirror: true,\n        dayMaxEvents: true,\n        weekends: true,\n        select: this.handleDateSelect,\n        eventClick: this.deleteItem,\n        eventsSet: this.handleEvents,\n        eventDrop: this.handleEventDrop,\n        eventResize: this.handleEventResize,\n        eventDisplay: 'block',\n        slotMinTime: '05:00',\n        slotMaxTime: '17:00',\n        slotDuration: '01:00',\n        allDaySlot: false,\n        /* you can update a remote database when these fire:\n        eventAdd:\n        eventChange:\n        eventRemove:\n        */\n      },\n      allevents: []\n    }\n  },\n\n  mounted() {\n    this.fetchEvents();\n    this.modal = new bootstrap.Modal(document.getElementById('exampleModal'), {\n      // Optional: specify options here\n    });\n    this.deletemodal = new bootstrap.Modal(document.getElementById('deleteModal'), {\n      // Optional: specify options here\n    });\n    this.limitModal = new bootstrap.Modal(document.getElementById('limitModal'), {\n      // Optional: specify options here\n    });\n    \n    this.savingConfirmation = new bootstrap.Modal(document.getElementById('savingConfirmation'), {\n      // Optional: specify options here\n    });\n    this.adminEmail = localStorage.getItem('email');\n  },\n\n  methods: {\n    \n    closeModal(){\n      this.modal.show();\n      this.savingConfirmation.hide();\n    },\n\n    approval_client() {\n      this.$router.push({ name: 'approval' });\n    },\n\n    logout() {\n\n      console.log(localStorage.getItem('token'));\n      axios.post('http://localhost:8000/api/auth/logout', null, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      })\n      .then(response => {\n        localStorage.removeItem('token');\n        this.$router.push({ name: 'login' });\n        console.log(response.data);\n      })\n      .catch(error => {\n        localStorage.removeItem('token');\n        this.$router.push({ name: 'login' });\n        console.error('Logout error:', error);\n        console.log('An error occurred while logging out. Please try again.');\n      });\n    },\n\n    fetchEvents() {\n      // Fetch events from local storage\n      let eventsFromLocalStorage = JSON.parse(localStorage.getItem('events')) || [];\n      // Fetch events from the API\n      axios.get('http://localhost:8000/api/events')\n        .then(response => {\n\n            let eventsFromAPI = response.data.filter(event => event.user === 'admin' ||  event.user === 'clientApproved' ).map(event => {\n          \n            let color;\n            switch (event.user) {\n                case 'clientApproval':\n                    color = '#007FFF';\n                    break;\n                case 'clientApproved':\n                    color = '#FF9E00';\n                    break;\n                case 'admin':\n                    color = '#FF2D00';\n                    break;\n                default:\n                    // Handle default case if needed\n                    break;\n            }\n\n            return {\n                id: event.id,\n                title: event.title,\n                start: event.start,\n                end: event.end,\n                allDay: event.allDay,\n                user: event.user,\n                color: color // Assign color based on user type\n            };\n        });\n\n          // Combine events from local storage and API\n          let allEvents = eventsFromLocalStorage.concat(eventsFromAPI);\n\n          // Update the calendar events with combined events\n          // this.$set(this.calendarOptions, 'events', allEvents);\n          this.calendarOptions.events = allEvents; // Directly assign events to calendarOptions\n\n        })\n        .catch(error => {\n          console.error('Error fetching events:', error);\n        });\n    },\n\n    //ADD EVENT\n    handleDateSelect(selectInfo) {\n\n      // this.modal.show();\n      this.limitModal.show();\n      this.selectedInfo = selectInfo; // Store selectInfo in selectedInfo\n    },\n\n    createEventSelected(selectedInfo){\n  \n      this.inputPlaceholder = 'Schedule Name'; \n      this.limitModal.hide();\n      this.modal.show();\n      // this.limitModal.show();\n      // this.showInputsNumAplha = true;\n      this.selectedInfo = selectedInfo; // Store selectInfo in selectedInfo\n      this.modalTitle = 'Create Schedule';\n      this.nameInputValid = true;\n      this.numberTextInput = false;\n    },\n\n    limitEventSelected(selectedInfo){\n      this.limitModal.hide();\n      this.modal.show();\n      this.selectedInfo = selectedInfo; // Store selectInfo in selectedInfo\n      this.inputPlaceholder = 'Limit Client Schedule'; \n      this.modalTitle = 'Limit date Schedule';\n      this.nameInputValid = false;\n      this.numberTextInput = true;\n    },\n\n    saveChanges(selectedInfo) {\nconsole.log(this.nameInputValid , this.numberTextInput);\n\n               // Reset validity flags\n      this.nameInputValid = this.nameInput.trim() !== '';\n      \n      if (!this.nameInputValid){\n        return;\n      }\n\n      // Validation for Name Input\n      if (!this.nameRegex.test(this.nameInput)) {\n        this.nameInputValid = false;\n        return;\n      }\n\n\n\n      this.modal.hide();\n      this.savingConfirmation.show();\n      this.confirmSavingInfo = selectedInfo;\n    },\n\n    savingConfirmationEvent(confirmSavingInfo) {\n      this.buttonText = 'Processing';\n      this.buttonDisabled = true;\n\n      let calendarApi = confirmSavingInfo.view.calendar\n      calendarApi.unselect() // clear date selection\n      \n      axios.post('http://localhost:8000/api/events', {\n\n          title: this.nameInput,\n          email: this.adminEmail,\n          start: formatDatetime(confirmSavingInfo.startStr),\n          end: formatDatetime(confirmSavingInfo.endStr),\n          user: 'admin',\n          allDay: confirmSavingInfo.allDay\n        })\n          .then(response => {\n            // Hide the modal\n            this.savingConfirmation.hide();\n            this.buttonText = 'Save changes';\n            // Handle success\n            console.log('Event added:', response.data);\n            console.log('Event added ID:', response.data.id);\n            this.allevents.push(response.data);\n            this.fetchEvents();\n\n            // this.newEventTitle = '';\n            this.nameInput = '';\n              this.lastnameInput = '';\n              this.emailInput = '';\n\n          })\n          .catch(error => {\n            // Handle error\n            console.error('Error adding event:', error.response.data);\n          });\n\n    },\n\n    deleteItem(clickInfo) {\n      console.log(\"Deleted? : \" + clickInfo.event.id);\n      this.deletemodal.show();\n      this.clickedInfo = clickInfo;\n    },\n\n    deleteItemModal(clickedInfo){\n      axios.delete(`http://localhost:8000/api/events/${clickedInfo.event.id}`)\n        .then(response => {\n          this.deletemodal.hide();\n          // this.fetchEvents(); // Refresh events after deleting\n          console.log(\"Succesfully Deleted: \" + response.data + clickedInfo.event.id);\n          this.fetchEvents();\n\n        })\n        .catch(error => {\n          \n          console.error('Error deleting event:', error);\n        });\n\n    },\n\n    handleEventDrop(info) {\n      const eventId = info.event.id;\n      const allDay = info.event.allDay;\n      const start_formatdate = formatDatetime(info.event.startStr);\n      let end_formatdate = formatDatetime(info.event.endStr);\n\n      // If end date is empty, set it to start date\n       const moment = require('moment');\n      // If end date is empty, set it to start date\n      if (end_formatdate === \"\") {\n        end_formatdate = moment(start_formatdate).add(1, 'hours').format('YYYY-MM-DD HH:mm:ss');\n      }else{\n        end_formatdate = moment(start_formatdate).add(24, 'hours').format('YYYY-MM-DD HH:mm:ss');\n      }\n\n      console.log(\"handleEventDrop : \", eventId, \"start_formatdate: \" + start_formatdate, \"End: \" + end_formatdate, \"AllDay: \", allDay);\n\n      axios.put(`http://localhost:8000/api/events/${eventId}`, {\n        start: start_formatdate,\n        end: end_formatdate,\n        allDay: allDay\n      })\n        .then(response => {\n          console.log('Event updated:', response.data);\n\n        })\n        .catch(error => {\n          console.error('Error updating event:', error.response.data);\n        });\n    },\n\n    // Function to handle resize event\n    handleEventResize(info) {\n      const eventId = info.event.id;\n      const start = formatDatetime(info.event.startStr);\n      const end = formatDatetime(info.event.endStr);\n\n      console.log(\"handleEventResize : \", eventId, \"start \", start, \"  end \", end);\n\n      axios.put(`http://localhost:8000/api/events/${eventId}`, {\n        start: start,\n        end: end,\n        allDay: false\n      })\n        .then(response => {\n          console.log('Event updated Resize:', response.data);\n        })\n        .catch(error => {\n          console.error('Error updating event:', error.response.data);\n        });\n    },\n\n    handleEvents(events) {\n      this.allevents = events;\n    }\n  },\n\n\n}\n</script>\n\n\n<template>\n  <div class='demo-app'>\n    <div class='demo-app-sidebar' style=\"display: flex; flex-direction: column; justify-content: space-between;\">\n  <div>\n    <div class=\"text-center\">\n      <img src=\"../assets/icon.png\" alt=\"Ears Nose and Throat\" style=\"width: 160px; height: auto; \" class=\"img-fluid\">\n      <h4>{{ adminEmail }}</h4>\n    </div>\n    <div style=\"margin: 50px 5px 10px 5px ;\">\n    </div>\n  </div>\n\n  <!-- Admin Logout -->\n  <div class=\"text-center\" style=\"margin: 10px 5px 10px 5px;\">\n    <button @click=\"approval_client\" class=\"btn btn-primary\">Client Approval</button>\n  </div>\n\n  <!-- Admin Logout -->\n  <div class=\"text-center\" style=\"margin: 10px 5px 10px 5px;\">\n    <button @click=\"logout\" class=\"btn btn-danger\">Admin Logout</button>\n  </div>\n</div>\n\n\n    <div class='demo-app-main'>\n\n      <FullCalendar class='demo-app-calendar' :options='calendarOptions'>\n        <template v-slot:eventContent='arg'>\n          <b>{{ arg.start }}</b>\n          <i>{{ arg.event.title }}</i>\n        </template>\n      </FullCalendar>\n    </div>\n\n     <!-- Modal -->\n     <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog modal-dialog-centered\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header bg-primary text-white\">\n              <h5 class=\"modal-title\" id=\"exampleModalLabel\">{{ modalTitle }}</h5>\n              <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n              <!-- Modal Body Content -->\n              <div class=\"modal-body\">  \n\n                <div class=\"mb-3\">\n\n                  <div class=\"mb-3\">\n                    <div v-if=\"nameInputValid\">\n                        <input type=\"text\" class=\"form-control\" id=\"nameInput\" v-model=\"nameInput\" :placeholder=\"inputPlaceholder\">\n                        <small v-if=\"!nameInput  && !nameInputValid\" class=\"text-danger\">Please fill the input field</small>\n                        <small v-else-if=\"nameInput && !nameRegex.test(nameInput)\" class=\"text-danger\">Please fill valid Schedule</small>\n                    </div>\n                    \n                    <div v-else-if=\"numberTextInput\">\n                        <input type=\"text\" class=\"form-control\" id=\"numberInput\" v-model=\"numberInput\" :placeholder=\"inputPlaceholder\">\n                        <small v-if=\"!numberInput\" class=\"text-danger\">Please fill the input field</small>\n                        <small v-else-if=\"numberInput && !numberRegex.test(numberInput)\" class=\"text-danger\">Please fill valid Schedule</small>\n                    </div>\n                </div>\n        \n                </div>\n              </div>\n\n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n              <button type=\"button\" class=\"btn btn-primary\" @click=\"saveChanges(selectedInfo)\">Save changes</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n                  <!-- Saving Confirmation -->\n      <div class=\"modal fade\" id=\"savingConfirmation\" tabindex=\"-1\" aria-labelledby=\"savingConfirmation\" aria-hidden=\"true\">\n        <div class=\"modal-dialog modal-dialog-centered\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header bg-primary text-white\">\n              <h5 class=\"modal-title\" id=\"savingConfirmationLabel\">Are you sure you want to save?</h5>\n              <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <!-- Modal Body Content -->\n            <div class=\"modal-body\">\n              <h4>\n                  You cant edit your schedule once it saved.\n                </h4>\n            </div>\n              \n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" @click=\"closeModal()\">Close</button>\n              <button type=\"button\" class=\"btn btn-primary\" @click=\"savingConfirmationEvent(selectedInfo)\" :disabled=\"buttonDisabled\"> {{ buttonText }} </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n           <!-- Modal -->\n     <div class=\"modal fade\" id=\"limitModal\" tabindex=\"-1\" aria-labelledby=\"limitModal\" aria-hidden=\"true\">\n        <div class=\"modal-dialog modal-dialog-centered\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header bg-info text-white\">\n              <h5 class=\"modal-title\" id=\"limitModalLabel\">Select</h5>\n              <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n              <!-- Modal Body Content -->\n              <div class=\"modal-body\">\n                <div class=\"mb-3\">\n                  <button type=\"button\" class=\"btn btn-success\" @click=\"createEventSelected(selectedInfo)\">Create Event</button>\n                  <button type=\"button\" class=\"btn btn-secondary\" @click=\"limitEventSelected(selectedInfo)\" >Limit Event</button>\n                </div>\n              </div>\n\n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n            <!-- Delete -->\n            <div class=\"modal fade\" id=\"deleteModal\" tabindex=\"-1\" aria-labelledby=\"deleteModal\" aria-hidden=\"true\">\n        <div class=\"modal-dialog modal-dialog-centered\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header bg-danger text-white \">\n              <h5 class=\"modal-title\">Delete</h5>\n              <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n              <h4><p>Are you sure you want to delete?</p></h4>\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n              <button type=\"button\" class=\"btn btn-danger\" @click=\"deleteItemModal(clickedInfo)\">Delete</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n  </div>\n</template>\n\n\n\n<style lang='css'>\n\n\nhtml, body {\n    height: 100vh;\n    margin: 0;\n    padding: 0;\n    \n   /* overflow: hidden; Disable scrolling of the entire page */\n}\n@media (max-width: 650px) {\n    ul {\n      margin: 0;\n      /* padding: 0 0 0 1.5em; */\n      font-size: 10px;\n    }\n\n    li {\n      /* margin: 1.5em 0; */\n      padding: 0;\n      font-size: 10px;\n    }\n  }\n\n\n  h2 {\n    margin: 0;\n    font-size: 16px;\n  }\n\n  ul {\n    margin: 0;\n    /* padding: 0 0 0 1.5em; */\n  }\n\n  li {\n    /* margin: 1.5em 0; */\n    padding: 0;\n  }\n\n  b {\n    /* used for event dates/times */\n    margin-right: 3px;\n    color: black;\n  }\n\n  i {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n\n  .demo-app {\n    display: flex;\n    font-family: Arial, Helvetica Neue, Helvetica, sans-serif;\n    font-size: 14px;\n    max-height: 100vh; /* Set sidebar height to match viewport height */\n  }\n\n  .demo-app-sidebar {\n    padding: 10px;\n    width: 300px;\n    line-height: 1.5;\n    /* background: #eaf9ff; */\n    background-color: #e6e7e9;\n    border-right: 1px solid #d3e2e8;\n    /* overflow-y: auto; */\n    max-height: 100vh; /* Set sidebar height to match viewport height */\n  }\n\n  .demo-app-main {\n    flex-grow: 1;\n    padding: 3em;\n  }\n\n    /* Adjust the height of FullCalendar to fit within the main content area */\n  .demo-app-calendar {\n      height: calc(100vh - 6em); /* Adjust as needed, considering header/footer heights */\n  }\n\n  .fc {\n    /* the calendar root */\n    /* max-width: 1100px; */\n    margin: 0 auto;\n    max-height: 100vh; /* Set sidebar height to match viewport height */\n  }\n  .fc-col-header-cell-cushion{\n    text-decoration: none;\n    color: black;\n  }\n  .fc-scrollgrid .fc-daygrid-day-number{\n    text-decoration: none;\n    color: black;\n\n  }\n  .fc-event{\n    color: white;\n  }\n\n  .fc-list-event-title{\n    color: black;\n  }\n\n  .fc-list-event-time{\n    color: black;\n  }\n  .date-cell {\n  display: flex; /* Use flexbox layout */\n  justify-content: flex-start; /* Align content to the start (left) */\n}\n\n.cell-content {\n  display: flex; /* Use flexbox layout */\n  justify-content: flex-start; /* Align content to the start (left) */\n  align-items: flex-start; /* Align items to the start (top) */\n  margin-right: 50px; /* Adjust margin for spacing */\n}\n\n.date {\n  display: flex; /* Use flexbox layout */\n  justify-content: flex-end; /* Align content to the end (right) */\n}\n\n.custom-content{\n font-size: 12px;\n}\n\n  </style>\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}