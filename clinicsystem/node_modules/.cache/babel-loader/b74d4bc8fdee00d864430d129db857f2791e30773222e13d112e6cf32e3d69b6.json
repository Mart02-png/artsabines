{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, createStaticVNode as _createStaticVNode } from \"vue\";\nimport _imports_0 from '../assets/icon.png';\nconst _hoisted_1 = {\n  class: \"demo-app\"\n};\nconst _hoisted_2 = {\n  class: \"demo-app-sidebar\",\n  style: {\n    \"display\": \"flex\",\n    \"flex-direction\": \"column\",\n    \"justify-content\": \"space-between\"\n  }\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"text-center\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"Ears Nose and Throat\",\n  style: {\n    \"width\": \"160px\",\n    \"height\": \"auto\"\n  },\n  class: \"img-fluid\"\n})]), /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"margin\": \"50px 5px 10px 5px\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"h2\", null, \"Instructions\"), /*#__PURE__*/_createElementVNode(\"ul\", {\n  style: {\n    \"text-align\": \"left\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"li\", null, \"Select dates and you will be prompted to create a new event\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"Drag, drop, and resize events\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"Click an event to delete it\")])])], -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"text-center\",\n  style: {\n    \"margin\": \"10px 5px 10px 5px\"\n  }\n};\nconst _hoisted_5 = {\n  class: \"text-center\",\n  style: {\n    \"margin\": \"10px 5px 10px 5px\"\n  }\n};\nconst _hoisted_6 = {\n  class: \"demo-app-main\"\n};\nconst _hoisted_7 = {\n  class: \"modal fade\",\n  id: \"exampleModal\",\n  tabindex: \"-1\",\n  \"aria-labelledby\": \"exampleModalLabel\",\n  \"aria-hidden\": \"true\"\n};\nconst _hoisted_8 = {\n  class: \"modal-dialog modal-dialog-centered\"\n};\nconst _hoisted_9 = {\n  class: \"modal-content\"\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"modal-header bg-primary text-white\"\n}, [/*#__PURE__*/_createElementVNode(\"h5\", {\n  class: \"modal-title\",\n  id: \"exampleModalLabel\"\n}, \"Create Schedule\"), /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"button\",\n  class: \"btn-close\",\n  \"data-bs-dismiss\": \"modal\",\n  \"aria-label\": \"Close\"\n})], -1 /* HOISTED */);\nconst _hoisted_11 = {\n  class: \"modal-body\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  for: \"date\"\n};\nconst _hoisted_13 = {\n  key: 2,\n  for: \"time\"\n};\nconst _hoisted_14 = /*#__PURE__*/_createStaticVNode(\"<option value=\\\"05:00 AM\\\">05:00 AM</option><option value=\\\"06:00 AM\\\">06:00 AM</option><option value=\\\"07:00 AM\\\">07:00 AM</option><option value=\\\"08:00 AM\\\">08:00 AM</option><option value=\\\"09:00 AM\\\">09:00 AM</option><option value=\\\"10:00 AM\\\">10:00 AM</option><option value=\\\"11:00 AM\\\">11:00 AM</option><option value=\\\"12:00 PM\\\">12:00 PM</option><option value=\\\"01:00 PM\\\">01:00 PM</option><option value=\\\"02:00 PM\\\">02:00 PM</option><option value=\\\"03:00 PM\\\">03:00 PM</option><option value=\\\"04:00 PM\\\">04:00 PM</option><option value=\\\"05:00 PM\\\">05:00 PM</option>\", 13);\nconst _hoisted_27 = [_hoisted_14];\nconst _hoisted_28 = {\n  class: \"mb-3\"\n};\nconst _hoisted_29 = {\n  key: 0,\n  class: \"text-danger\"\n};\nconst _hoisted_30 = {\n  key: 1,\n  class: \"text-danger\"\n};\nconst _hoisted_31 = {\n  class: \"mb-3\"\n};\nconst _hoisted_32 = {\n  key: 0,\n  class: \"text-danger\"\n};\nconst _hoisted_33 = {\n  key: 1,\n  class: \"text-danger\"\n};\nconst _hoisted_34 = {\n  class: \"mb-3\"\n};\nconst _hoisted_35 = {\n  key: 0,\n  class: \"text-danger\"\n};\nconst _hoisted_36 = {\n  key: 1,\n  class: \"text-danger\"\n};\nconst _hoisted_37 = {\n  class: \"modal-footer\"\n};\nconst _hoisted_38 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"button\",\n  class: \"btn btn-secondary\",\n  \"data-bs-dismiss\": \"modal\"\n}, \"Close\", -1 /* HOISTED */);\nconst _hoisted_39 = {\n  class: \"modal fade\",\n  id: \"saveDateTimeRangeModal\",\n  tabindex: \"-1\",\n  \"aria-labelledby\": \"saveDateTimeRangeModal\",\n  \"aria-hidden\": \"true\"\n};\nconst _hoisted_40 = {\n  class: \"modal-dialog modal-dialog-centered\"\n};\nconst _hoisted_41 = {\n  class: \"modal-content\"\n};\nconst _hoisted_42 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"modal-header bg-primary text-white\"\n}, [/*#__PURE__*/_createElementVNode(\"h5\", {\n  class: \"modal-title\",\n  id: \"exampleModalLabel\"\n}, \"Manually create schedule\"), /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"button\",\n  class: \"btn-close\",\n  \"data-bs-dismiss\": \"modal\",\n  \"aria-label\": \"Close\"\n})], -1 /* HOISTED */);\nconst _hoisted_43 = {\n  class: \"modal-body\"\n};\nconst _hoisted_44 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"date\"\n}, \"Date:\", -1 /* HOISTED */);\nconst _hoisted_45 = /*#__PURE__*/_createStaticVNode(\"<label for=\\\"time\\\">Time:</label><select id=\\\"time\\\" name=\\\"time\\\"><option value=\\\"05:00 AM\\\">05:00 AM</option><option value=\\\"06:00 AM\\\">06:00 AM</option><option value=\\\"07:00 AM\\\">07:00 AM</option><option value=\\\"08:00 AM\\\">08:00 AM</option><option value=\\\"09:00 AM\\\">09:00 AM</option><option value=\\\"10:00 AM\\\">10:00 AM</option><option value=\\\"11:00 AM\\\">11:00 AM</option><option value=\\\"12:00 PM\\\">12:00 PM</option><option value=\\\"01:00 PM\\\">01:00 PM</option><option value=\\\"02:00 PM\\\">02:00 PM</option><option value=\\\"03:00 PM\\\">03:00 PM</option><option value=\\\"04:00 PM\\\">04:00 PM</option><option value=\\\"05:00 PM\\\">05:00 PM</option></select>\", 2);\nconst _hoisted_47 = {\n  class: \"modal-footer\"\n};\nconst _hoisted_48 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"button\",\n  class: \"btn btn-secondary\",\n  \"data-bs-dismiss\": \"modal\"\n}, \"Close\", -1 /* HOISTED */);\nconst _hoisted_49 = [\"disabled\"];\nconst _hoisted_50 = {\n  class: \"modal fade\",\n  id: \"savingConfirmation\",\n  tabindex: \"-1\",\n  \"aria-labelledby\": \"savingConfirmation\",\n  \"aria-hidden\": \"true\"\n};\nconst _hoisted_51 = {\n  class: \"modal-dialog modal-dialog-centered\"\n};\nconst _hoisted_52 = {\n  class: \"modal-content\"\n};\nconst _hoisted_53 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"modal-header bg-primary text-white\"\n}, [/*#__PURE__*/_createElementVNode(\"h5\", {\n  class: \"modal-title\",\n  id: \"exampleModalLabel\"\n}, \"Are you sure you want to save?\"), /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"button\",\n  class: \"btn-close\",\n  \"data-bs-dismiss\": \"modal\",\n  \"aria-label\": \"Close\"\n})], -1 /* HOISTED */);\nconst _hoisted_54 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"modal-body\"\n}, [/*#__PURE__*/_createElementVNode(\"h4\", null, \" You cant edit or delete your schedule once it save \")], -1 /* HOISTED */);\nconst _hoisted_55 = {\n  class: \"modal-footer\"\n};\nconst _hoisted_56 = [\"disabled\"];\nconst _hoisted_57 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"modal fade\\\" id=\\\"errorModal\\\" tabindex=\\\"-1\\\" aria-labelledby=\\\"errorModal\\\" aria-hidden=\\\"true\\\"><div class=\\\"modal-dialog modal-dialog-centered\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header bg-danger text-white\\\"><h5 class=\\\"modal-title bi-exclamation-triangle-fill\\\"> Error</h5><button type=\\\"button\\\" class=\\\"btn-close btn-close-white\\\" data-bs-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"></button></div><div class=\\\"modal-body\\\"><h4><p><i class=\\\"bi\\\"></i> <span id=\\\"errorMessage\\\"></span></p></h4></div><div class=\\\"modal-footer\\\"><button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-bs-dismiss=\\\"modal\\\">Close</button></div></div></div></div>\", 1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  const _component_FullCalendar = _resolveComponent(\"FullCalendar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createCommentVNode(\" Admin Login \"), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_router_link, {\n    to: {\n      name: 'about'\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"about\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_router_view)]), _createCommentVNode(\" Admin Login \"), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_router_link, {\n    to: {\n      name: 'login'\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Admin Login\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_router_view)])]), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_FullCalendar, {\n    class: \"demo-app-calendar\",\n    options: _ctx.calendarOptions\n  }, {\n    eventContent: _withCtx(arg => [_createElementVNode(\"b\", null, _toDisplayString(arg.start), 1 /* TEXT */), _createElementVNode(\"i\", null, _toDisplayString(arg.event.title), 1 /* TEXT */)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"options\"]), _createCommentVNode(\" Modal \"), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _createCommentVNode(\" Modal Body Content \"), _createElementVNode(\"div\", _hoisted_11, [_ctx.showDateTimeInputs ? (_openBlock(), _createElementBlock(\"label\", _hoisted_12, \"Date:\")) : _createCommentVNode(\"v-if\", true), _ctx.showDateTimeInputs ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 1,\n    type: \"date\",\n    id: \"date\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.selectedDate = $event)\n  }, null, 512 /* NEED_PATCH */)), [[_vModelText, _ctx.selectedDate]]) : _createCommentVNode(\"v-if\", true), _ctx.showDateTimeInputs ? (_openBlock(), _createElementBlock(\"label\", _hoisted_13, \"Time:\")) : _createCommentVNode(\"v-if\", true), _ctx.showDateTimeInputs ? _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n    key: 3,\n    id: \"time\",\n    name: \"time\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.selectedTime = $event)\n  }, [..._hoisted_27], 512 /* NEED_PATCH */)), [[_vModelSelect, _ctx.selectedTime]]) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_28, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"nameInput\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.nameInput = $event),\n    placeholder: \"Name\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.nameInput]]), !_ctx.nameInput && !_ctx.nameInputValid ? (_openBlock(), _createElementBlock(\"small\", _hoisted_29, \"Please fill Name\")) : _ctx.nameInput && !_ctx.nameRegex.test(_ctx.nameInput) && !_ctx.numberRegex.test(_ctx.nameInput) ? (_openBlock(), _createElementBlock(\"small\", _hoisted_30, \"Please fill valid valid Name\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_31, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"lastnameInput\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.lastnameInput = $event),\n    placeholder: \"Lastname\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.lastnameInput]]), !_ctx.lastnameInput && !_ctx.lastnameInputValid ? (_openBlock(), _createElementBlock(\"small\", _hoisted_32, \"Please fill Lastname\")) : _ctx.lastnameInput && !_ctx.nameRegex.test(_ctx.lastnameInput) && !_ctx.numberRegex.test(_ctx.lastnameInput) ? (_openBlock(), _createElementBlock(\"small\", _hoisted_33, \"Please fill valid valid Lastname\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_34, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    class: \"form-control\",\n    id: \"emailInput\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.emailInput = $event),\n    placeholder: \"Email\",\n    autocomplete: \"current-emailInput\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.emailInput]]), !_ctx.emailInput && !_ctx.emailInputValid ? (_openBlock(), _createElementBlock(\"small\", _hoisted_35, \"Please fill contact information\")) : _ctx.emailInput && !_ctx.emailRegex.test(_ctx.emailInput) && !_ctx.numberRegex.test(_ctx.emailInput) ? (_openBlock(), _createElementBlock(\"small\", _hoisted_36, \"Please fill valid Email or valid phone number\")) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" Rest of your modal content \")]), _createElementVNode(\"div\", _hoisted_37, [_hoisted_38, _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-primary\",\n    onClick: _cache[5] || (_cache[5] = $event => $options.saveChanges(_ctx.selectedInfo))\n  }, \"Save changes\")])])])]), _createCommentVNode(\" Manually schedule \"), _createElementVNode(\"div\", _hoisted_39, [_createElementVNode(\"div\", _hoisted_40, [_createElementVNode(\"div\", _hoisted_41, [_hoisted_42, _createCommentVNode(\" Modal Body Content \"), _createElementVNode(\"div\", _hoisted_43, [_hoisted_44, _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    id: \"date\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.selectedDate = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.selectedDate]]), _hoisted_45]), _createElementVNode(\"div\", _hoisted_47, [_hoisted_48, _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-primary\",\n    onClick: _cache[7] || (_cache[7] = $event => $options.saveDateTimeRange()),\n    disabled: _ctx.buttonDisabled\n  }, _toDisplayString(_ctx.buttonText), 9 /* TEXT, PROPS */, _hoisted_49)])])])]), _createCommentVNode(\" Saving Confirmation \"), _createElementVNode(\"div\", _hoisted_50, [_createElementVNode(\"div\", _hoisted_51, [_createElementVNode(\"div\", _hoisted_52, [_hoisted_53, _createCommentVNode(\" Modal Body Content \"), _hoisted_54, _createElementVNode(\"div\", _hoisted_55, [_createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-secondary\",\n    \"data-bs-dismiss\": \"modal\",\n    onClick: _cache[8] || (_cache[8] = $event => $options.closeModal())\n  }, \"Close\"), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-primary\",\n    onClick: _cache[9] || (_cache[9] = $event => $options.savingConfirmationEvent(_ctx.selectedInfo)),\n    disabled: _ctx.buttonDisabled\n  }, _toDisplayString(_ctx.buttonText), 9 /* TEXT, PROPS */, _hoisted_56)])])])]), _createCommentVNode(\" Error \"), _hoisted_57])]);\n}","map":{"version":3,"names":["_imports_0","class","style","_createElementVNode","src","alt","id","tabindex","type","key","for","_createStaticVNode","_hoisted_14","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createCommentVNode","_hoisted_4","_createVNode","_component_router_link","to","name","default","_withCtx","_createTextVNode","_","_component_router_view","_hoisted_5","_hoisted_6","_component_FullCalendar","options","_ctx","calendarOptions","eventContent","arg","_toDisplayString","start","event","title","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","showDateTimeInputs","_hoisted_12","_cache","$event","selectedDate","_hoisted_13","selectedTime","_hoisted_27","_hoisted_28","nameInput","placeholder","nameInputValid","_hoisted_29","nameRegex","test","numberRegex","_hoisted_30","_hoisted_31","lastnameInput","lastnameInputValid","_hoisted_32","_hoisted_33","_hoisted_34","emailInput","autocomplete","required","emailInputValid","_hoisted_35","emailRegex","_hoisted_36","_hoisted_37","_hoisted_38","onClick","$options","saveChanges","selectedInfo","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_47","_hoisted_48","saveDateTimeRange","disabled","buttonDisabled","buttonText","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","closeModal","savingConfirmationEvent","_hoisted_56","_hoisted_57"],"sources":["C:\\Users\\Asus\\Desktop\\Clinic\\Working System\\clinicsystem\\src\\views\\ClientView.vue"],"sourcesContent":["<!-- ClientView.vue -->\n\n<script>\n\nimport FullCalendar from '@fullcalendar/vue3'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport listPlugin from '@fullcalendar/list'\n\nimport axios from 'axios';\nimport bootstrap5Plugin from '@fullcalendar/bootstrap5'\nimport * as bootstrap from 'bootstrap';\n\nfunction formatDatetime(datetimeStr) {\n  return datetimeStr.replace('T', ' ').replace(/\\+.*$/, '');\n}\n\nfunction updateErrorMessage(message) {\n  const errorMessageElement = document.getElementById('errorMessage');\n  errorMessageElement.textContent = message;\n}\n\nexport default {\n  components: {\n    FullCalendar\n  },\n\n  data: function () {\n    return {\n      showDateTimeInputs: false,\n      selectedDate: '',\n      selectedTime: '',\n      buttonText: 'Save changes',\n      buttonDisabled: false,\n      modal: null,\n      errorModal: null,\n      savingConfirmation: null,\n      saveDateTimeRangeModal: null,\n      nameInput: '',\n      lastnameInput: '',\n      emailInput: '',\n      nameRegex: /^[a-zA-Z\\s]*$/,\n      // emailRegex: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n      emailRegex: /^[a-zA-Z0-9._]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n      numberRegex: /^09\\d{9}$/,\n      showEmailPhoneError: false,\n      nameInputValid: true,\n        lastnameInputValid: true,\n        emailInputValid: true,\n        validEmail: true,\n        validNumber: true,\n\n      calendarOptions: {\n        customButtons: {\n          manuallyAddTime: {\n            text: 'Manually add Time',\n            click: this.manuallyAddTime\n          }\n        },\n        //1 day only\n        selectAllow: function (selectionInfo) {\n          \n          let startDate = selectionInfo.start;\n          let endDate = selectionInfo.end;\n          endDate.setSeconds(endDate.getSeconds() - 1);  // allow full day selection\n          if (startDate.getDate() === endDate.getDate()) {\n            return true;\n          } else {\n            return false;\n          }\n        },\n        plugins: [\n          bootstrap5Plugin,\n          listPlugin,\n          dayGridPlugin,\n          timeGridPlugin,\n          interactionPlugin // needed for dateClick\n        ],\n        headerToolbar: {\n          left: 'prev,next today manuallyAddTime',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'\n        },\n        themeSystem: 'bootstrap5',\n        initialView: 'dayGridMonth',\n        editable: false,\n        selectable: true,\n        selectMirror: true,\n        dayMaxEvents: true,\n        weekends: true,\n        select: this.handleDateSelect,\n        eventsSet: this.handleEvents,\n        eventDisplay: 'block',\n        slotMinTime: '05:00',\n        slotMaxTime: '17:00',\n        slotDuration: '01:00',\n        allDaySlot: false,\n      },\n      allevents: [],\n    }\n  },\n\n  mounted() {\n    this.fetchEvents();\n    this.modal = new bootstrap.Modal(document.getElementById('exampleModal'), {\n      // Optional: specify options here\n    });\n    this.errorModal = new bootstrap.Modal(document.getElementById('errorModal'), {\n      // Optional: specify options here\n    });\n    \n    this.savingConfirmation = new bootstrap.Modal(document.getElementById('savingConfirmation'), {\n      // Optional: specify options here\n    });\n    \n    this.saveDateTimeRangeModal = new bootstrap.Modal(document.getElementById('saveDateTimeRangeModal'), {\n      // Optional: specify options here\n    });\n  },\n\n  methods: {\n\n    saveDateTimeRange() {\n      \n      console.log(\"Selected Date:\", this.selectedDate);\n      console.log(\"Selected Time:\", document.getElementById(\"time\").value);\n    },\n\n    manuallyAddTime() {\n      this.showDateTimeInputs = true;\n      // Implement the logic for adding time manually here\n      this.modal.show();\n    },\n\n    fetchEvents() {\n      axios.get('http://localhost:8000/api/events')\n        .then(response => {\n\n          let eventsFromAPI = response.data.filter(event => event.user === 'clientApproval').map(event => {\n\n            let color;\n            switch (event.user) {\n              case 'clientApproval':\n                color = '#007FFF';\n                break;\n              case 'admin':\n                color = '#FF2D00';\n                break;\n              default:\n                color = '#007FFF';\n                break;\n            }\n\n            return {\n              id: event.id,\n              title: event.title,\n              start: event.start,\n              end: event.end,\n              allDay: event.allDay,\n              user: event.user,\n              color: color // Assign color based on user type\n            };\n          });\n\n          this.calendarOptions.events = eventsFromAPI;\n\n        })\n        .catch(error => {\n          console.error('Error fetching events:', error);\n        });\n    },\n\n    handleDateSelect(selectInfo) {\n      this.showDateTimeInputs = false;\n    const moment = require('moment');\n\n    const selectedTime = moment(selectInfo.startStr).format('HH:mm');\n    const currentTime = moment().format('HH:mm');\n    // console.log(\"selectedTime\", selectedTime, \"currentTime\", currentTime);\n\n    if (selectInfo.view.type === 'dayGridMonth' &&\n        ((currentTime >= '00:00' && currentTime < '05:00') ||\n        (currentTime >= '12:00' && currentTime < '13:00') ||\n        (currentTime >= '17:00' && currentTime < '24:00'))) {\n        updateErrorMessage(\"No Appointment on this hours\");\n        this.errorModal.show();\n    } else if ((selectInfo.view.type === 'timeGridWeek' || selectInfo.view.type === 'timeGridDay') &&\n        ((selectedTime >= '00:00' && selectedTime < '05:00') ||\n        (selectedTime >= '12:00' && selectedTime < '13:00') ||\n        (selectedTime >= '17:00' && selectedTime < '24:00'))) {\n        updateErrorMessage(\"No Appointment on this hours\");\n        this.errorModal.show();\n    } else {\n        this.checkEventOverlap(selectInfo);\n    }\n},\n\n    checkEventOverlap(selectInfo) {\n      const moment = require('moment');\n      const currentTime = moment().format('HH:mm:ss');\n      let startSelectedDate = selectInfo.startStr + \" \" + currentTime;\n\n      axios.get('http://localhost:8000/api/events')\n        .then(response => {\n          let canAddEvent = true;\n          response.data.forEach(event => {\n            const moment = require('moment');\n            let startSelectedDateNoTime = moment(selectInfo.startStr).format('YYYY-MM-DD');\n            let EndSelectedDateNoTime = moment(event.start).format('YYYY-MM-DD');\n            if (event.user === 'admin' && event.allDay === 1 && startSelectedDateNoTime === EndSelectedDateNoTime || event.user === 'admin' && startSelectedDate >= event.start && startSelectedDate <= event.end) {\n              canAddEvent = false;\n              updateErrorMessage(\"The schedule is busy on this day. Please select another date\");\n              this.errorModal.show();\n            }\n          });\n\n          if (canAddEvent) {\n            this.modal.show();\n            this.selectedInfo = selectInfo;\n          }\n        })\n        .catch(error => {\n          console.error('Error fetching events:', error);\n        });\n    },\n\n    closeModal(){\n      this.modal.show();\n      this.savingConfirmation.hide();\n    },\n\n    savingConfirmationEvent(confirmSavingInfo) {\n      this.buttonText = 'Processing';\n      this.buttonDisabled = true;\n      \n      this.newEventTitle = this.nameInput + ' ' + this.lastnameInput;\n\n        let calendarApi = confirmSavingInfo.view.calendar;\n        calendarApi.unselect() // clear date selection\n\n        // Format start and end dates\n        let start = formatDatetime(confirmSavingInfo.startStr);\n        let end = formatDatetime(confirmSavingInfo.endStr);\n\n        const moment = require('moment');\n        let currentTimeNow = moment().format('HH:00:00');\n        let startNow = currentTimeNow;\n        let endNow = moment(currentTimeNow, 'HH:00:00').add(1, 'hour').format('HH:00:00');\n        \n        \n        let lastStart = start + ' ' + startNow;\n        let lastEnd = end + ' ' + endNow;\n        console.log(\"lastStart\", lastStart,\"lastEnd\", lastEnd);\n\n        axios.post('http://localhost:8000/api/events', {\n          title: this.newEventTitle,\n          email: this.emailInput,\n          start: lastStart,\n          end: lastEnd,\n          user: 'clientApproval',\n          allDay: false\n        })\n          .then(response => {\n            console.log(response.data);\n            this.savingConfirmation.hide();\n            this.buttonText = 'Save changes';\n            this.buttonDisabled = false;\n            this.allevents.push(response.data);\n\n            // calendarApi.addEvent(response.data);\n            this.fetchEvents();\n\n            // this.newEventTitle = '';\n            this.nameInput = '';\n            this.lastnameInput = '';\n            this.emailInput = '';\n\n          })\n          .catch(error => {\n            // Handle error\n            console.error('Error adding event:', error.response.data);\n          });\n    },\n\n    saveChanges(selectedInfo) {\n\n         // Reset validity flags\n    this.nameInputValid = this.nameInput.trim() !== '';\n    this.lastnameInputValid = this.lastnameInput.trim() !== '';\n    this.showEmailPhoneError = this.emailInput.trim() !== '';\n    this.emailInputValid = this.emailInput.trim() !== '';\n    this.validEmail = this.emailRegex.test(this.emailInput);\n    this.validNumber = this.numberRegex.test(this.emailInput);\n\n    // Check if all inputs are filled\n\n  // Check if all inputs are filled\n  if (!this.nameInputValid || !this.lastnameInputValid || !this.emailInputValid) {\n    return;\n  }\n\n  // Validation for Name Input\n  if (!this.nameRegex.test(this.nameInput)) {\n    this.nameInputValid = false;\n    return;\n  }\n\n  // Validation for Lastname Input\n  if (!this.nameRegex.test(this.lastnameInput)) {\n    this.lastnameInputValid = false;\n    return;\n  }\n\n  // Validation for Email Input\n  if (!this.emailRegex.test(this.emailInput) && !this.numberRegex.test(this.emailInput)) {\n    this.emailInputValid = false;\n    return;\n  }\n      // Show the error modal\n      this.modal.hide();\n      this.savingConfirmation.show();\n      this.confirmSavingInfo = selectedInfo;\n    },\n\n  }\n}\n</script>\n\n<template>\n  <div class='demo-app'>\n    <div class='demo-app-sidebar' style=\"display: flex; flex-direction: column; justify-content: space-between;\">\n      <div>\n        <div class=\"text-center\">\n          <img src=\"../assets/icon.png\" alt=\"Ears Nose and Throat\" style=\"width: 160px; height: auto; \"\n            class=\"img-fluid\">\n        </div>\n        <div style=\"margin: 50px 5px 10px 5px ;\">\n          <h2>Instructions</h2>\n          <ul style=\"text-align: left;\">\n            <li>Select dates and you will be prompted to create a new event</li>\n            <li>Drag, drop, and resize events</li>\n            <li>Click an event to delete it</li>\n          </ul>\n        </div>\n      </div>\n\n      <!-- Admin Login -->\n      <div class=\"text-center\" style=\"margin: 10px 5px 10px 5px ;\">\n        <router-link :to=\"{ name: 'about' }\">about</router-link>\n        <router-view />\n      </div>\n\n      <!-- Admin Login -->\n      <div class=\"text-center\" style=\"margin: 10px 5px 10px 5px ;\">\n        <router-link :to=\"{ name: 'login' }\">Admin Login</router-link>\n        <router-view />\n      </div>\n    </div>\n\n\n    <div class='demo-app-main'>\n      <FullCalendar class='demo-app-calendar' :options='calendarOptions'>\n        <template v-slot:eventContent='arg'>\n          <b>{{ arg.start }}</b>\n          <i>{{ arg.event.title }}</i>\n        </template>\n      </FullCalendar>\n\n      <!-- Modal -->\n      <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog modal-dialog-centered\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header bg-primary text-white\">\n              <h5 class=\"modal-title\" id=\"exampleModalLabel\">Create Schedule</h5>\n              <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <!-- Modal Body Content -->\n            <div class=\"modal-body\">\n\n              <label v-if=\"showDateTimeInputs\" for=\"date\">Date:</label>\n              <input v-if=\"showDateTimeInputs\" type=\"date\" id=\"date\" v-model=\"selectedDate\">\n          \n              <label v-if=\"showDateTimeInputs\" for=\"time\">Time:</label>\n                <select v-if=\"showDateTimeInputs\" id=\"time\" name=\"time\" v-model=\"selectedTime\">\n                  <option value=\"05:00 AM\">05:00 AM</option>\n                  <option value=\"06:00 AM\">06:00 AM</option>\n                  <option value=\"07:00 AM\">07:00 AM</option>\n                  <option value=\"08:00 AM\">08:00 AM</option>\n                  <option value=\"09:00 AM\">09:00 AM</option>\n                  <option value=\"10:00 AM\">10:00 AM</option>\n                  <option value=\"11:00 AM\">11:00 AM</option>\n                  <option value=\"12:00 PM\">12:00 PM</option>\n                  <option value=\"01:00 PM\">01:00 PM</option>\n                  <option value=\"02:00 PM\">02:00 PM</option>\n                  <option value=\"03:00 PM\">03:00 PM</option>\n                  <option value=\"04:00 PM\">04:00 PM</option>\n                  <option value=\"05:00 PM\">05:00 PM</option>\n                </select>\n\n              <div class=\"mb-3\">\n                <input type=\"text\" class=\"form-control\" id=\"nameInput\" v-model=\"nameInput\" placeholder=\"Name\">\n                <small v-if=\"!nameInput && !nameInputValid\" class=\"text-danger\">Please fill Name</small>\n                <small v-else-if=\"nameInput && !nameRegex.test(nameInput) && !numberRegex.test(nameInput)\" class=\"text-danger\">Please fill valid valid Name</small>\n              </div>\n\n              <div class=\"mb-3\">\n                  <input type=\"text\" class=\"form-control\" id=\"lastnameInput\" v-model=\"lastnameInput\" placeholder=\"Lastname\">\n                  <small v-if=\"!lastnameInput && !lastnameInputValid\" class=\"text-danger\">Please fill Lastname</small>\n                  <small v-else-if=\"lastnameInput && !nameRegex.test(lastnameInput) && !numberRegex.test(lastnameInput)\" class=\"text-danger\">Please fill valid valid Lastname</small>\n              </div>\n              <div class=\"mb-3\">\n                <input type=\"email\" class=\"form-control\" id=\"emailInput\" v-model=\"emailInput\" placeholder=\"Email\" autocomplete=\"current-emailInput\" required>\n                <small v-if=\"!emailInput && !emailInputValid\" class=\"text-danger\">Please fill contact information</small>\n                <small v-else-if=\"emailInput && !emailRegex.test(emailInput) && !numberRegex.test(emailInput)\" class=\"text-danger\">Please fill valid Email or valid phone number</small>\n              </div>\n              <!-- Rest of your modal content -->\n            </div>\n\n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n              <button type=\"button\" class=\"btn btn-primary\" @click=\"saveChanges(selectedInfo)\">Save changes</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n                  <!-- Manually schedule -->\n      <div class=\"modal fade\" id=\"saveDateTimeRangeModal\" tabindex=\"-1\" aria-labelledby=\"saveDateTimeRangeModal\" aria-hidden=\"true\">\n        <div class=\"modal-dialog modal-dialog-centered\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header bg-primary text-white\">\n              <h5 class=\"modal-title\" id=\"exampleModalLabel\">Manually create schedule</h5>\n              <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <!-- Modal Body Content -->\n            <div class=\"modal-body\">\n              <label for=\"date\">Date:</label>\n              <input type=\"date\" id=\"date\" v-model=\"selectedDate\">\n          \n              <label for=\"time\">Time:</label>\n                <select id=\"time\" name=\"time\">\n                  <option value=\"05:00 AM\">05:00 AM</option>\n                  <option value=\"06:00 AM\">06:00 AM</option>\n                  <option value=\"07:00 AM\">07:00 AM</option>\n                  <option value=\"08:00 AM\">08:00 AM</option>\n                  <option value=\"09:00 AM\">09:00 AM</option>\n                  <option value=\"10:00 AM\">10:00 AM</option>\n                  <option value=\"11:00 AM\">11:00 AM</option>\n                  <option value=\"12:00 PM\">12:00 PM</option>\n                  <option value=\"01:00 PM\">01:00 PM</option>\n                  <option value=\"02:00 PM\">02:00 PM</option>\n                  <option value=\"03:00 PM\">03:00 PM</option>\n                  <option value=\"04:00 PM\">04:00 PM</option>\n                  <option value=\"05:00 PM\">05:00 PM</option>\n                </select>\n            </div>\n              \n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n              <button type=\"button\" class=\"btn btn-primary\" @click=\"saveDateTimeRange()\" :disabled=\"buttonDisabled\"> {{ buttonText }} </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n            <!-- Saving Confirmation -->\n      <div class=\"modal fade\" id=\"savingConfirmation\" tabindex=\"-1\" aria-labelledby=\"savingConfirmation\" aria-hidden=\"true\">\n        <div class=\"modal-dialog modal-dialog-centered\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header bg-primary text-white\">\n              <h5 class=\"modal-title\" id=\"exampleModalLabel\">Are you sure you want to save?</h5>\n              <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <!-- Modal Body Content -->\n            <div class=\"modal-body\">\n              <h4>\n                  You cant edit or delete your schedule once it save \n                </h4>\n            </div>\n              \n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" @click=\"closeModal()\">Close</button>\n              <button type=\"button\" class=\"btn btn-primary\" @click=\"savingConfirmationEvent(selectedInfo)\" :disabled=\"buttonDisabled\"> {{ buttonText }} </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n        <!-- Error -->\n        <div class=\"modal fade\" id=\"errorModal\" tabindex=\"-1\" aria-labelledby=\"errorModal\" aria-hidden=\"true\">\n          <div class=\"modal-dialog modal-dialog-centered\">\n            <div class=\"modal-content\">\n              <div class=\"modal-header bg-danger text-white\">\n                <h5 class=\"modal-title bi-exclamation-triangle-fill\"> Error</h5>\n                <button type=\"button\" class=\"btn-close btn-close-white\" data-bs-dismiss=\"modal\"\n                  aria-label=\"Close\"></button>\n              </div>\n              <div class=\"modal-body\">\n                <h4>\n                  <p><i class=\"bi\"></i> <span id=\"errorMessage\"></span></p>\n                </h4>\n              </div>\n              <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-danger\" data-bs-dismiss=\"modal\">Close</button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n    </div>\n  </div>\n</template>\n\n\n\n<style lang='css'>\nhtml,\nbody {\n  height: 100vh;\n  margin: 0;\n  padding: 0;\n\n  /* overflow: hidden; Disable scrolling of the entire page */\n}\n\n@media (max-width: 650px) {\n  ul {\n    margin: 0;\n    /* padding: 0 0 0 1.5em; */\n    font-size: 10px;\n  }\n\n  li {\n    /* margin: 1.5em 0; */\n    padding: 0;\n    font-size: 10px;\n  }\n}\n\n/* .modal-backdrop {\n    display: none;\n    z-index: 1040 !important;\n}\n\n.modal-content {\n    margin: 2px auto;\n    z-index: 1100 !important;\n} */\n\nh2 {\n  margin: 0;\n  font-size: 16px;\n}\n\nul {\n  margin: 0;\n  /* padding: 0 0 0 1.5em; */\n}\n\nli {\n  /* margin: 1.5em 0; */\n  padding: 0;\n}\n\nb {\n  /* used for event dates/times */\n  margin-right: 3px;\n  color: black;\n}\n\ni {\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n\n.demo-app {\n  display: flex;\n  font-family: Arial, Helvetica Neue, Helvetica, sans-serif;\n  font-size: 14px;\n  max-height: 100vh;\n  /* Set sidebar height to match viewport height */\n}\n\n.demo-app-sidebar {\n  padding: 10px;\n  width: 300px;\n  line-height: 1.5;\n  /* background: #eaf9ff; */\n  background-color: #e6e7e9;\n  border-right: 1px solid #d3e2e8;\n  /* overflow-y: auto; */\n  max-height: 100vh;\n  /* Set sidebar height to match viewport height */\n}\n\n.demo-app-main {\n  flex-grow: 1;\n  padding: 3em;\n}\n\n/* Adjust the height of FullCalendar to fit within the main content area */\n.demo-app-calendar {\n  height: calc(100vh - 6em);\n  /* Adjust as needed, considering header/footer heights */\n}\n\n.fc {\n  /* the calendar root */\n  /* max-width: 1100px; */\n  margin: 0 auto;\n  max-height: 100vh;\n  /* Set sidebar height to match viewport height */\n}\n\n.fc-col-header-cell-cushion {\n  text-decoration: none;\n  color: black;\n}\n\n.fc-scrollgrid .fc-daygrid-day-number {\n  text-decoration: none;\n  color: black;\n\n}\n\n.fc-event {\n  color: white;\n}\n\n.fc-list-event-title {\n  color: black;\n}\n\n.fc-list-event-time {\n  color: black;\n}\n\n.modal-backdrop {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n\n/* Make the text bold in the week view of FullCalendar */\n.fc-timegrid-event .fc-content {\n  /* For event titles */\n  font-weight: bold;\n}\n\n.fc-timegrid-axis,\n/* For time labels on the left */\n.fc-day-header,\n/* For day headers */\n.fc-timegrid-slots td,\n/* For time slots */\n.fc-timegrid-slots .fc-timegrid-slot-lane {\n  /* For the content within time slots */\n  font-weight: bold;\n}\n\n\n/* Make the dates bold in FullCalendar */\n.fc-daygrid-day-number {\n  /* For day numbers in month view */\n  font-weight: bold;\n}\n\n.fc-col-header {\n  /* For day headers (e.g., Sun, Mon, Tue) */\n  font-weight: bold;\n  background-color: white;\n  font-size: 20px;\n}\n\n.fc table {\n  font-size: 14px;\n}\n\n\n/* Make the text bold in FullCalendar */\n.fc-daygrid-event,\n/* Event titles */\n.fc-list-item-title\n\n/* List view event titles */\n  {\n  font-weight: bold;\n  overflow: hidden;\n}\n\n.fc-toolbar-title\n\n/* Calendar header title */\n  {\n  font-weight: bold;\n  color: white;\n}\n\n.fc-view-harness {\n  background-color: rgba(230, 231, 233, 0.783);\n  /* Adjust the alpha value (0.5) to make it more or less transparent */\n}\n\n:root {\n  --fc-list-event-hover-bg-color: #ADD8E6;\n  /* Light blue color */\n  --fc-today-bg-color: rgba(77, 76, 75, 0.53);\n}\n\n.fc-day:hover {\n  background-color: #ADD8E6;\n  /* Light blue color on hover */\n  cursor: pointer;\n  /* Change cursor to pointer on hover */\n}\n\n.fc-event-time,\n.fc-event-title {\n  display: inline;\n}\n\n.fc-timegrid-slot {\n  line-height: 46px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}