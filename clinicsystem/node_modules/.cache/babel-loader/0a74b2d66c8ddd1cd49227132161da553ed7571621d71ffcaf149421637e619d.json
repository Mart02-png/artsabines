{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      email: '',\n      password: '',\n      errorMessage: '',\n      buttonText: 'Login',\n      buttonDisabled: false\n    };\n  },\n  methods: {\n    login() {\n      this.buttonText = 'Logging in Please wait...';\n      this.buttonDisabled = true;\n      // Prepare the login credentials\n      const credentials = {\n        email: this.email,\n        password: this.password\n      };\n\n      // Make a POST request to the login endpoint\n      axios.post('http://localhost:8000/api/auth/login', credentials).then(response => {\n        // Handle successful login\n        const token = response.data.token;\n        console.log('Logged in successfully');\n        console.log('Token:', token);\n        this.$router.push({\n          name: 'admin'\n        });\n        this.buttonText = 'Login';\n        this.buttonDisabled = false;\n        // Perform any additional actions after login, such as storing the token or redirecting the user\n      }).catch(error => {\n        // Handle error\n        console.error('Login error:', error.response.data.message);\n      });\n    }\n\n    // login() {\n    //   this.buttonText = 'Logging in Please wait...';\n    //   this.buttonDisabled = true;\n\n    //   // Perform login request using Axios\n    //   axios.post('http://localhost:8000/api/auth/login', {\n    //     email: this.email,\n    //     password: this.password\n    //   })\n    //   .then(response => {\n    //     // Handle successful login\n    //     console.log(response.data); // For debugging\n    //     // You can store the token in local storage or cookies\n    //     localStorage.setItem('token', response.data.token);\n    //     // Redirect to another page or perform any other action\n    //     // Route to the admin view\n    //     localStorage.setItem('email', this.email);\n    //     this.$router.push({ name: 'admin' });\n    //     this.buttonText = 'Login';\n    //     this.buttonDisabled = false;\n    //   })\n    //   .catch(error => {\n    //     // Handle login error\n    //     console.error(error.response.data); // For debugging\n    //     this.errorMessage = error.response.data.error || 'Login failed. Please try again.';\n    //     this.errorMessage = error.response.data.message;\n    //     this.buttonText = 'Login';\n    //     this.buttonDisabled = false;\n    //   });\n    // }\n  }\n};","map":{"version":3,"names":["axios","data","email","password","errorMessage","buttonText","buttonDisabled","methods","login","credentials","post","then","response","token","console","log","$router","push","name","catch","error","message"],"sources":["C:\\Users\\Asus\\Desktop\\Clinic\\Working System\\clinicsystem\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n    <div class=\"app\">\r\n      <div class=\"container\">\r\n        <div class=\"d-flex justify-content-center align-items-center\" style=\"min-height: 100vh;\">\r\n       \r\n          <div class=\"col-md-6\">\r\n            <div class=\"card border-0 shadow-lg bg-transparent\">\r\n              <div class=\"card-body p-5\">\r\n                <div class=\"text-center mb-4\">\r\n                  <img src=\"../assets/icon.png\" alt=\"Logo\" width=\"160\">\r\n                </div>\r\n                <form @submit.prevent=\"login\">\r\n                  <div class=\"mb-3\">\r\n                    <label for=\"email\" class=\"form-label visually-hidden\">Email</label>\r\n                    <div class=\"input-group\">\r\n                      <span class=\"input-group-text\"><img src=\"../assets/email.png\" width=\"40\" alt=\"Email\"></span>\r\n                      <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Email\" v-model=\"email\" autocomplete=\"current-email\" required>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"mb-3\">\r\n                    <label for=\"password\" class=\"form-label visually-hidden\">Password</label>\r\n                    <div class=\"input-group\">\r\n                      <span class=\"input-group-text\"><img src=\"../assets/password.png\" width=\"40\" alt=\"Password\"></span>\r\n                      <input type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"Password\" v-model=\"password\" autocomplete=\"current-password\" required>\r\n                    </div>\r\n                  </div>\r\n                  <button type=\"submit\" class=\"btn btn-primary w-100\" :disabled=\"buttonDisabled\"> {{ buttonText }}</button>\r\n                </form>\r\n                <p class=\"text-center mt-3 text-danger\" v-if=\"errorMessage\">{{ errorMessage }}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        email: '',\r\n        password: '',\r\n        errorMessage: '',\r\n        buttonText: 'Login',\r\n        buttonDisabled: false,\r\n      };\r\n    },\r\n    methods: {\r\n\r\n      login() {\r\n        this.buttonText = 'Logging in Please wait...';\r\n        this.buttonDisabled = true;\r\n      // Prepare the login credentials\r\n      const credentials = {\r\n        email: this.email,\r\n        password: this.password\r\n      };\r\n\r\n      // Make a POST request to the login endpoint\r\n      axios.post('http://localhost:8000/api/auth/login', credentials)\r\n        .then(response => {\r\n          // Handle successful login\r\n          const token = response.data.token;\r\n          console.log('Logged in successfully');\r\n          console.log('Token:', token);\r\n          this.$router.push({ name: 'admin' });\r\n          this.buttonText = 'Login';\r\n          this.buttonDisabled = false;\r\n          // Perform any additional actions after login, such as storing the token or redirecting the user\r\n        })\r\n        .catch(error => {\r\n          // Handle error\r\n          console.error('Login error:', error.response.data.message);\r\n        });\r\n    }\r\n\r\n      // login() {\r\n      //   this.buttonText = 'Logging in Please wait...';\r\n      //   this.buttonDisabled = true;\r\n\r\n      //   // Perform login request using Axios\r\n      //   axios.post('http://localhost:8000/api/auth/login', {\r\n      //     email: this.email,\r\n      //     password: this.password\r\n      //   })\r\n      //   .then(response => {\r\n      //     // Handle successful login\r\n      //     console.log(response.data); // For debugging\r\n      //     // You can store the token in local storage or cookies\r\n      //     localStorage.setItem('token', response.data.token);\r\n      //     // Redirect to another page or perform any other action\r\n      //     // Route to the admin view\r\n      //     localStorage.setItem('email', this.email);\r\n      //     this.$router.push({ name: 'admin' });\r\n      //     this.buttonText = 'Login';\r\n      //     this.buttonDisabled = false;\r\n      //   })\r\n      //   .catch(error => {\r\n      //     // Handle login error\r\n      //     console.error(error.response.data); // For debugging\r\n      //     this.errorMessage = error.response.data.error || 'Login failed. Please try again.';\r\n      //     this.errorMessage = error.response.data.message;\r\n      //     this.buttonText = 'Login';\r\n      //     this.buttonDisabled = false;\r\n      //   });\r\n      // }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  \r\n  #app {\r\n  background-image: url(\"../assets/bgLogin.jpg\");\r\n  background-size: cover;\r\n  background-position: center;\r\n  height: 100vh;\r\n}\r\n  .visually-hidden {\r\n    position: absolute !important;\r\n    width: 1px !important;\r\n    height: 1px !important;\r\n    padding: 0 !important;\r\n    margin: -1px !important;\r\n    overflow: hidden !important;\r\n    clip: rect(0, 0, 0, 0) !important;\r\n    white-space: nowrap !important;\r\n    border: 0 !important;\r\n  }\r\n\r\n  /* Additional style for making card border transparent */\r\n.card {\r\n  border-color: rgba(255, 255, 255, 0.7);\r\n  border-radius: 20px;\r\n}\r\n\r\n.card-body {\r\n  background-color: rgba(255, 255, 255, 0.7); /* Optional: If you want the card body to be semi-transparent too */\r\n  border-radius: 20px;\r\n}\r\n  </style>\r\n  "],"mappings":";AAsCE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE,EAAE;MAChBC,UAAU,EAAE,OAAO;MACnBC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IAEPC,KAAKA,CAAA,EAAG;MACN,IAAI,CAACH,UAAS,GAAI,2BAA2B;MAC7C,IAAI,CAACC,cAAa,GAAI,IAAI;MAC5B;MACA,MAAMG,WAAU,GAAI;QAClBP,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,QAAQ,EAAE,IAAI,CAACA;MACjB,CAAC;;MAED;MACAH,KAAK,CAACU,IAAI,CAAC,sCAAsC,EAAED,WAAW,EAC3DE,IAAI,CAACC,QAAO,IAAK;QAChB;QACA,MAAMC,KAAI,GAAID,QAAQ,CAACX,IAAI,CAACY,KAAK;QACjCC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACrCD,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,KAAK,CAAC;QAC5B,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAQ,CAAC,CAAC;QACpC,IAAI,CAACb,UAAS,GAAI,OAAO;QACzB,IAAI,CAACC,cAAa,GAAI,KAAK;QAC3B;MACF,CAAC,EACAa,KAAK,CAACC,KAAI,IAAK;QACd;QACAN,OAAO,CAACM,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACR,QAAQ,CAACX,IAAI,CAACoB,OAAO,CAAC;MAC5D,CAAC,CAAC;IACN;;IAEE;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}