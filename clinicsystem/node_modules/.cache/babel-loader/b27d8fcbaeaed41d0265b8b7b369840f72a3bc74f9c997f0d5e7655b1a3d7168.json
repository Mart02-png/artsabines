{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveScript = exports.canInlineTemplate = exports.typeDepToSFCMap = exports.clientCache = void 0;\nconst util_1 = require(\"./util\");\nconst compiler_1 = require(\"./compiler\");\nconst {\n  compileScript\n} = compiler_1.compiler;\nexports.clientCache = new WeakMap();\nconst serverCache = new WeakMap();\nexports.typeDepToSFCMap = new Map();\n/**\n * inline template mode can only be enabled if:\n * - is production (separate compilation needed for HMR during dev)\n * - template has no pre-processor (separate loader chain required)\n * - template is not using src\n */\nfunction canInlineTemplate(descriptor, isProd) {\n  const templateLang = descriptor.template && descriptor.template.lang;\n  const templateSrc = descriptor.template && descriptor.template.src;\n  return isProd && !!descriptor.scriptSetup && !templateLang && !templateSrc;\n}\nexports.canInlineTemplate = canInlineTemplate;\nfunction resolveScript(descriptor, scopeId, options, loaderContext) {\n  var _a;\n  if (!descriptor.script && !descriptor.scriptSetup) {\n    return null;\n  }\n  const isProd = loaderContext.mode === 'production' || process.env.NODE_ENV === 'production';\n  const isServer = (_a = options.isServerBuild) !== null && _a !== void 0 ? _a : loaderContext.target === 'node';\n  const enableInline = canInlineTemplate(descriptor, isProd);\n  const cacheToUse = isServer ? serverCache : exports.clientCache;\n  const cached = cacheToUse.get(descriptor);\n  if (cached) {\n    return cached;\n  }\n  let resolved = null;\n  let templateCompiler;\n  if (typeof options.compiler === 'string') {\n    templateCompiler = require(options.compiler);\n  } else {\n    templateCompiler = options.compiler;\n  }\n  try {\n    resolved = compileScript(descriptor, {\n      id: scopeId,\n      isProd,\n      inlineTemplate: enableInline,\n      // @ts-ignore this has been removed in 3.4\n      reactivityTransform: options.reactivityTransform,\n      propsDestructure: options.propsDestructure,\n      defineModel: options.defineModel,\n      babelParserPlugins: options.babelParserPlugins,\n      templateOptions: {\n        ssr: isServer,\n        compiler: templateCompiler,\n        compilerOptions: Object.assign(Object.assign({}, options.compilerOptions), (0, util_1.resolveTemplateTSOptions)(descriptor, options)),\n        transformAssetUrls: options.transformAssetUrls || true\n      }\n    });\n  } catch (e) {\n    loaderContext.emitError(e);\n  }\n  if (!isProd && (resolved === null || resolved === void 0 ? void 0 : resolved.deps)) {\n    for (const [key, sfcs] of exports.typeDepToSFCMap) {\n      if (sfcs.has(descriptor.filename) && !resolved.deps.includes(key)) {\n        sfcs.delete(descriptor.filename);\n        if (!sfcs.size) {\n          exports.typeDepToSFCMap.delete(key);\n        }\n      }\n    }\n    for (const dep of resolved.deps) {\n      const existingSet = exports.typeDepToSFCMap.get(dep);\n      if (!existingSet) {\n        exports.typeDepToSFCMap.set(dep, new Set([descriptor.filename]));\n      } else {\n        existingSet.add(descriptor.filename);\n      }\n    }\n  }\n  cacheToUse.set(descriptor, resolved);\n  return resolved;\n}\nexports.resolveScript = resolveScript;","map":{"version":3,"names":["Object","defineProperty","exports","value","resolveScript","canInlineTemplate","typeDepToSFCMap","clientCache","util_1","require","compiler_1","compileScript","compiler","WeakMap","serverCache","Map","descriptor","isProd","templateLang","template","lang","templateSrc","src","scriptSetup","scopeId","options","loaderContext","_a","script","mode","process","env","NODE_ENV","isServer","isServerBuild","target","enableInline","cacheToUse","cached","get","resolved","templateCompiler","id","inlineTemplate","reactivityTransform","propsDestructure","defineModel","babelParserPlugins","templateOptions","ssr","compilerOptions","assign","resolveTemplateTSOptions","transformAssetUrls","e","emitError","deps","key","sfcs","has","filename","includes","delete","size","dep","existingSet","set","Set","add"],"sources":["C:/Users/Asus/Desktop/Clinic/Working System/clinicsystem/node_modules/vue-loader/dist/resolveScript.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveScript = exports.canInlineTemplate = exports.typeDepToSFCMap = exports.clientCache = void 0;\nconst util_1 = require(\"./util\");\nconst compiler_1 = require(\"./compiler\");\nconst { compileScript } = compiler_1.compiler;\nexports.clientCache = new WeakMap();\nconst serverCache = new WeakMap();\nexports.typeDepToSFCMap = new Map();\n/**\n * inline template mode can only be enabled if:\n * - is production (separate compilation needed for HMR during dev)\n * - template has no pre-processor (separate loader chain required)\n * - template is not using src\n */\nfunction canInlineTemplate(descriptor, isProd) {\n    const templateLang = descriptor.template && descriptor.template.lang;\n    const templateSrc = descriptor.template && descriptor.template.src;\n    return isProd && !!descriptor.scriptSetup && !templateLang && !templateSrc;\n}\nexports.canInlineTemplate = canInlineTemplate;\nfunction resolveScript(descriptor, scopeId, options, loaderContext) {\n    var _a;\n    if (!descriptor.script && !descriptor.scriptSetup) {\n        return null;\n    }\n    const isProd = loaderContext.mode === 'production' || process.env.NODE_ENV === 'production';\n    const isServer = (_a = options.isServerBuild) !== null && _a !== void 0 ? _a : loaderContext.target === 'node';\n    const enableInline = canInlineTemplate(descriptor, isProd);\n    const cacheToUse = isServer ? serverCache : exports.clientCache;\n    const cached = cacheToUse.get(descriptor);\n    if (cached) {\n        return cached;\n    }\n    let resolved = null;\n    let templateCompiler;\n    if (typeof options.compiler === 'string') {\n        templateCompiler = require(options.compiler);\n    }\n    else {\n        templateCompiler = options.compiler;\n    }\n    try {\n        resolved = compileScript(descriptor, {\n            id: scopeId,\n            isProd,\n            inlineTemplate: enableInline,\n            // @ts-ignore this has been removed in 3.4\n            reactivityTransform: options.reactivityTransform,\n            propsDestructure: options.propsDestructure,\n            defineModel: options.defineModel,\n            babelParserPlugins: options.babelParserPlugins,\n            templateOptions: {\n                ssr: isServer,\n                compiler: templateCompiler,\n                compilerOptions: Object.assign(Object.assign({}, options.compilerOptions), (0, util_1.resolveTemplateTSOptions)(descriptor, options)),\n                transformAssetUrls: options.transformAssetUrls || true,\n            },\n        });\n    }\n    catch (e) {\n        loaderContext.emitError(e);\n    }\n    if (!isProd && (resolved === null || resolved === void 0 ? void 0 : resolved.deps)) {\n        for (const [key, sfcs] of exports.typeDepToSFCMap) {\n            if (sfcs.has(descriptor.filename) && !resolved.deps.includes(key)) {\n                sfcs.delete(descriptor.filename);\n                if (!sfcs.size) {\n                    exports.typeDepToSFCMap.delete(key);\n                }\n            }\n        }\n        for (const dep of resolved.deps) {\n            const existingSet = exports.typeDepToSFCMap.get(dep);\n            if (!existingSet) {\n                exports.typeDepToSFCMap.set(dep, new Set([descriptor.filename]));\n            }\n            else {\n                existingSet.add(descriptor.filename);\n            }\n        }\n    }\n    cacheToUse.set(descriptor, resolved);\n    return resolved;\n}\nexports.resolveScript = resolveScript;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}