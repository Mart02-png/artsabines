{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"First\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Second\")])], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_DataTable = _resolveComponent(\"DataTable\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" <DataTable ref=\\\"myDataTable\\\" :columns=\\\"columns\\\" :data=\\\"events\\\" /> \"), _createVNode(_component_DataTable, {\n    class: \"display\"\n  }, {\n    default: _withCtx(() => [_hoisted_1]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_createCommentVNode","_createVNode","_component_DataTable","class","default","_withCtx","_hoisted_1","_"],"sources":["C:\\Users\\Asus\\Desktop\\Clinic\\Working System\\clinicsystem\\src\\views\\AboutView.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- <DataTable ref=\"myDataTable\" :columns=\"columns\" :data=\"events\" /> -->\n    <DataTable class=\"display\">\n    <thead>\n        <tr>\n            <th>First</th>\n            <th>Second</th>\n        </tr>\n    </thead>\n</DataTable>\n  </div>\n</template>\n\n<script>\n// import DataTable from 'datatables.net-vue3';\n// import 'datatables.net-bs5'; // Or another styling library if you prefer\nimport axios from 'axios'; // Import axios for HTTP requests\n\nimport DataTable from 'datatables.net-vue3';\nimport Select from 'datatables.net-select';\n// import DataTablesCore from 'datatables.net';\nimport 'datatables.net-select';\nimport 'datatables.net-responsive';\n \nDataTable.use(Select);\n\n\nexport default {\n  components: {\n    DataTable\n  },\n  data() {\n    return {\n      columns: [\n        { data: 'id', title: 'ID' },\n        { data: 'title', title: 'Title' },\n        { data: 'email', title: 'Email' },\n      ],\n      events: []\n    };\n  },\n  mounted() {\n    this.fetchEvents();\n  },\n  methods: {\n    async fetchEvents() {\n      try {\n        const response = await axios.get('http://localhost:8000/api/events');\n        this.events = response.data.filter(event => event.user === 'clientApproval')\n                                   .map(event => ({\n                                      id: event.id,\n                                      title: event.title,\n                                      email: event.email\n                                   }));\n        this.$refs.myDataTable.refresh(); // Refresh DataTable after data update\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      }\n    }\n  }\n};\n</script>\n"],"mappings":";gCAIIA,mBAAA,CAKQ,gB,aAJJA,mBAAA,CAGK,a,aAFDA,mBAAA,CAAc,YAAV,OAAK,G,aACTA,mBAAA,CAAe,YAAX,QAAM,E;;;uBANpBC,mBAAA,CAUM,cATJC,mBAAA,6EAA0E,EAC1EC,YAAA,CAOQC,oBAAA;IAPGC,KAAK,EAAC;EAAS;IAH9BC,OAAA,EAAAC,QAAA,CAII,MAKQ,CALRC,UAKQ,C;IATZC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}